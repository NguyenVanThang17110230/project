{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar DocumentGateway =\n/*#__PURE__*/\nfunction () {\n  function DocumentGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, DocumentGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(DocumentGateway, [{\n    key: \"findByPartyId\",\n    value: function () {\n      var _findByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(idParty) {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restConnector.get(\"/documents?filter={\\\"where\\\":{\\n        \\\"partyId\\\": \\\"\".concat(idParty, \"\\\"},\\n        \\\"order\\\":\\\"createdAt DESC\\\"\\n      }\"));\n\n              case 2:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                return _context.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function findByPartyId(_x) {\n        return _findByPartyId.apply(this, arguments);\n      }\n\n      return findByPartyId;\n    }()\n  }, {\n    key: \"getByPartyId\",\n    value: function () {\n      var _getByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(idParty, options) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.restConnector.get(\"/documents?filter={\\\"where\\\":{\\n        \\\"partyId\\\": \\\"\".concat(idParty, \"\\\"},\\n        \\\"order\\\":\\\"createdAt DESC\\\", \\n        \\\"include\\\":\\\"\").concat(options.include, \"\\\"\\n      }\"));\n\n              case 2:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getByPartyId(_x2, _x3) {\n        return _getByPartyId.apply(this, arguments);\n      }\n\n      return getByPartyId;\n    }()\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_ref3) {\n        var file, title, role, creatorId, partyId, transactionId, url, documentType, bodyFormData, _bodyFormData;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                file = _ref3.file, title = _ref3.title, role = _ref3.role, creatorId = _ref3.creatorId, partyId = _ref3.partyId, transactionId = _ref3.transactionId, url = _ref3.url, documentType = _ref3.documentType;\n\n                if (!file) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                bodyFormData = new FormData();\n                if (documentType) bodyFormData.set('documentType', documentType);\n                bodyFormData.set('title', title);\n                bodyFormData.set('role', role);\n                bodyFormData.set('creatorId', creatorId);\n                bodyFormData.set('partyId', partyId);\n                bodyFormData.set('transactionId', transactionId);\n                bodyFormData.set('url', url);\n                bodyFormData.append('file', file);\n                return _context3.abrupt(\"return\", this.restConnector({\n                  url: '/documents/create-new',\n                  method: 'post',\n                  data: bodyFormData,\n                  config: {\n                    headers: {\n                      'Content-Type': 'multipart/form-data'\n                    }\n                  }\n                }).then(function (resp) {\n                  return resp.data;\n                }));\n\n              case 14:\n                _bodyFormData = new FormData();\n                if (documentType) _bodyFormData.set('documentType', documentType);\n\n                _bodyFormData.set('title', title);\n\n                _bodyFormData.set('role', role);\n\n                _bodyFormData.set('creatorId', creatorId);\n\n                _bodyFormData.set('partyId', partyId);\n\n                _bodyFormData.set('transactionId', transactionId);\n\n                _bodyFormData.set('url', url);\n\n                _bodyFormData.append('file', file);\n\n                return _context3.abrupt(\"return\", this.restConnector({\n                  url: '/documents/create-new',\n                  method: 'post',\n                  data: _bodyFormData,\n                  config: {\n                    headers: {\n                      'Content-Type': 'multipart/form-data'\n                    }\n                  }\n                }).then(function (resp) {\n                  return resp.data;\n                }));\n\n              case 24:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function create(_x4) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"getById\",\n    value: function () {\n      var _getById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id, options) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.restConnector.get(\"/documents/\".concat(id, \"?filter={\\\"include\\\":\\\"\").concat(options.include, \"\\\"}\"));\n\n              case 2:\n                resp = _context4.sent;\n                return _context4.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getById(_x5, _x6) {\n        return _getById.apply(this, arguments);\n      }\n\n      return getById;\n    }()\n  }, {\n    key: \"getByTransactionId\",\n    value: function () {\n      var _getByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.restConnector.get(\"/documents?filter={\\\"where\\\":{\\\"transactionId\\\":\\\"\".concat(id, \"\\\"},\\\"order\\\":\\\"createdAt DESC\\\"}\"));\n\n              case 2:\n                resp = _context5.sent;\n                return _context5.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getByTransactionId(_x7) {\n        return _getByTransactionId.apply(this, arguments);\n      }\n\n      return getByTransactionId;\n    }()\n  }, {\n    key: \"getAllDocumentVendor\",\n    value: function () {\n      var _getAllDocumentVendor = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(transactionId) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.restConnector.get(\"/documents?filter={\\\"where\\\":{\\\"transactionId\\\":\\\"\".concat(transactionId, \"\\\",\\\"role\\\":\\\"vendors\\\"},\\\"order\\\":\\\"createdAt DESC\\\"}\"));\n\n              case 2:\n                resp = _context6.sent;\n                return _context6.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getAllDocumentVendor(_x8) {\n        return _getAllDocumentVendor.apply(this, arguments);\n      }\n\n      return getAllDocumentVendor;\n    }() // async getUriToSignDocument (id) {\n    //   const resp = await this.restConnector.post(`documents/${id}/sign`)\n    //   return resp.data\n    // }\n\n  }, {\n    key: \"getUriToSignDocument\",\n    value: function () {\n      var _getUriToSignDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(id, _ref4) {\n        var signers, creatorId, _ref5, data;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                signers = _ref4.signers, creatorId = _ref4.creatorId;\n                _context7.next = 3;\n                return this.restConnector.post(\"documents/\".concat(id, \"/upload-to-docusign\"), {\n                  signers: signers,\n                  creatorId: creatorId\n                });\n\n              case 3:\n                _ref5 = _context7.sent;\n                data = _ref5.data;\n                return _context7.abrupt(\"return\", data);\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getUriToSignDocument(_x9, _x10) {\n        return _getUriToSignDocument.apply(this, arguments);\n      }\n\n      return getUriToSignDocument;\n    }()\n  }, {\n    key: \"getSignLink\",\n    value: function () {\n      var _getSignLink = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(documentId, body) {\n        var _ref6, data;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.restConnector.post(\"documents/\".concat(documentId, \"/sign\"), body);\n\n              case 2:\n                _ref6 = _context8.sent;\n                data = _ref6.data;\n                return _context8.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getSignLink(_x11, _x12) {\n        return _getSignLink.apply(this, arguments);\n      }\n\n      return getSignLink;\n    }()\n  }]);\n\n  return DocumentGateway;\n}();\n\nexport { DocumentGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/DocumentGateway.js"],"names":["DocumentGateway","restConnector","idParty","get","data","options","include","resp","file","title","role","creatorId","partyId","transactionId","url","documentType","bodyFormData","FormData","set","append","method","config","headers","then","id","signers","post","documentId","body"],"mappings":"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","sourcesContent":["export default class DocumentGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async findByPartyId (idParty) {\n    const { data } = await this.restConnector.get(\n      `/documents?filter={\"where\":{\n        \"partyId\": \"${idParty}\"},\n        \"order\":\"createdAt DESC\"\n      }`\n    )\n    return data\n  }\n\n  async getByPartyId (idParty, options) {\n    const resp = await this.restConnector.get(\n      `/documents?filter={\"where\":{\n        \"partyId\": \"${idParty}\"},\n        \"order\":\"createdAt DESC\", \n        \"include\":\"${options.include}\"\n      }`\n    )\n    return resp.data\n  }\n\n  async create ({\n    file,\n    title,\n    role,\n    creatorId,\n    partyId,\n    transactionId,\n    url,\n    documentType\n  }) {\n    if (file) {\n      let bodyFormData = new FormData()\n      if (documentType) bodyFormData.set('documentType', documentType)\n      bodyFormData.set('title', title)\n      bodyFormData.set('role', role)\n      bodyFormData.set('creatorId', creatorId)\n      bodyFormData.set('partyId', partyId)\n      bodyFormData.set('transactionId', transactionId)\n      bodyFormData.set('url', url)\n      bodyFormData.append('file', file)\n      return this.restConnector({\n        url: '/documents/create-new',\n        method: 'post',\n        data: bodyFormData,\n        config: { headers: { 'Content-Type': 'multipart/form-data' } }\n      }).then(resp => resp.data)\n    } else {\n      let bodyFormData = new FormData()\n      if (documentType) bodyFormData.set('documentType', documentType)\n      bodyFormData.set('title', title)\n      bodyFormData.set('role', role)\n      bodyFormData.set('creatorId', creatorId)\n      bodyFormData.set('partyId', partyId)\n      bodyFormData.set('transactionId', transactionId)\n      bodyFormData.set('url', url)\n      bodyFormData.append('file', file)\n      return this.restConnector({\n        url: '/documents/create-new',\n        method: 'post',\n        data: bodyFormData,\n        config: { headers: { 'Content-Type': 'multipart/form-data' } }\n      }).then(resp => resp.data)\n    }\n  }\n\n  async getById (id, options) {\n    const resp = await this.restConnector.get(\n      `/documents/${id}?filter={\"include\":\"${options.include}\"}`\n    )\n    return resp.data\n  }\n  async getByTransactionId (id) {\n    const resp = await this.restConnector.get(\n      `/documents?filter={\"where\":{\"transactionId\":\"${id}\"},\"order\":\"createdAt DESC\"}`\n    )\n    return resp.data\n  }\n  async getAllDocumentVendor (transactionId) {\n    const resp = await this.restConnector.get(\n      `/documents?filter={\"where\":{\"transactionId\":\"${transactionId}\",\"role\":\"vendors\"},\"order\":\"createdAt DESC\"}`\n    )\n    return resp.data\n  }\n\n  // async getUriToSignDocument (id) {\n  //   const resp = await this.restConnector.post(`documents/${id}/sign`)\n  //   return resp.data\n  // }\n\n  async getUriToSignDocument (id, { signers, creatorId }) {\n    const { data } = await this.restConnector.post(\n      `documents/${id}/upload-to-docusign`,\n      { signers, creatorId }\n    )\n    return data\n  }\n\n  async getSignLink (documentId, body) {\n    const { data } = await this.restConnector.post(\n      `documents/${documentId}/sign`,\n      body\n    )\n    return data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}