{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/slicedToArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Error from 'next/error';\nimport moment from 'moment';\nimport Cookies from 'js-cookie';\nimport toastr from 'toastr';\nimport { Modal } from 'reactstrap';\nimport { Formik } from 'formik';\nimport Head from 'next/head';\nimport { transactionService, userService } from '../../services';\nimport InvitePartyModal from './InvitePartyModal';\nimport InformationInvitedModal from './InformationInvitedModal';\nimport { TransactionRole, TransactionAccessType, TransactionType, TransactionTypeStatus, TransactionStatus, MAX_FILE_SIZE } from '../../../common/models/Transaction';\nimport { Link } from '../../../common/routes'; // import authRedux from '../../redux/authRedux'\n\nimport { getRoleLabel } from '../../view-models/User';\nimport { getTransactionFullAddress, getTransactionActivity, roundPercent, calculatorPercentageOfParty } from '../../view-models/Transaction';\nimport userOnly from '../../hocs/userOnly';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport EditMemberModal from '../../component/Transaction/EditMemberModal';\nimport AddNewMemberModal from '../../component/Transaction/AddNewMemberModal';\nimport EditRoleAgentModal from '../../component/Transaction/EditRoleAgentModal';\nimport TransactionDocuments from './TransactionDocuments';\nimport TransactionEnvelopes from './TransactionEnvelopes';\nimport TransactionDocumentVendor from './TransactionDocumentVendor';\nimport TransactionDocumentActions from './TransactionDocumentActions';\nimport TransactionPartiesFileModal from '../../component/Transaction/TransactionPartiesFileModal';\nimport CloseTransactionModal from '../../component/Transaction/CloseTransactionModal';\nvar ROLES = [TransactionRole.BUYING_AGENT, TransactionRole.SELLER_AGENT, TransactionRole.BUYER, TransactionRole.SELLER, TransactionRole.TRANSACTION_COORDINATOR, TransactionRole.ESCROW, TransactionRole.TITLE, TransactionRole.LENDER, TransactionRole.HOME_INSPECTOR, TransactionRole.TERMITE];\n\nfunction _fetchTransactionAndActivities(_x, _x2) {\n  return _fetchTransactionAndActivities2.apply(this, arguments);\n}\n\nfunction _fetchTransactionAndActivities2() {\n  _fetchTransactionAndActivities2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee15(transactionId, currentLoginUserId) {\n    var _ref23, transaction, activitiesFull, detail, partyTarget, activities;\n\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.next = 2;\n            return transactionService.getDetailedTransactionAndActivityById(transactionId);\n\n          case 2:\n            _ref23 = _context15.sent;\n            transaction = _ref23.transaction;\n            activitiesFull = _ref23.activitiesFull;\n            detail = _ref23.detail;\n\n            if (transaction) {\n              _context15.next = 8;\n              break;\n            }\n\n            return _context15.abrupt(\"return\", {\n              transaction: null\n            });\n\n          case 8:\n            if (detail) {\n              _context15.next = 10;\n              break;\n            }\n\n            return _context15.abrupt(\"return\", {\n              detail: null\n            });\n\n          case 10:\n            partyTarget = transaction.parties.find(function (party) {\n              return party.userId === currentLoginUserId;\n            });\n\n            if (partyTarget) {\n              _context15.next = 13;\n              break;\n            }\n\n            return _context15.abrupt(\"return\", {\n              partyTarget: null\n            });\n\n          case 13:\n            activities = partyTarget.access === TransactionAccessType.FULL ? activitiesFull : activitiesFull.filter(function (activity) {\n              return activity.partyId === partyTarget.id;\n            });\n            return _context15.abrupt(\"return\", {\n              transaction: transaction,\n              activities: activities,\n              partyTarget: partyTarget,\n              detail: detail,\n              currentTransactionStatus: transaction.status\n            });\n\n          case 15:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _fetchTransactionAndActivities2.apply(this, arguments);\n}\n\nvar TransactionPartiesPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransactionPartiesPage, _Component);\n\n  _createClass(TransactionPartiesPage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.currentUser.avatar !== this.state.user.avatar) {\n        this.setState({\n          user: _objectSpread({}, this.state.user, {\n            avatar: nextProps.currentUser.avatar\n          })\n        });\n      }\n\n      this._reRenderDynamic();\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx) {\n        var transactionId, currentUserId, _ref, transaction, activities, partyTarget, detail, status;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                transactionId = ctx.query.idTransaction;\n                currentUserId = ctx.store.getState().global.loginUser.data.id;\n                _context.next = 4;\n                return _fetchTransactionAndActivities(transactionId, currentUserId);\n\n              case 4:\n                _ref = _context.sent;\n                transaction = _ref.transaction;\n                activities = _ref.activities;\n                partyTarget = _ref.partyTarget;\n                detail = _ref.detail;\n                status = _ref.status;\n                return _context.abrupt(\"return\", {\n                  transaction: transaction,\n                  partyTarget: partyTarget,\n                  headerText: 'Transaction Parties',\n                  activities: activities,\n                  detail: detail,\n                  subHeaderText: partyTarget && transaction && \"for \".concat(getTransactionFullAddress(transaction)),\n                  toggleTimeline: false,\n                  status: status\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function TransactionPartiesPage(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionPartiesPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionPartiesPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_displayLoading\", function () {\n      var loading = document.getElementById('loadingTh');\n      loading.classList.add('display');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_hiddenLoading\", function () {\n      var loading = document.getElementById('loadingTh');\n      loading.classList.remove('display');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getDataUser\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return userService.getAllUser();\n\n            case 3:\n              data = _context2.sent;\n\n              _this.setState({\n                dataUserAllUer: data\n              });\n\n              _context2.next = 9;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewEditMemberByOwnerAgent\", function () {\n      var idTransaction = _this.props.query.idTransaction;\n      var id = Cookies.get('add_new_transaction');\n\n      if (idTransaction === id) {\n        _this.setState({\n          isShowEditRoleAgent: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveImage\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(imageURL, id) {\n        var newTran, msg;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!imageURL) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                _context3.prev = 1;\n\n                _this._displayLoading();\n\n                _context3.next = 5;\n                return transactionService.createMainImage(id, imageURL);\n\n              case 5:\n                _context3.next = 7;\n                return transactionService.getTransactionsDetailByTransactionId(id);\n\n              case 7:\n                newTran = _context3.sent;\n\n                _this.setState({\n                  transaction: newTran\n                });\n\n                toastr.success('Success');\n                setTimeout(function () {\n                  _this._hiddenLoading();\n                }, 2000);\n                _context3.next = 17;\n                break;\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](1);\n\n                switch (_context3.t0.code) {\n                  default:\n                    {\n                      msg = _context3.t0.message;\n                    }\n                }\n\n                toastr.error(msg);\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 13]]);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewPercentTransaction\", function () {\n      var transaction = _this.state.transaction;\n\n      if (transaction && transaction.parties && transaction.invitations) {\n        return transaction.percentComplete || 0;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_toggleModalInfoTransactionParties\", function (role) {\n      var transactionParty = _this.state.transaction.parties.find(function (role1) {\n        return role1.role === role;\n      });\n\n      _this.setState({\n        toggleModalInfoTransactionParties: transactionParty\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_CloseInfoTransactionParties\", function (role) {\n      _this.setState({\n        toggleModalInfoTransactionParties: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_showInvitePartyModal\", function (role) {\n      _this.setState({\n        addPartyModalData: role\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_closeInvitePartyModal\", function () {\n      _this.setState({\n        addPartyModalData: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_toggleModal\", function () {\n      _this.setState({\n        toggleModal: !_this.state.toggleModal\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_sendInvitation\",\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_ref4) {\n        var firstName, lastName, email, phoneNumber, access;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                firstName = _ref4.firstName, lastName = _ref4.lastName, email = _ref4.email, phoneNumber = _ref4.phoneNumber, access = _ref4.access;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return transactionService.inviteParty({\n                  transactionId: _this.state.transaction.id,\n                  role: _this.state.addPartyModalData,\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phoneNumber: phoneNumber,\n                  access: access\n                });\n\n              case 4:\n                toastr.success('Party has been invited'); // reload data to fetch new transaction information\n\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](1);\n                toastr.error(_context4.t0.message);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 7]]);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_refetchDataDynamic\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var _ref7, transaction;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _fetchTransactionAndActivities(_this.state.transaction.id, _this.props.currentUser.id);\n\n            case 2:\n              _ref7 = _context5.sent;\n              transaction = _ref7.transaction;\n\n              _this.setState({\n                transaction: transaction\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getDataFile\", function (data) {\n      _this.setState({\n        isShowPartiesFile: true,\n        dataDocument: data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderButtonFile\", function (role) {\n      var partyNew = _this.state.partyNew;\n      var currentTransactionStatus = _this.props.currentTransactionStatus;\n\n      if (currentTransactionStatus === TransactionStatus.CLOSED) {\n        return React.createElement(\"div\", null);\n      }\n\n      var partyJoined = partyNew.find(function (party) {\n        return party.role === role;\n      });\n\n      if (partyJoined) {\n        return React.createElement(\"button\", {\n          className: \"files\",\n          onClick: function onClick() {\n            return _this._getDataFile(partyJoined.documents);\n          }\n        }, \"Files\");\n      } else {\n        return React.createElement(\"button\", {\n          className: \"files files__dis\",\n          disabled: true\n        }, ' ', \"Files\", ' ');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getDataEditMemberMain\", function (data) {\n      var partyNew = _this.state.partyNew;\n      var user = partyNew.find(function (party) {\n        return party.userId === data;\n      });\n\n      if (user) {\n        _this.setState({\n          toggleModalUpdateMyProfile: true,\n          partyTarget: user\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setAddMember\", function (role) {\n      var transaction = _this.state.transaction;\n\n      if (transaction.status !== TransactionStatus.ARCHIVED) {\n        _this.setState({\n          isShowMemberModal: true,\n          memberRole: role\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderButtonProfile\", function (role) {\n      var _this$state = _this.state,\n          transaction = _this$state.transaction,\n          partyNew = _this$state.partyNew;\n      var status = transaction.status;\n      var invitations = _this.props.transaction.invitations;\n      var currentTransactionStatus = _this.props.currentTransactionStatus;\n\n      if (currentTransactionStatus === TransactionStatus.CLOSED) {\n        return React.createElement(\"div\", null);\n      }\n\n      var partyJoined = partyNew.find(function (party) {\n        return party.role === role;\n      });\n\n      if (partyJoined) {\n        return React.createElement(\"button\", {\n          className: \"profiles\",\n          onClick: function onClick() {\n            return _this._getDataEditMemberMain(partyJoined.userId);\n          }\n        }, \"Profile\");\n      }\n\n      var partyInvited = invitations.find(function (invitation) {\n        return invitation.role === role;\n      });\n\n      if (partyInvited) {\n        return React.createElement(\"button\", {\n          className: \"profiles\",\n          onClick: function onClick() {\n            return !status && _this._toggleModalUpdateMyProfile;\n          }\n        }, \"Profile\");\n      }\n\n      return React.createElement(\"button\", {\n        className: \"profiles\",\n        onClick: function onClick() {\n          return _this._setAddMember(role);\n        }\n      }, \"Add member\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderCardBodyTest\", function (role) {\n      var partyNew = _this.state.partyNew;\n      var partyJoined = partyNew.find(function (party) {\n        return party.role === role;\n      });\n\n      if (partyJoined) {\n        return React.createElement(\"div\", {\n          className: \"no-padding\"\n        }, React.createElement(\"div\", {\n          className: \"percent\"\n        }, React.createElement(\"div\", {\n          \"data-progress\": _this._percentOfParty(role),\n          className: \"th-17 d-flex justify-content-center align-items-center display-6 text-white\",\n          style: {\n            '&::after': {\n              backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n            }\n          }\n        })), React.createElement(\"h6\", {\n          className: \"role-content\"\n        }, getRoleLabel(role)));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"no-padding\"\n      }, React.createElement(\"div\", {\n        className: \"percent\"\n      }, React.createElement(\"div\", {\n        \"data-progress\": _this._percentOfParty(role),\n        className: \"th-17 d-flex justify-content-center align-items-center display-6 text-white\",\n        style: {\n          '&::after': {\n            backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n          }\n        }\n      })), React.createElement(\"h6\", {\n        className: \"role-content\"\n      }, getRoleLabel(role)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderTransactionPartiesFullName\", function (role) {\n      var partyNew = _this.state.partyNew;\n      var user = partyNew.find(function (party) {\n        return party.role === role;\n      });\n\n      if (user) {\n        if (user.firstName) {\n          return React.createElement(\"div\", {\n            className: \"name1\"\n          }, user.firstName);\n        } else {\n          if (user.user.name) {\n            return React.createElement(\"div\", {\n              className: \"name1\"\n            }, user.user.name);\n          }\n        }\n      } else {\n        return React.createElement(\"div\", {\n          className: \"name1\"\n        }, \"Empty\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderAvatarTransaction\", function (role) {\n      var partyNew = _this.state.partyNew;\n      var partyJoined = partyNew.filter(function (party) {\n        return party.role === role;\n      });\n\n      if (partyJoined && partyJoined.length === 0) {\n        return React.createElement(\"img\", {\n          className: \"avt-role\",\n          src: '/static/images/default-avatar.png',\n          alt: \"Avatar\"\n        });\n      } else {\n        return partyJoined.map(function (partyJoined, index) {\n          if (partyJoined.user) {\n            return React.createElement(\"img\", {\n              key: index,\n              className: \"avt-role\",\n              src: partyJoined.user.avatar || '/static/images/default-avatar.png',\n              alt: \"Avatar\"\n            });\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_percentOfTransaction\", function (transactionId) {\n      var percentOfTransaction = _this.state.percentOfTransactions.find(function (item) {\n        return item.transactionId === transactionId;\n      });\n\n      if (percentOfTransaction) {\n        return percentOfTransaction.percent;\n      }\n\n      return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_reloadDataMember\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var query, newMem;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              query = _this.props.query;\n              _context6.prev = 1;\n              _context6.next = 4;\n              return transactionService.getMemberPartiesByTransaction(query.idTransaction);\n\n            case 4:\n              newMem = _context6.sent;\n\n              _this.setState({\n                partyNew: newMem\n              });\n\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](1);\n              console.error('error');\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 8]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderPartiesMemberInfo\", function () {\n      var _this$state2 = _this.state,\n          partyNew = _this$state2.partyNew,\n          partyTarget = _this$state2.partyTarget,\n          transaction = _this$state2.transaction;\n      return partyNew.map(function (user, index) {\n        return React.createElement(\"tr\", {\n          key: index\n        }, React.createElement(\"td\", {\n          scope: \"row\"\n        }, _this._viewName(user)), React.createElement(\"td\", null, user.email), React.createElement(\"td\", null, _this._viewRole(user.role)), React.createElement(\"td\", null, partyTarget.role === TransactionRole.TRANSACTION_COORDINATOR && transaction.status !== TransactionStatus.ARCHIVED && transaction.status !== TransactionStatus.CLOSED && React.createElement(\"button\", {\n          className: \"btn\",\n          type: \"button\",\n          style: {\n            padding: '0'\n          },\n          onClick: function onClick() {\n            return _this._getDataEditMember(user);\n          }\n        }, React.createElement(\"i\", {\n          className: \"far fa-edit\"\n        }))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewName\", function (user) {\n      if (user) {\n        if (user.firstName && user.lastName) {\n          return user.firstName.concat(' ', user.lastName);\n        } else if (user.firstName || user.lastName) {\n          return user.firstName || user.lastName;\n        } else {\n          if (user.user) {\n            if (user.user.firstName && user.user.lastName) {\n              return user.user.firstName.concat(' ', user.user.lastName);\n            } else if (user.user.firstName || user.user.lastName) {\n              return user.user.firstName || user.user.lastName;\n            } else {\n              if (user.user.name) {\n                return user.user.name;\n              } else {\n                return 'None';\n              }\n            }\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewRole\", function (role) {\n      switch (role) {\n        case 'buyer-agent':\n          return 'Buyer’s Agent';\n\n        case 'listing-agent':\n          return 'Listing agent';\n\n        case 'buyer':\n          return 'Buyer';\n\n        case 'seller':\n          return 'Seller';\n\n        case 'transaction-coordinator':\n          return 'Transaction coordinator';\n\n        case 'escrow':\n          return 'Escrow';\n\n        case 'title':\n          return 'Title';\n\n        case 'lender':\n          return 'Lender';\n\n        case 'home-inspector':\n          return 'Home inspector';\n\n        case 'termite':\n          return 'Termite';\n\n        case 'vendors':\n          return 'Vendors';\n\n        case 'seller-agent':\n          return 'Seller’s Agent';\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getDataEditMember\", function (user) {\n      _this.setState({\n        isShowEditMemberModal: true,\n        dataUser: user\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSubmitDetail\",\n    /*#__PURE__*/\n    function () {\n      var _ref9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(values, action) {\n        var setSubmitting, yearBuilt, bedrooms, squareFootage, schoolDistrict, type, bathrooms, lotSize, country, streetNumber, streetName, unitNumber, city, state, postalCode, county, mlsNumber, taxId, address, transactionType, transactionTypeStatus, url, description, closingDate, statusT, status, msg;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                setSubmitting = action.setSubmitting;\n                _context7.prev = 1;\n                yearBuilt = values.yearBuilt, bedrooms = values.bedrooms, squareFootage = values.squareFootage, schoolDistrict = values.schoolDistrict, type = values.type, bathrooms = values.bathrooms, lotSize = values.lotSize, country = values.country, streetNumber = values.streetNumber, streetName = values.streetName, unitNumber = values.unitNumber, city = values.city, state = values.state, postalCode = values.postalCode, county = values.county, mlsNumber = values.mlsNumber, taxId = values.taxId, address = values.address, transactionType = values.transactionType, transactionTypeStatus = values.transactionTypeStatus, url = values.url, description = values.description, closingDate = values.closingDate;\n                statusT = '';\n\n                if (transactionType === '') {\n                  statusT = '';\n                } else {\n                  statusT = transactionTypeStatus;\n                }\n\n                status = '';\n\n                if (statusT === TransactionTypeStatus.TTS_ARCHIVED) {\n                  status = TransactionTypeStatus.TTS_ARCHIVED;\n                } else {\n                  status = _this.state.transaction.status;\n                }\n\n                setSubmitting(true);\n                _context7.next = 10;\n                return transactionService.updateTransactionById(_this.props.transaction.id, {\n                  address: address,\n                  transactionType: transactionType,\n                  transactionTypeStatus: statusT,\n                  url: url,\n                  description: description,\n                  closingDate: closingDate,\n                  status: status\n                });\n\n              case 10:\n                if (!(_this.props.detail[0] && _this.props.detail[0].id)) {\n                  _context7.next = 15;\n                  break;\n                }\n\n                _context7.next = 13;\n                return transactionService.createTransactionDetail(_this.props.detail[0].id, {\n                  yearBuilt: yearBuilt,\n                  bedrooms: bedrooms,\n                  squareFootage: squareFootage,\n                  schoolDistrict: schoolDistrict,\n                  type: type,\n                  bathrooms: bathrooms,\n                  lotSize: lotSize,\n                  country: country,\n                  streetNumber: streetNumber,\n                  streetName: streetName,\n                  unitNumber: unitNumber,\n                  city: city,\n                  state: state,\n                  postalCode: postalCode,\n                  county: county,\n                  mlsNumber: mlsNumber,\n                  taxId: taxId\n                });\n\n              case 13:\n                _context7.next = 17;\n                break;\n\n              case 15:\n                _context7.next = 17;\n                return transactionService.createNewTransactionDetail({\n                  yearBuilt: yearBuilt,\n                  bedrooms: bedrooms,\n                  squareFootage: squareFootage,\n                  schoolDistrict: schoolDistrict,\n                  type: type,\n                  bathrooms: bathrooms,\n                  lotSize: lotSize,\n                  country: country,\n                  streetNumber: streetNumber,\n                  streetName: streetName,\n                  unitNumber: unitNumber,\n                  city: city,\n                  state: state,\n                  postalCode: postalCode,\n                  county: county,\n                  mlsNumber: mlsNumber,\n                  taxId: taxId\n                });\n\n              case 17:\n                // this.setState({\n                //   detail: [...detail,newTransactionDetail],\n                // })\n                setSubmitting(false);\n                toastr.success('Success');\n\n                _this._fetchTransaction();\n\n                _context7.next = 27;\n                break;\n\n              case 22:\n                _context7.prev = 22;\n                _context7.t0 = _context7[\"catch\"](1);\n\n                switch (_context7.t0.code) {\n                  default:\n                    {\n                      msg = _context7.t0.message;\n                    }\n                }\n\n                toastr.error(msg);\n                setSubmitting(false);\n\n              case 27:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[1, 22]]);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteImage\",\n    /*#__PURE__*/\n    function () {\n      var _ref10 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(id) {\n        var newTran, msg;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return transactionService.deleteImage(id);\n\n              case 3:\n                _context8.next = 5;\n                return transactionService.getTransactionsDetailByTransactionId(id);\n\n              case 5:\n                newTran = _context8.sent;\n\n                _this.setState({\n                  transaction: newTran\n                });\n\n                toastr.success('Success');\n                _context8.next = 14;\n                break;\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t0 = _context8[\"catch\"](0);\n\n                switch (_context8.t0.code) {\n                  default:\n                    {\n                      msg = _context8.t0.message;\n                    }\n                }\n\n                toastr.error(msg);\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 10]]);\n      }));\n\n      return function (_x9) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_previewImage\", function (image) {\n      var img = document.querySelector('.new-image');\n\n      if (image !== null) {\n        var reader = new window.FileReader();\n        reader.addEventListener('load', function () {\n          img.classList.add('hide-ne');\n        });\n        reader.readAsDataURL(image);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewDate\", function (date) {\n      var a = new Date(date);\n      var b = new Date(0);\n\n      if (a.getTime() !== b.getTime()) {\n        var d = new Date(date);\n        var month = '' + (d.getMonth() + 1);\n        var day = '' + d.getDate();\n        var year = d.getFullYear();\n        if (month.length < 2) month = '0' + month;\n        if (day.length < 2) day = '0' + day;\n        return [year, month, day].join('-');\n      } else {\n        return '';\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeTransactionTypeStatus\",\n    /*#__PURE__*/\n    function () {\n      var _ref11 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(e, callback) {\n        var transactionAgents;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!(e.target.value === TransactionTypeStatus.TTS_CLOSE)) {\n                  _context9.next = 7;\n                  break;\n                }\n\n                _context9.next = 3;\n                return transactionService.getAllAgents(_this.props.transaction.id);\n\n              case 3:\n                transactionAgents = _context9.sent;\n\n                // Can't close without agent\n                if (transactionAgents.length === 0) {\n                  toastr.error('Nead at least 1 Link Agent to close this transaction!');\n                } else {\n                  // HandleChange of Formik\n                  callback(e);\n\n                  _this.setState({\n                    isShowCloseTransactionModal: true,\n                    transactionAgents: transactionAgents\n                  });\n                }\n\n                _context9.next = 8;\n                break;\n\n              case 7:\n                // Normal update\n                callback(e);\n\n              case 8:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x10, _x11) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditPercentTransaction\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee10() {\n      var _this$state3, isShowEditPercentTransaction, tempPercentTransaction, transaction;\n\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _this$state3 = _this.state, isShowEditPercentTransaction = _this$state3.isShowEditPercentTransaction, tempPercentTransaction = _this$state3.tempPercentTransaction, transaction = _this$state3.transaction;\n              _context10.prev = 1;\n\n              if (tempPercentTransaction) {\n                _context10.next = 6;\n                break;\n              }\n\n              // Init values\n              _this.setState({\n                tempPercentTransaction: _this._viewPercentTransaction()\n              });\n\n              _context10.next = 12;\n              break;\n\n            case 6:\n              // Editing\n              _this.setState({\n                isEditingPercentTransaction: true\n              });\n\n              _context10.next = 9;\n              return transactionService.updateTransactionPercent(transaction.id, tempPercentTransaction);\n\n            case 9:\n              _context10.next = 11;\n              return _this._refetchDataDynamic();\n\n            case 11:\n              _this.setState({\n                tempPercentTransaction: null,\n                isEditingPercentTransaction: false\n              });\n\n            case 12:\n              _context10.next = 17;\n              break;\n\n            case 14:\n              _context10.prev = 14;\n              _context10.t0 = _context10[\"catch\"](1);\n              console.error(_context10.t0);\n\n            case 17:\n              _context10.prev = 17;\n\n              _this.setState({\n                isShowEditPercentTransaction: !isShowEditPercentTransaction\n              });\n\n              return _context10.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 14, 17, 20]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderTransactionPercentCircle\", function () {\n      var _this$state4 = _this.state,\n          isShowEditPercentTransaction = _this$state4.isShowEditPercentTransaction,\n          isEditingPercentTransaction = _this$state4.isEditingPercentTransaction,\n          tempPercentTransaction = _this$state4.tempPercentTransaction;\n      return React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        className: \"transaction-percent-input\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"percent\"\n      }, React.createElement(\"div\", {\n        \"data-progress\": _this._viewPercentTransaction(),\n        className: \"th-17 th-per-d d-flex justify-content-center align-items-center display-6 text-white\"\n      })), isShowEditPercentTransaction && React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"100\",\n        value: tempPercentTransaction,\n        disabled: isEditingPercentTransaction,\n        onChange: function onChange(e) {\n          var value = e.target.value;\n\n          _this.setState({\n            tempPercentTransaction: _parseInt(value < 0 ? 0 : value > 100 ? 100 : e.target.value || 0)\n          });\n        },\n        autoFocus: true\n      })), _this.setViewButtonEdit());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setViewButtonEdit\", function () {\n      var _this$state5 = _this.state,\n          transaction = _this$state5.transaction,\n          isEditingPercentTransaction = _this$state5.isEditingPercentTransaction,\n          isShowEditPercentTransaction = _this$state5.isShowEditPercentTransaction;\n\n      if (transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_PRE_OFFER && transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_UNDER_CONTRACT && transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_ESCROW && transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_ESCROW_CLOSE && transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_SOLD && transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_CLOSE) {\n        return React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn p-0\",\n          onClick: function onClick() {\n            return _this.handleEditPercentTransaction();\n          },\n          style: {\n            position: 'absolute',\n            top: 2,\n            right: 5\n          }\n        }, React.createElement(\"div\", {\n          className: \"app-fade app-fade--circle app-fade--black\"\n        }, isEditingPercentTransaction ? React.createElement(\"span\", {\n          className: \"spinner-border spinner-border-sm text-white\"\n        }) : isShowEditPercentTransaction ? React.createElement(\"i\", {\n          \"class\": \"fas fa-check fa-sm\"\n        }) : React.createElement(\"i\", {\n          className: \"far fa-edit fa-sm\"\n        })));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderAllParties\", function () {\n      var _this$state6 = _this.state,\n          transaction = _this$state6.transaction,\n          listDocument = _this$state6.listDocument,\n          listEnvelopeDocument = _this$state6.listEnvelopeDocument,\n          documentAction = _this$state6.documentAction,\n          documentActionsByPartyId = _this$state6.documentActionsByPartyId,\n          partyTarget = _this$state6.partyTarget,\n          dataVendor = _this$state6.dataVendor,\n          isSubmit = _this$state6.isSubmit,\n          isShowEditPercentTransaction = _this$state6.isShowEditPercentTransaction;\n      var _this$props = _this.props,\n          currentParty = _this$props.currentParty,\n          detail = _this$props.detail,\n          currentTransactionStatus = _this$props.currentTransactionStatus;\n\n      if (_this.props.selectedViewParties === 'View Details') {\n        if (partyTarget.role === TransactionRole.TRANSACTION_COORDINATOR && transaction.status !== TransactionStatus.ARCHIVED && transaction.status !== TransactionStatus.CLOSED) {\n          return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n            className: \"card-details\",\n            onClick: function onClick() {\n              return isShowEditPercentTransaction && _this.setState({\n                isShowEditPercentTransaction: false\n              });\n            }\n          }, React.createElement(\"div\", {\n            className: \"box-card-details\"\n          }, React.createElement(\"div\", {\n            className: \"head-details\"\n          }, React.createElement(\"div\", {\n            className: \"boc-detail\"\n          }, React.createElement(\"div\", {\n            className: \"image-detail\"\n          }, React.createElement(\"div\", {\n            className: \"percent-detail mr-2\"\n          }, _this._renderTransactionPercentCircle()), React.createElement(\"div\", {\n            className: \"name-address-title\"\n          }, transaction.address)))), React.createElement(Formik, {\n            initialValues: {\n              address: transaction.address,\n              transactionType: transaction.transactionType,\n              transactionTypeStatus: transaction.transactionTypeStatus,\n              url: transaction.url,\n              description: transaction.description,\n              closingDate: transaction.closingDate,\n              role: '',\n              imageURL: '',\n              yearBuilt: detail[0] ? detail[0].yearBuilt : '',\n              bedrooms: detail[0] ? detail[0].bedrooms : '',\n              squareFootage: detail[0] ? detail[0].squareFootage : '',\n              schoolDistrict: detail[0] ? detail[0].schoolDistrict : '',\n              type: detail[0] ? detail[0].type : '',\n              bathrooms: detail[0] ? detail[0].bathrooms : '',\n              lotSize: detail[0] ? detail[0].lotSize : '',\n              country: detail[0] ? detail[0].country : '',\n              streetNumber: detail[0] ? detail[0].streetNumber : '',\n              streetName: detail[0] ? detail[0].streetName : '',\n              unitNumber: detail[0] ? detail[0].unitNumber : '',\n              city: detail[0] ? detail[0].city : '',\n              state: detail[0] ? detail[0].state : '',\n              postalCode: detail[0] ? detail[0].postalCode : '',\n              county: detail[0] ? detail[0].county : '',\n              mlsNumber: detail[0] ? detail[0].mlsNumber : '',\n              taxId: detail[0] ? detail[0].taxId : ''\n            },\n            onSubmit: _this._onSubmitDetail\n          }, function (_ref13) {\n            var values = _ref13.values,\n                error = _ref13.error,\n                handleChange = _ref13.handleChange,\n                isSubmitting = _ref13.isSubmitting,\n                handleSubmit = _ref13.handleSubmit,\n                setFieldValue = _ref13.setFieldValue,\n                isValid = _ref13.isValid;\n            return React.createElement(\"form\", {\n              onSubmit: handleSubmit\n            }, React.createElement(\"div\", {\n              className: \"row mt-4 border-bottom pb-3\"\n            }, React.createElement(\"div\", {\n              className: \"col-12\"\n            }, transaction.imageURL ? React.createElement(\"div\", {\n              className: \"main-image-details\"\n            }, React.createElement(\"img\", {\n              src: \"\".concat(transaction.imageURL),\n              alt: \"\"\n            }), React.createElement(\"div\", {\n              onClick: function onClick() {\n                return _this.deleteImage(transaction.id);\n              },\n              className: \"delete-image\"\n            }, React.createElement(\"span\", null))) : React.createElement(\"div\", {\n              className: \"image-upload-wrap mb-4\",\n              style: {\n                height: '56px'\n              }\n            }, React.createElement(\"input\", {\n              className: \"form-control new-image\",\n              placeholder: \"Type Here\",\n              name: \"imageURL\",\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: function onChange(event) {\n                setFieldValue('imageURL', event.currentTarget.files[0]);\n\n                if (event.currentTarget.files[0] !== null) {\n                  if (event.currentTarget.files[0].size < MAX_FILE_SIZE) {\n                    _this.saveImage(event.currentTarget.files[0], transaction.id);\n                  } else {\n                    toastr.warning('The file you have selected is too large');\n                  }\n                }\n              }\n            }), React.createElement(\"div\", {\n              className: \"drag-text\"\n            }, React.createElement(\"h3\", null, \"Upload a photo\"))), React.createElement(\"div\", {\n              id: \"loadingTh\"\n            })), React.createElement(\"div\", {\n              className: \"col-12\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Transaction Name\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Type Here\",\n              name: \"address\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.address\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-6\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Transaction Type\"), React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"text-select\",\n              onChange: handleChange,\n              value: values.transactionType,\n              name: \"transactionType\"\n            }, React.createElement(\"option\", {\n              value: \"\"\n            }, \"None\"), React.createElement(\"option\", {\n              value: TransactionType.NEW_PURCHASE\n            }, \"Purchase\"), React.createElement(\"option\", {\n              value: TransactionType.NEW_LISTING_FOR_SALE\n            }, \"Listing for sale\"), React.createElement(\"option\", {\n              value: TransactionType.NEW_LISTING_FOR_LEASE\n            }, \"Listing for lease\"), React.createElement(\"option\", {\n              value: TransactionType.NEW_LEASE\n            }, \"Lease\"), React.createElement(\"option\", {\n              value: TransactionType.NEW_REAL_ESTATE_OTHER\n            }, \"Real estate other\"), React.createElement(\"option\", {\n              value: TransactionType.NEW_OTHER\n            }, \"Other\")))), React.createElement(\"div\", {\n              className: \"col-12 col-md-6\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Transaction Status\"), values.transactionType === 'new-purchase' && React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"inlineFormCustomSelect2\",\n              onChange: function onChange(e) {\n                return _this.handleChangeTransactionTypeStatus(e, handleChange);\n              },\n              value: values.transactionTypeStatus,\n              name: \"transactionTypeStatus\"\n            }, React.createElement(\"option\", {\n              value: \"\"\n            }, \"None\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_PRE_OFFER\n            }, \"Pre-offer\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_UNDER_CONTRACT\n            }, \"Under contract\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ESCROW\n            }, \"Escrow\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ESCROW_CLOSE\n            }, \"Escrow close\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_WITHDRAWN\n            }, \"Withdrawn\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_SOLD\n            }, \"Sold\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_TERMINATED\n            }, \"Terminated\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ARCHIVED\n            }, \"Archived\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_CLOSE\n            }, \"Close\")), values.transactionType === 'new-listing-for-sale' && React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"inlineFormCustomSelect2\",\n              onChange: function onChange(e) {\n                return _this.handleChangeTransactionTypeStatus(e, handleChange);\n              },\n              value: values.transactionTypeStatus,\n              name: \"transactionTypeStatus\"\n            }, React.createElement(\"option\", {\n              value: \"\"\n            }, \"None\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_PRE_LISTING\n            }, \"Pre-listing\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_PRIVATE_LISTING\n            }, \"Private listing\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ACTIVE_LISTING\n            }, \"Active listing\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_UNDER_CONTRACT\n            }, \"Under contract\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ESCROW\n            }, \"Escrow\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ESCROW_CLOSE\n            }, \"Escrow close\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_WITHDRAWN\n            }, \"Withdrawn\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_SOLD\n            }, \"Sold\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_TERMINATED\n            }, \"Terminated\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ARCHIVED\n            }, \"Archived\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_CLOSE\n            }, \"Close\")), values.transactionType === 'new-listing-for-lease' && React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"inlineFormCustomSelect2\",\n              onChange: function onChange(e) {\n                return _this.handleChangeTransactionTypeStatus(e, handleChange);\n              },\n              value: values.transactionTypeStatus,\n              name: \"transactionTypeStatus\"\n            }, React.createElement(\"option\", {\n              value: \"\"\n            }, \"None\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_PRE_LISTING\n            }, \"Pre-listing\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_PRIVATE_LISTING\n            }, \"Private listing\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ACTIVE_LISTING\n            }, \"Active listing\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_UNDER_CONTRACT\n            }, \"Under contract\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_WITHDRAWN\n            }, \"Withdrawn\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_LEASED\n            }, \"Leased\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_TERMINATED\n            }, \"Terminated\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ARCHIVED\n            }, \"Archived\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_CLOSE\n            }, \"Close\")), values.transactionType === 'new-lease' && React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"inlineFormCustomSelect2\",\n              onChange: function onChange(e) {\n                return _this.handleChangeTransactionTypeStatus(e, handleChange);\n              },\n              value: values.transactionTypeStatus,\n              name: \"transactionTypeStatus\"\n            }, React.createElement(\"option\", {\n              value: \"\"\n            }, \"None\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_PRE_OFFER\n            }, \"Pre-offer\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_UNDER_CONTRACT\n            }, \"Under contract\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_WITHDRAWN\n            }, \"Withdrawn\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_LEASED\n            }, \"Leased\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_TERMINATED\n            }, \"Terminated\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ARCHIVED\n            }, \"Archived\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_CLOSE\n            }, \"Close\")), values.transactionType === 'new-real-estate-other' && React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"inlineFormCustomSelect2\",\n              onChange: function onChange(e) {\n                return _this.handleChangeTransactionTypeStatus(e, handleChange);\n              },\n              value: values.transactionTypeStatus,\n              name: \"transactionTypeStatus\"\n            }, React.createElement(\"option\", {\n              value: \"\"\n            }, \"None\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_NEW\n            }, \"New\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_IN_PROCESS\n            }, \"In-process\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_WITHDRAWN\n            }, \"Withdrawn\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ESCROW\n            }, \"Escrow\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ESCROW_CLOSE\n            }, \"Escrow close\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_DONE\n            }, \"Done\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_TERMINATED\n            }, \"Terminated\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ARCHIVED\n            }, \"Archived\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_CLOSE\n            }, \"Close\")), values.transactionType === 'new-other' && React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"inlineFormCustomSelect2\",\n              onChange: function onChange(e) {\n                return _this.handleChangeTransactionTypeStatus(e, handleChange);\n              },\n              value: values.transactionTypeStatus,\n              name: \"transactionTypeStatus\"\n            }, React.createElement(\"option\", {\n              value: \"\"\n            }, \"None\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_NEW\n            }, \"New\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_IN_PROCESS\n            }, \"In-process\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_WITHDRAWN\n            }, \"Withdrawn\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_DONE\n            }, \"Done\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_TERMINATED\n            }, \"Terminated\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_ARCHIVED\n            }, \"Archived\"), React.createElement(\"option\", {\n              value: TransactionTypeStatus.TTS_CLOSE\n            }, \"Close\")), values.transactionType === '' && React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"inlineFormCustomSelect2\",\n              onChange: function onChange(e) {\n                return _this.handleChangeTransactionTypeStatus(e, handleChange);\n              },\n              value: values.transactionTypeStatus,\n              name: \"transactionTypeStatus\"\n            }, React.createElement(\"option\", {\n              value: \"\"\n            }, \"None\")), values.transactionType === 'close' && React.createElement(\"select\", {\n              className: \"custom-select mr-sm-2 form-control\",\n              id: \"inlineFormCustomSelect2\",\n              onChange: function onChange(e) {\n                return _this.handleChangeTransactionTypeStatus(e, handleChange);\n              },\n              value: values.transactionTypeStatus,\n              name: \"transactionTypeStatus\"\n            }, React.createElement(\"option\", {\n              value: \"close\"\n            }, \"Close\")))), React.createElement(\"div\", {\n              className: \"col-12 col-md-6\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Expected Closing Date\"), React.createElement(\"input\", {\n              className: \"form-control\",\n              type: \"date\",\n              id: \"example-date-input\",\n              name: \"closingDate\",\n              onChange: handleChange,\n              value: _this._viewDate(values.closingDate)\n            }))), React.createElement(\"div\", {\n              className: \"col-12 col-md-6\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"URL\"), React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add URL\",\n              name: \"url\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.url\n            }))), React.createElement(\"div\", {\n              className: \"col-12\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Description\"), React.createElement(\"textarea\", {\n              className: \"form-control\",\n              placeholder: \"Add Description\",\n              rows: 3,\n              name: \"description\",\n              onChange: handleChange,\n              value: values.description\n            })))), React.createElement(\"div\", {\n              className: \"row pt-5 border-bottom pb-3\"\n            }, React.createElement(\"div\", {\n              className: \"col-12 col-md-6\"\n            }, React.createElement(\"h4\", {\n              className: \"text-left tittle-mini\"\n            }, \"PEOPLE\")), React.createElement(\"div\", {\n              className: \"table-responsive\"\n            }, React.createElement(\"table\", {\n              className: \"table table-borderless\"\n            }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", {\n              scope: \"col\"\n            }, \"Full Name\"), React.createElement(\"th\", {\n              scope: \"col\"\n            }, \"Email\"), React.createElement(\"th\", {\n              scope: \"col\"\n            }, \"Role\"), React.createElement(\"th\", {\n              scope: \"col\"\n            }))), React.createElement(\"tbody\", null, _this._renderPartiesMemberInfo())))), React.createElement(\"div\", {\n              className: \"row pt-5 border-bottom pb-3\"\n            }, React.createElement(\"div\", {\n              className: \"col-12\"\n            }, React.createElement(\"h4\", {\n              className: \"text-left tittle-mini\"\n            }, \"PROPERTY\")), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Year Built\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add year built\",\n              name: \"yearBuilt\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.yearBuilt\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Bedrooms\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add bedrooms\",\n              name: \"bedrooms\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.bedrooms\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Square Footage\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add square footage\",\n              name: \"squareFootage\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.squareFootage\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"School District\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add school district\",\n              name: \"schoolDistrict\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.schoolDistrict\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Type\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add type\",\n              name: \"type\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.type\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Bathrooms\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add bathrooms\",\n              name: \"bathrooms\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.bathrooms\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Lot Size\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add lot size\",\n              name: \"lotSize\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.lotSize\n            }))))), React.createElement(\"div\", {\n              className: \"row pt-5 pb-3\",\n              style: {\n                paddingTop: '2rem'\n              }\n            }, React.createElement(\"div\", {\n              className: \"col-12\"\n            }, React.createElement(\"h4\", {\n              className: \"text-left tittle-mini\"\n            }, \"PROPERTY ADDRESS\")), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Country\"), React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add country\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.country,\n              name: \"country\"\n            }))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Street Number\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add street number\",\n              name: \"streetNumber\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.streetNumber\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Street Name\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add street name\",\n              name: \"streetName\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.streetName\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Unit Number\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add unit number\",\n              name: \"unitNumber\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.unitNumber\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"City\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add city\",\n              name: \"city\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.city\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"State/Prov\"), React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add state/prov\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.state,\n              name: \"state\"\n            }))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"ZIP/Postal Code\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add zip/postal code\",\n              name: \"postalCode\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.postalCode\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"County\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add county\",\n              name: \"county\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.county\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"MLS Number\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add MLS number\",\n              name: \"mlsNumber\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.mlsNumber\n            })))), React.createElement(\"div\", {\n              className: \"col-12 col-md-4 col-lg-4\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"label\", {\n              className: \"tittle-mini-ver\"\n            }, \"Parcel/TaxID\"), React.createElement(\"div\", {\n              className: \"transaction-pro\"\n            }, React.createElement(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Add parcel/tax ID\",\n              name: \"taxId\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.taxId\n            }))))), React.createElement(\"div\", {\n              className: \"row pt-3\"\n            }, React.createElement(\"div\", {\n              className: \"form-group\"\n            }, React.createElement(\"div\", {\n              className: \"btn-save\",\n              style: {\n                marginLeft: '10px'\n              }\n            }, React.createElement(\"button\", {\n              disabled: isSubmit || currentTransactionStatus === TransactionStatus.CLOSED || isSubmitting,\n              type: \"submit\",\n              className: \"btn text-white py-2 px-5\",\n              style: {\n                fontSize: '16px',\n                fontWeight: '500',\n                height: '100%'\n              }\n            }, isSubmitting && React.createElement(\"span\", {\n              className: \"spinner-border spinner-border-sm mr-2\"\n            }), \"Save\")))));\n          }))));\n        } else {\n          return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n            className: \"card-details\"\n          }, React.createElement(\"div\", {\n            className: \"box-card-details\"\n          }, React.createElement(\"div\", {\n            className: \"head-details\"\n          }, React.createElement(\"div\", {\n            className: \"boc-detail\"\n          }, React.createElement(\"div\", {\n            className: \"image-detail\"\n          }, React.createElement(\"div\", {\n            className: \"percent pr-2\"\n          }, React.createElement(\"div\", {\n            \"data-progress\": _this._viewPercentTransaction(),\n            className: \"th-17 th-per-d d-flex justify-content-center align-items-center display-6 text-white\",\n            style: {\n              '&::after': {\n                backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n              }\n            }\n          })), React.createElement(\"div\", {\n            className: \"name-address-title\"\n          }, transaction.address || 'None')))), React.createElement(\"form\", null, React.createElement(\"div\", {\n            className: \"row mt-4 border-bottom pb-3\"\n          }, React.createElement(\"div\", {\n            className: \"col-12\"\n          }, transaction.imageURL ? React.createElement(\"div\", {\n            className: \"main-image-details\"\n          }, React.createElement(\"img\", {\n            src: \"\".concat(transaction.imageURL),\n            alt: \"\"\n          })) : React.createElement(\"div\", {\n            className: \"image-upload-wrap mb-4\",\n            style: {\n              height: '56px'\n            }\n          }, React.createElement(\"div\", {\n            className: \"drag-text\"\n          }, React.createElement(\"h3\", null, \"Upload a photo\"))), React.createElement(\"div\", {\n            id: \"loadingTh\"\n          })), React.createElement(\"div\", {\n            className: \"col-12\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Transaction Name\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Type Here\",\n            type: \"text\",\n            defaultValue: transaction.address || 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Transaction Type\"), React.createElement(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            id: \"example-date-input\",\n            defaultValue: _this._viewTransactionType(transaction.transactionType)\n          }))), React.createElement(\"div\", {\n            className: \"col-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Transaction Status\"), React.createElement(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            id: \"example-date-input\",\n            defaultValue: _this._viewTransactionStatus(transaction.transactionTypeStatus)\n          }))), React.createElement(\"div\", {\n            className: \"col-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Expected Closing Date\"), React.createElement(\"input\", {\n            className: \"form-control\",\n            type: \"date\",\n            id: \"example-date-input\",\n            defaultValue: _this._viewDate(transaction.closingDate)\n          }))), React.createElement(\"div\", {\n            className: \"col-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"URL\"), React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add URL\",\n            name: \"url\",\n            type: \"text\",\n            defaultValue: transaction.url || 'None'\n          }))), React.createElement(\"div\", {\n            className: \"col-12\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Description\"), React.createElement(\"textarea\", {\n            className: \"form-control\",\n            placeholder: \"Add Description\",\n            rows: 3,\n            defaultValue: transaction.description || 'None'\n          })))), React.createElement(\"div\", {\n            className: \"row pt-5 border-bottom pb-3\"\n          }, React.createElement(\"div\", {\n            className: \"col-12\"\n          }, React.createElement(\"h4\", {\n            className: \"text-left tittle-mini\"\n          }, \"PEOPLE\")), React.createElement(\"table\", {\n            className: \"table table-borderless\"\n          }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", {\n            scope: \"col\"\n          }, \"Full Name\"), React.createElement(\"th\", {\n            scope: \"col\"\n          }, \"Email\"), React.createElement(\"th\", {\n            scope: \"col\"\n          }, \"Role\"))), React.createElement(\"tbody\", null, _this._renderPartiesMemberInfo()))), React.createElement(\"div\", {\n            className: \"row pt-5 border-bottom pb-3\"\n          }, React.createElement(\"div\", {\n            className: \"col-12\"\n          }, React.createElement(\"h4\", {\n            className: \"text-left tittle-mini\"\n          }, \"PROPERTY\")), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Year Built\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add year built\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].yearBuilt : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Bedrooms\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add bedrooms\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].bedrooms : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Square Footage\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add square footage\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].squareFootage : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"School District\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add school district\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].schoolDistrict : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Type\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add type\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].type : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Bathrooms\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add bathrooms\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].bathrooms : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Lot Size\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add lot size\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].lotSize : 'None' : 'None'\n          }))))), React.createElement(\"div\", {\n            className: \"row pt-5 pb-3\",\n            style: {\n              paddingTop: '2rem'\n            }\n          }, React.createElement(\"div\", {\n            className: \"col-12\"\n          }, React.createElement(\"h4\", {\n            className: \"text-left tittle-mini\"\n          }, \"PROPERTY ADDRESS\")), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Country\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add country\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].country : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Street Number\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add street number\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].streetNumber : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Street Name\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add street name\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].streetName : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Unit Number\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add unit number\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].unitNumber : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"City\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add city\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].city : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"State/Prov\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add state/prov\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].state : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"ZIP/Postal Code\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add zip/postal code\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].postalCode : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"County\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add county\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].county : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"MLS Number\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add MLS number\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].mlsNumber : 'None' : 'None'\n          })))), React.createElement(\"div\", {\n            className: \"col-4\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Parcel/TaxID\"), React.createElement(\"div\", {\n            className: \"transaction-pro\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Add parcel/tax ID\",\n            type: \"text\",\n            defaultValue: detail ? detail[0] ? detail[0].taxId : 'None' : 'None'\n          })))))))));\n        }\n      }\n\n      if (_this.props.selectedViewParties === 'Actions Needed' && listEnvelopeDocument.length > 0) {\n        return React.createElement(TransactionDocumentActions, {\n          currentParty: currentParty,\n          documentActions: documentActionsByPartyId,\n          listDocument: listEnvelopeDocument,\n          reFetchData: function reFetchData() {\n            return _this._fetchDocumentsAndActions();\n          },\n          transactionStatus: currentTransactionStatus\n        });\n      }\n\n      if (_this.props.selectedViewParties === 'My Documents') {\n        return React.createElement(React.Fragment, null, React.createElement(TransactionDocuments, {\n          listDocument: listDocument\n        }), dataVendor && dataVendor.length > 0 ? React.createElement(TransactionDocumentVendor, {\n          listDocument: dataVendor\n        }) : React.createElement(React.Fragment, null));\n      }\n\n      if (_this.props.selectedViewParties === 'Envelopes') {\n        return React.createElement(TransactionEnvelopes, {\n          documentAction: documentAction,\n          listDocument: listEnvelopeDocument\n        });\n      }\n\n      if (_this.props.selectedViewParties === 'Main') {\n        var _transaction = _this.state.transaction;\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"card-des-big\"\n        }, React.createElement(\"div\", {\n          className: \"info-description\"\n        }, React.createElement(\"div\", {\n          className: \"info-left\"\n        }, React.createElement(\"div\", {\n          className: \"card-info-left\"\n        }, React.createElement(\"div\", {\n          className: \"bo-image\"\n        }, _transaction.imageURL !== '' ? React.createElement(\"img\", {\n          src: \"\".concat(_transaction.imageURL),\n          alt: \"\",\n          style: {\n            objectFit: 'cover'\n          }\n        }) : React.createElement(\"img\", {\n          src: \"/static/images/image-default.png\",\n          alt: \"\",\n          style: {\n            objectFit: 'cover'\n          }\n        })), React.createElement(\"div\", {\n          className: \"description\"\n        }, React.createElement(\"div\", {\n          className: \"up-des\"\n        }, React.createElement(\"div\", {\n          className: \"address-x\"\n        }, React.createElement(\"h4\", {\n          className: \"name-des\"\n        }, _transaction.address)), React.createElement(\"a\", {\n          href: \"\".concat(_transaction.url),\n          className: \"link-des\"\n        }, _transaction.url)), React.createElement(\"div\", {\n          className: \"down-des\"\n        }, React.createElement(\"p\", null, _transaction.description))))), React.createElement(\"div\", {\n          className: \"info-right\"\n        }, React.createElement(\"div\", {\n          className: \"info-percents\"\n        }, React.createElement(\"div\", {\n          className: \"cap-per\"\n        }, \"Property to Close\"), React.createElement(\"div\", {\n          className: \"percent\"\n        }, React.createElement(\"div\", {\n          \"data-progress\": _this._viewPercentTransaction(),\n          className: \"th-17  d-flex justify-content-center align-items-center display-6 text-white\",\n          style: {\n            '&::after': {\n              backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n            }\n          }\n        }))), React.createElement(\"div\", {\n          className: \"info-ch\"\n        }, React.createElement(\"div\", {\n          className: \"type-ch\"\n        }, React.createElement(\"label\", {\n          className: \"type-ch-l\"\n        }, \"Type\"), React.createElement(\"p\", null, _this._viewTransactionType(_transaction.transactionType))), React.createElement(\"div\", {\n          className: \"status-ch\"\n        }, React.createElement(\"label\", {\n          className: \"status-ch-l\"\n        }, \"Status\"), React.createElement(\"p\", null, _this._viewTransactionStatus(_transaction.transactionTypeStatus))), React.createElement(\"div\", {\n          className: \"create-ch\"\n        }, React.createElement(\"label\", {\n          className: \"create-ch-l\"\n        }, \"Expected Closing Date\"), React.createElement(\"p\", null, moment(_transaction.closingDate).format('ll') === 'Jan 1, 1970' ? 'None' : moment(_transaction.closingDate).format('ll'))))))), React.createElement(\"h5\", {\n          className: \"pt-h5\"\n        }, \"Parties\"), React.createElement(\"div\", {\n          className: \"row\"\n        }, _this._testPartiesView()));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderTransactionPartiesAllowedAccess\", function () {\n      var _this$state7 = _this.state,\n          transaction = _this$state7.transaction,\n          listDocument = _this$state7.listDocument,\n          listEnvelopeDocument = _this$state7.listEnvelopeDocument,\n          documentAction = _this$state7.documentAction,\n          documentActionsByPartyId = _this$state7.documentActionsByPartyId;\n      var _this$props2 = _this.props,\n          currentParty = _this$props2.currentParty,\n          currentTransactionStatus = _this$props2.currentTransactionStatus;\n      var role = _this.props.partyTarget.role;\n\n      if (_this.props.selectedViewParties === 'Main') {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"card-des-big\"\n        }, React.createElement(\"div\", {\n          className: \"info-description\"\n        }, React.createElement(\"div\", {\n          className: \"info-left\"\n        }, React.createElement(\"div\", {\n          className: \"card-info-left\"\n        }, React.createElement(\"div\", {\n          className: \"bo-image\"\n        }, transaction.imageURL !== '' ? React.createElement(\"img\", {\n          src: \"\".concat(transaction.imageURL),\n          alt: \"\"\n        }) : React.createElement(\"img\", {\n          src: \"/static/images/image-default.png\",\n          alt: \"\"\n        })), React.createElement(\"div\", {\n          className: \"description\"\n        }, React.createElement(\"div\", {\n          className: \"up-des\"\n        }, React.createElement(\"div\", {\n          className: \"address-x\"\n        }, React.createElement(\"h4\", {\n          className: \"name-des\"\n        }, transaction.address)), React.createElement(\"a\", {\n          href: \"\".concat(transaction.url),\n          className: \"link-des\"\n        }, transaction.url)), React.createElement(\"div\", {\n          className: \"down-des\"\n        }, React.createElement(\"p\", null, transaction.description))))), React.createElement(\"div\", {\n          className: \"info-right\"\n        }, React.createElement(\"div\", {\n          className: \"info-percents\"\n        }, React.createElement(\"div\", {\n          className: \"cap-per\"\n        }, \"Property to Close\"), React.createElement(\"div\", {\n          className: \"percent\"\n        }, React.createElement(\"div\", {\n          \"data-progress\": _this._viewPercentTransaction(),\n          className: \"th-17 d-flex justify-content-center align-items-center display-6 text-white\",\n          style: {\n            '&::after': {\n              backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n            }\n          }\n        }))), React.createElement(\"div\", {\n          className: \"info-ch\"\n        }, React.createElement(\"div\", {\n          className: \"type-ch\"\n        }, React.createElement(\"label\", {\n          className: \"type-ch-l\"\n        }, \"Type\"), React.createElement(\"p\", null, _this._viewTransactionType(transaction.transactionType))), React.createElement(\"div\", {\n          className: \"status-ch\"\n        }, React.createElement(\"label\", {\n          className: \"status-ch-l\"\n        }, \"Status\"), React.createElement(\"p\", null, _this._viewTransactionStatus(transaction.transactionTypeStatus))), React.createElement(\"div\", {\n          className: \"create-ch\"\n        }, React.createElement(\"label\", {\n          className: \"create-ch-l\"\n        }, \"Expected Closing Date\"), React.createElement(\"p\", null, moment(transaction.closingDate).format('ll') === 'Jan 1, 1970' ? 'None' : moment(transaction.closingDate).format('ll'))))))), React.createElement(\"h5\", {\n          className: \"pt-h5\"\n        }, \"Parties\"), React.createElement(\"div\", {\n          className: \"tha-6\"\n        }, React.createElement(\"div\", {\n          className: \"cardParties\"\n        }, React.createElement(\"div\", {\n          className: \"cardParties-box\"\n        }, React.createElement(\"div\", {\n          className: \"project-content\"\n        }, _this._renderCardBodyTest(role), React.createElement(\"div\", {\n          className: \"project-role-name\"\n        }, _this._renderTransactionPartiesFullName(role)), React.createElement(\"div\", {\n          className: \"project-avt\"\n        }, _this._renderAvatarTransaction(role)), _this._renderButtonFile(role), _this._renderButtonProfile(role))))));\n      }\n\n      if (_this.props.selectedViewParties === 'Actions Needed') {\n        return React.createElement(TransactionDocumentActions, {\n          currentParty: currentParty,\n          documentActions: documentActionsByPartyId,\n          listDocument: listEnvelopeDocument,\n          reFetchData: function reFetchData() {\n            return _this._fetchDocumentsAndActions();\n          },\n          transactionStatus: currentTransactionStatus\n        });\n      }\n\n      if (_this.props.selectedViewParties === 'My Documents') {\n        return React.createElement(TransactionDocuments, {\n          listDocument: listDocument\n        });\n      }\n\n      if (_this.props.selectedViewParties === 'Envelopes') {\n        return React.createElement(TransactionEnvelopes, {\n          documentAction: documentAction,\n          listDocument: listEnvelopeDocument\n        });\n      }\n\n      if (_this.props.selectedViewParties === 'View Details') {\n        var _transaction2 = _this.state.transaction;\n        var detail = _this.props.detail;\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"card-details\"\n        }, React.createElement(\"div\", {\n          className: \"box-card-details\"\n        }, React.createElement(\"div\", {\n          className: \"head-details\"\n        }, React.createElement(\"div\", {\n          className: \"boc-detail\"\n        }, React.createElement(\"div\", {\n          className: \"image-detail\"\n        }, React.createElement(\"div\", {\n          className: \"percent pr-2\"\n        }, React.createElement(\"div\", {\n          \"data-progress\": _this._viewPercentTransaction(),\n          className: \"th-17 th-per-d d-flex justify-content-center align-items-center display-6 text-white\",\n          style: {\n            '&::after': {\n              backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n            }\n          }\n        })), React.createElement(\"div\", {\n          className: \"name-address-title\"\n        }, _transaction2.address || 'None')))), React.createElement(\"form\", null, React.createElement(\"div\", {\n          className: \"row mt-4 border-bottom pb-3\"\n        }, React.createElement(\"div\", {\n          className: \"col-12\"\n        }, _transaction2.imageURL ? React.createElement(\"div\", {\n          className: \"main-image-details\"\n        }, React.createElement(\"img\", {\n          src: \"\".concat(_transaction2.imageURL),\n          alt: \"\"\n        })) : React.createElement(\"div\", {\n          className: \"image-upload-wrap mb-4\",\n          style: {\n            height: '56px'\n          }\n        }, React.createElement(\"div\", {\n          className: \"drag-text\"\n        }, React.createElement(\"h3\", null, \"Upload a photo\"))), React.createElement(\"div\", {\n          id: \"loadingTh\"\n        })), React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Transaction Name\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Type Here\",\n          type: \"text\",\n          value: _transaction2.address || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Transaction Type\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"example-date-input\",\n          value: _this._viewTransactionType(_transaction2.transactionType)\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Transaction Status\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"example-date-input\",\n          value: _this._viewTransactionStatus(_transaction2.transactionTypeStatus)\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Expected Closing Date\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"date\",\n          id: \"example-date-input\",\n          defaultValue: _this._viewDate(_transaction2.closingDate)\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"URL\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add URL\",\n          name: \"url\",\n          type: \"text\",\n          value: _transaction2.url || 'None'\n        }))), React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Description\"), React.createElement(\"textarea\", {\n          className: \"form-control\",\n          placeholder: \"Add Description\",\n          rows: 3,\n          value: _transaction2.description || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"row pt-5 border-bottom pb-3\"\n        }, React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"h4\", {\n          className: \"text-left tittle-mini\"\n        }, \"PEOPLE\")), React.createElement(\"table\", {\n          className: \"table table-borderless\"\n        }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Full Name\"), React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Email\"), React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Role\"))), React.createElement(\"tbody\", null, _this._renderPartiesMemberInfo()))), React.createElement(\"div\", {\n          className: \"row pt-5 border-bottom pb-3\"\n        }, React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"h4\", {\n          className: \"text-left tittle-mini\"\n        }, \"PROPERTY\")), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Year Built\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add year built\",\n          type: \"text\",\n          value: detail[0].yearBuilt || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Bedrooms\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add bedrooms\",\n          type: \"text\",\n          value: detail[0].bedrooms || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Square Footage\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add square footage\",\n          type: \"text\",\n          value: detail[0].squareFootage || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"School District\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add school district\",\n          type: \"text\",\n          value: detail[0].schoolDistrict || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Type\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add type\",\n          type: \"text\",\n          value: detail[0].type || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Bathrooms\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add bathrooms\",\n          type: \"text\",\n          value: detail[0].bathrooms || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Lot Size\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add lot size\",\n          type: \"text\",\n          value: detail[0].lotSize || 'None'\n        }))))), React.createElement(\"div\", {\n          className: \"row pt-5 pb-3\",\n          style: {\n            paddingTop: '2rem'\n          }\n        }, React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"h4\", {\n          className: \"text-left tittle-mini\"\n        }, \"PROPERTY ADDRESS\")), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Country\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add country\",\n          type: \"text\",\n          value: detail[0].country || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Street Number\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add street number\",\n          type: \"text\",\n          value: detail[0].streetNumber || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Street Name\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add street name\",\n          type: \"text\",\n          value: detail[0].streetName || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Unit Number\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add unit number\",\n          type: \"text\",\n          value: detail[0].unitNumber || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"City\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add city\",\n          type: \"text\",\n          value: detail[0].city || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"State/Prov\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add state/prov\",\n          type: \"text\",\n          value: detail[0].state || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"ZIP/Postal Code\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add zip/postal code\",\n          type: \"text\",\n          value: detail[0].postalCode || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"County\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add county\",\n          type: \"text\",\n          value: detail[0].county || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"MLS Number\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add MLS number\",\n          type: \"text\",\n          value: detail[0].mlsNumber || 'None'\n        })))), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Parcel/TaxID\"), React.createElement(\"div\", {\n          className: \"transaction-pro\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add parcel/tax ID\",\n          type: \"text\",\n          value: detail[0].taxId || 'None'\n        })))))))));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewTransactionType\", function (transactionType) {\n      switch (transactionType) {\n        case '':\n          return 'None';\n\n        case 'new-purchase':\n          return 'Purchase';\n\n        case 'new-listing-for-sale':\n          return 'Listing for sale';\n\n        case 'new-listing-for-lease':\n          return 'Listing for lease';\n\n        case 'new-lease':\n          return 'Lease';\n\n        case 'new-real-estate-other':\n          return 'Real estate other';\n\n        case 'new-other':\n          return 'Other';\n\n        default:\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewTransactionStatus\", function (transaction) {\n      if (transaction) {\n        switch (transaction) {\n          case '':\n            return 'None';\n\n          case TransactionTypeStatus.TTS_PRE_OFFER:\n            return 'Pre-offer';\n\n          case TransactionTypeStatus.TTS_UNDER_CONTRACT:\n            return 'Under contract';\n\n          case TransactionTypeStatus.TTS_ESCROW:\n            return 'Escrow';\n\n          case TransactionTypeStatus.TTS_ESCROW_CLOSE:\n            return 'Escrow close';\n\n          case TransactionTypeStatus.TTS_WITHDRAWN:\n            return 'Withdrawn';\n\n          case TransactionTypeStatus.TTS_SOLD:\n            return 'Sold';\n\n          case TransactionTypeStatus.TTS_TERMINATED:\n            return 'Terminated';\n\n          case TransactionTypeStatus.TTS_ARCHIVED:\n            return 'Archived';\n\n          case TransactionTypeStatus.TTS_PRE_LISTING:\n            return 'Pre-listing';\n\n          case TransactionTypeStatus.TTS_PRIVATE_LISTING:\n            return 'Private Listing';\n\n          case TransactionTypeStatus.TTS_ACTIVE_LISTING:\n            return 'Active Listing';\n\n          case TransactionTypeStatus.TTS_LEASED:\n            return 'Leased';\n\n          case TransactionTypeStatus.TTS_NEW:\n            return 'New';\n\n          case TransactionTypeStatus.TTS_IN_PROCESS:\n            return 'In process';\n\n          case TransactionTypeStatus.TTS_DONE:\n            return 'Done';\n\n          case TransactionTypeStatus.TTS_CLOSE:\n            return 'Close';\n\n          default:\n            break;\n        }\n      } else {\n        return 'None';\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_testPartiesView\", function () {\n      return ROLES.map(function (role, index) {\n        return React.createElement(\"div\", {\n          className: \"cardParties\",\n          key: index\n        }, React.createElement(\"div\", {\n          className: \"cardParties-box\"\n        }, React.createElement(\"div\", {\n          className: \"project-content\"\n        }, _this._renderCardBodyTest(role), React.createElement(\"div\", {\n          className: \"project-role-name\"\n        }, _this._renderTransactionPartiesFullName(role)), React.createElement(\"div\", {\n          className: \"project-avt\"\n        }, _this._renderAvatarTransaction(role)), _this._renderButtonFile(role), _this._renderButtonProfile(role))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_percentOfParty\", function (role) {\n      var parties = _this.props.transaction.parties;\n      var matchedParty = parties.find(function (item) {\n        return item.role === role;\n      });\n\n      if (!matchedParty) {\n        return 0;\n      }\n\n      return roundPercent(calculatorPercentageOfParty(matchedParty.documents, matchedParty.assignedActions));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderCardBody\", function (role) {\n      var transaction = _this.state.transaction;\n      var parties = _this.state.transaction.parties;\n      var partyJoined = parties.find(function (party) {\n        return party.role === role;\n      });\n\n      if (partyJoined) {\n        return React.createElement(Link, {\n          route: \"/my-transactions/\".concat(transaction.id, \"/parties/\").concat(partyJoined.id, \"/files\")\n        }, React.createElement(\"div\", {\n          className: \"card-body py-0 border-bottom\",\n          style: {\n            cursor: 'pointer'\n          }\n        }, React.createElement(\"div\", {\n          \"data-progress\": _this._percentOfParty(role),\n          className: \"progress-circle d-flex justify-content-center align-items-center display-6 text-white\",\n          style: {\n            '&::after': {\n              backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n            }\n          }\n        }), React.createElement(\"h4\", {\n          className: \"card-title\"\n        }, getRoleLabel(role))));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"card-body py-0 border-bottom\"\n      }, React.createElement(\"div\", {\n        \"data-progress\": _this._percentOfParty(role),\n        className: \"progress-circle d-flex justify-content-center align-items-center display-6 text-white\",\n        style: {\n          '&::after': {\n            backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n          }\n        }\n      }), React.createElement(\"h4\", {\n        className: \"card-title\"\n      }, getRoleLabel(role)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_fetchDocumentsAndActions\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee11() {\n      var _this$props3, currentParty, transaction, _ref15, _ref16, listDocument, listEnvelopeDocument, documentActionsByPartyId, documentAction, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, doc, actions;\n\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              // Need for \"Document\" feature\n              _this$props3 = _this.props, currentParty = _this$props3.currentParty, transaction = _this$props3.transaction;\n              _context11.next = 3;\n              return _Promise.all([transactionService.getDocumentsAndPartyByTransactionId(transaction.id), transactionService.getEnvelopeDocumentsAndPartyByTransactionId(transaction.id), transactionService.getDocumentActionsByPartyId(currentParty.id)]);\n\n            case 3:\n              _ref15 = _context11.sent;\n              _ref16 = _slicedToArray(_ref15, 3);\n              listDocument = _ref16[0];\n              listEnvelopeDocument = _ref16[1];\n              documentActionsByPartyId = _ref16[2];\n              documentAction = {};\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context11.prev = 12;\n              _iterator = _getIterator(listEnvelopeDocument);\n\n            case 14:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context11.next = 23;\n                break;\n              }\n\n              doc = _step.value;\n              _context11.next = 18;\n              return transactionService.getDocumentActionsByDocumentId(doc.id);\n\n            case 18:\n              actions = _context11.sent;\n              documentAction[doc.id] = actions;\n\n            case 20:\n              _iteratorNormalCompletion = true;\n              _context11.next = 14;\n              break;\n\n            case 23:\n              _context11.next = 29;\n              break;\n\n            case 25:\n              _context11.prev = 25;\n              _context11.t0 = _context11[\"catch\"](12);\n              _didIteratorError = true;\n              _iteratorError = _context11.t0;\n\n            case 29:\n              _context11.prev = 29;\n              _context11.prev = 30;\n\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n\n            case 32:\n              _context11.prev = 32;\n\n              if (!_didIteratorError) {\n                _context11.next = 35;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 35:\n              return _context11.finish(32);\n\n            case 36:\n              return _context11.finish(29);\n\n            case 37:\n              _this.setState({\n                listDocument: listDocument,\n                listEnvelopeDocument: listEnvelopeDocument,\n                documentActionsByPartyId: documentActionsByPartyId,\n                documentAction: documentAction\n              });\n\n              return _context11.abrupt(\"return\", {\n                listDocument: listDocument,\n                documentActionsByPartyId: documentActionsByPartyId,\n                documentAction: documentAction\n              });\n\n            case 39:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[12, 25, 29, 37], [30,, 32, 36]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_fetchTransaction\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee12() {\n      var _ref18, transaction;\n\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return transactionService.getDetailedTransactionAndActivityById(_this.props.transaction.id);\n\n            case 2:\n              _ref18 = _context12.sent;\n              transaction = _ref18.transaction;\n\n              _this.setState({\n                transaction: transaction\n              });\n\n            case 5:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_reRenderDynamic\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee13() {\n      var _ref20, transaction, newMem, dataVendor;\n\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return transactionService.getDetailedTransactionAndActivityById(_this.props.transaction.id);\n\n            case 2:\n              _ref20 = _context13.sent;\n              transaction = _ref20.transaction;\n              _context13.next = 6;\n              return transactionService.getMemberPartiesByTransaction(_this.props.transaction.id);\n\n            case 6:\n              newMem = _context13.sent;\n              _context13.next = 9;\n              return transactionService.getAllDocumentVendorByTransactionId(_this.props.transaction.id);\n\n            case 9:\n              dataVendor = _context13.sent;\n\n              _this.setState({\n                partyNew: newMem,\n                transaction: transaction,\n                dataVendor: dataVendor\n              });\n\n              _context13.next = 13;\n              return _this._fetchDocumentsAndActions();\n\n            case 13:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderIconEdit\", function (role) {\n      var partyNew = _this.state.partyNew;\n      var partyJoined = partyNew.find(function (party) {\n        return party.role === role;\n      });\n\n      if (partyJoined) {\n        if (partyJoined.userId === _this.props.currentUser.id) {\n          return React.createElement(\"button\", {\n            className: \"btn text-muted invisible\"\n          }, React.createElement(\"i\", {\n            className: \"fas fa-info invisible \"\n          }));\n        }\n\n        return React.createElement(\"button\", {\n          className: \"btn text-muted \",\n          onClick: function onClick() {\n            return _this._toggleModalInfoTransactionParties(role);\n          }\n        }, React.createElement(\"i\", {\n          className: \"fas fa-info \"\n        }));\n      } else {\n        return React.createElement(\"button\", {\n          className: \"btn text-muted invisible\",\n          onClick: function onClick() {\n            return _this._toggleModalInfoTransactionParties(role);\n          }\n        }, React.createElement(\"i\", {\n          className: \"fas fa-info\"\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderActionButton\", function (role) {\n      var transaction = _this.state.transaction;\n      var invitations = transaction.invitations,\n          parties = transaction.parties,\n          status = transaction.status;\n      var partyJoined = parties.find(function (party) {\n        return party.role === role;\n      });\n\n      if (partyJoined) {\n        if (partyJoined.userId === _this.props.currentUser.id) {\n          return React.createElement(\"button\", {\n            className: \"btn text-info\",\n            onClick: function onClick() {\n              return !status && _this._toggleModalUpdateMyProfile;\n            }\n          }, \"My Profile\");\n        }\n\n        if (partyJoined.access === TransactionAccessType.UPLOAD_ONLY) {\n          return React.createElement(\"a\", {\n            className: \"btn text-dark disabled\"\n          }, \"Message\");\n        }\n\n        return React.createElement(Link, {\n          route: \"/message?partyId=\".concat(partyJoined.id)\n        }, React.createElement(\"a\", {\n          className: \"text-info btn\"\n        }, \"Message\"));\n      }\n\n      var partyInvited = invitations.find(function (invitation) {\n        return invitation.role === role;\n      });\n\n      if (partyInvited) {\n        return React.createElement(\"button\", {\n          disabled: true,\n          className: \"btn text-info\"\n        }, \"Invited\");\n      }\n\n      return React.createElement(\"button\", {\n        className: \"btn text-info\",\n        onClick: function onClick() {\n          return _this._showInvitePartyModal(role, transaction);\n        },\n        disabled: !!status\n      }, \"Invite\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderActivityTimeline\", function () {\n      var groupTimes = _.groupBy(_this.state.activities, function (item) {\n        return moment(item.createdAt).format('L');\n      });\n\n      var groupTimesArray = _.chain(groupTimes).toPairs().sort(function (a, b) {\n        return b - a;\n      }).value();\n\n      return groupTimesArray.map(function (activity, index) {\n        return React.createElement(React.Fragment, {\n          key: index\n        }, React.createElement(\"p\", {\n          className: \"mt-3 ml-2\"\n        }, activity[0]), activity[1].map(function (itemTime, index) {\n          return React.createElement(\"div\", {\n            className: \"border-bottom p-0 row\",\n            key: index\n          }, React.createElement(\"div\", {\n            className: \"col-2 col-sm-1 col-md-1 col-xl-2 row align-items-center position-relative\"\n          }, React.createElement(\"div\", {\n            className: \"circle-timeline position-absolute timeline-sidebar_circle\"\n          })), React.createElement(\"div\", {\n            className: \"col-10 col-sm-11 col-md-11 col-xl-10 text-left \"\n          }, React.createElement(\"div\", null, React.createElement(\"b\", null, getRoleLabel(itemTime.role))), React.createElement(\"span\", {\n            className: \"card-text \"\n          }, React.createElement(\"b\", null, moment(itemTime.createdAt).format('LT'))), React.createElement(\"br\", null), React.createElement(\"span\", null, \"\".concat(itemTime.data ? itemTime.data.title : '', \" \").concat(getTransactionActivity(itemTime.type), \" \").concat(itemTime.data ? getRoleLabel(itemTime.data.currentRole) : ''))));\n        }));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSubmitModalUpdateMyProfile\",\n    /*#__PURE__*/\n    function () {\n      var _ref21 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(values, action) {\n        var partyTarget, setSubmitting, firstName, lastName, email, phoneNumber, company, licenseNumber;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                partyTarget = _this.state.partyTarget;\n                setSubmitting = action.setSubmitting;\n                _context14.prev = 2;\n                firstName = values.firstName, lastName = values.lastName, email = values.email, phoneNumber = values.phoneNumber, company = values.company, licenseNumber = values.licenseNumber;\n                setSubmitting(true);\n                _context14.next = 7;\n                return transactionService.updateTransactionPartyById(partyTarget.id, {\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phoneNumber: phoneNumber,\n                  company: company,\n                  licenseNumber: licenseNumber\n                });\n\n              case 7:\n                setSubmitting(false);\n                toastr.success('Success');\n\n                _this._reloadDataMember();\n\n                _this._toggleModalUpdateMyProfile();\n\n                _context14.next = 17;\n                break;\n\n              case 13:\n                _context14.prev = 13;\n                _context14.t0 = _context14[\"catch\"](2);\n                toastr.error(_context14.t0.message);\n                setSubmitting(false);\n\n              case 17:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, null, [[2, 13]]);\n      }));\n\n      return function (_x12, _x13) {\n        return _ref21.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_toggleModalUpdateMyProfile\", function () {\n      return _this.setState({\n        toggleModalUpdateMyProfile: !_this.state.toggleModalUpdateMyProfile\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderModalUpdateMyProfile\", function () {\n      var _this$state8 = _this.state,\n          partyTarget = _this$state8.partyTarget,\n          transaction = _this$state8.transaction;\n      return React.createElement(Modal, {\n        isOpen: _this.state.toggleModalUpdateMyProfile || false,\n        toggle: _this._toggleModalUpdateMyProfile,\n        id: \"create-transaction-party-profile-modal\"\n      }, React.createElement(\"div\", {\n        className: \"modal-header modal-header--change\",\n        id: \"bg-gr\"\n      }, React.createElement(\"div\", {\n        className: \"text-center w-100\"\n      }, React.createElement(\"h5\", {\n        className: \"modal-title new-add\",\n        id: \"exampleModalLabel\"\n      }, \"Transaction Profile\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close bg-transparent\",\n        \"data-dismiss\": \"modal\",\n        onClick: _this._toggleModalUpdateMyProfile\n      }, \"\\xD7\")), React.createElement(Formik, {\n        initialValues: {\n          firstName: partyTarget.firstName || '',\n          lastName: partyTarget.lastName || '',\n          email: partyTarget.email || '',\n          phoneNumber: partyTarget.phoneNumber || '',\n          company: partyTarget.company || '',\n          licenseNumber: partyTarget.licenseNumber || ''\n        },\n        onSubmit: _this._onSubmitModalUpdateMyProfile,\n        validate: function validate(values) {\n          var error = {};\n\n          if (partyTarget.role !== 'seller' && partyTarget.role !== 'buyer') {\n            if (values.firstName === '' || values.lastName === '' || values.email === '' || values.phoneNumber.length < 9 || values.company === '') {\n              error.details = \"\".concat(getRoleLabel(partyTarget.role), \" details are required\");\n            }\n          } else {\n            if (values.firstName.length < 1 || values.lastName.length < 1 || values.email.length < 1 || values.phoneNumber.length < 9) {\n              error.details = \"\".concat(getRoleLabel(partyTarget.role), \" details are required\");\n            }\n          }\n\n          return error;\n        }\n      }, function (_ref22) {\n        var values = _ref22.values,\n            errors = _ref22.errors,\n            isValid = _ref22.isValid,\n            isSubmitting = _ref22.isSubmitting,\n            handleSubmit = _ref22.handleSubmit,\n            handleChange = _ref22.handleChange;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, React.createElement(\"div\", {\n          className: \"modal-body px-5 mx-2\",\n          id: \"main-body-add-member\"\n        }, React.createElement(\"div\", null, React.createElement(\"div\", {\n          className: \"row pt-3\"\n        }, React.createElement(\"div\", {\n          className: \"col-12 col-md-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"First Name\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"First Name\",\n          name: \"firstName\",\n          onChange: handleChange,\n          value: values.firstName,\n          autoFocus: true\n        }))), React.createElement(\"div\", {\n          className: \"col-12 col-md-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Last Name\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Last Name\",\n          name: \"lastName\",\n          onChange: handleChange,\n          value: values.lastName\n        }))), React.createElement(\"div\", {\n          className: \"col-12 col-md-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Email\"), React.createElement(\"input\", {\n          disabled: true,\n          className: \"form-control\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          onChange: handleChange,\n          value: values.email\n        }))), React.createElement(\"div\", {\n          className: \"col-12 col-md-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Phone Number\"), React.createElement(PhoneInput, {\n          country: 'us',\n          enableSearch: true,\n          onChange: function onChange(value) {\n            handleChange({\n              target: {\n                name: 'phoneNumber',\n                value: value\n              }\n            });\n          },\n          value: values.phoneNumber,\n          placeholder: \"Phone Number\",\n          className: \"form-control\"\n        }))), React.createElement(\"div\", {\n          className: \"col-12 col-md-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Company\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Company\",\n          name: \"company\",\n          onChange: handleChange,\n          value: values.company\n        }))), partyTarget.access === TransactionAccessType.FULL ? React.createElement(\"div\", {\n          className: \"col-12 col-md-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"License Number\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"License Number\",\n          name: \"licenseNumber\",\n          onChange: handleChange,\n          value: values.licenseNumber\n        }))) : React.createElement(React.Fragment, null)), errors.details && React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, errors.details)), React.createElement(\"div\", {\n          className: \"text-center my-5\"\n        }, React.createElement(\"button\", {\n          disabled: !isValid || errors.details || transaction.status === TransactionStatus.ARCHIVED || transaction.status === TransactionStatus.CLOSED,\n          type: \"submit\",\n          className: \"btn btn-add-new text-white py-2 px-5\"\n        }, isSubmitting && React.createElement(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-2\"\n        }), \"Save\"))));\n      }));\n    });\n\n    _this.state = {\n      transaction: props.transaction,\n      activities: props.activities,\n      isDisabled: true,\n      toggleModal: false,\n      addPartyModalData: null,\n      isShowEditMemberModal: false,\n      isShowEditRoleAgent: false,\n      isShowPartiesFile: false,\n      isShowMemberModal: false,\n      isShowCloseTransactionModal: false,\n      toggleModalUpdateMyProfile: false,\n      toggleModalInfoTransactionParties: false,\n      partyTarget: props.partyTarget,\n      selectedView: 'Main',\n      selectedViewParties: props.selectedViewParties,\n      detail: props.detail,\n      listDocument: [],\n      documentAction: {},\n      documentActionsByPartyId: [],\n      dataUser: [],\n      dataDocument: [],\n      dataVendor: [],\n      memberRole: '',\n      partyNew: props.transaction.parties,\n      user: props.currentUser,\n      transactionAgents: [],\n      isEditingPercentTransaction: false,\n      isShowEditPercentTransaction: false,\n      tempPercentTransaction: null,\n      listEnvelopeDocument: [],\n      dataUserAllUer: [],\n      isShowTest: false\n    };\n    return _this;\n  }\n\n  _createClass(TransactionPartiesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('load', this._viewEditMemberByOwnerAgent());\n\n      this._getDataUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentUser = this.props.currentUser;\n      var _this$state9 = this.state,\n          dataUser = _this$state9.dataUser,\n          isShowEditMemberModal = _this$state9.isShowEditMemberModal,\n          transaction = _this$state9.transaction,\n          addPartyModalData = _this$state9.addPartyModalData,\n          isShowEditRoleAgent = _this$state9.isShowEditRoleAgent,\n          isShowPartiesFile = _this$state9.isShowPartiesFile,\n          isShowMemberModal = _this$state9.isShowMemberModal,\n          isShowCloseTransactionModal = _this$state9.isShowCloseTransactionModal,\n          memberRole = _this$state9.memberRole,\n          transactionAgents = _this$state9.transactionAgents,\n          dataUserAllUer = _this$state9.dataUserAllUer;\n      var party = this.props.partyTarget;\n\n      if (!transaction) {\n        return React.createElement(Error, {\n          statusCode: 404\n        });\n      }\n\n      if (!party) {\n        return React.createElement(Error, {\n          statusCode: 404\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"box-main\"\n      }, React.createElement(Head, null, React.createElement(\"title\", null, \"Transaction Parties\")), React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          width: '100%',\n          marginLeft: '0',\n          marginRight: '0' // justifyContent: 'center'\n\n        }\n      }, party.access === TransactionAccessType.FULL ? this._renderAllParties() : this._renderTransactionPartiesAllowedAccess()), React.createElement(\"footer\", {\n        className: \"footer-card\",\n        style: {\n          padding: '2rem 0'\n        }\n      }, React.createElement(\"div\", {\n        className: \"footer-page\"\n      }, React.createElement(\"div\", {\n        className: \"footer-p1\"\n      }, \"\\xA9 Copyright Link Management Systems. All rights reserved\"), React.createElement(\"div\", {\n        className: \"footer-p2\"\n      }, \"Powered by Link Brokerages\"))), isShowEditMemberModal && React.createElement(EditMemberModal, {\n        isShowEditMemberModal: isShowEditMemberModal,\n        dataUser: dataUser,\n        toggleMemberModal: function toggleMemberModal() {\n          return _this2.setState({\n            isShowEditMemberModal: !isShowEditMemberModal\n          });\n        },\n        realTimeEdit: function realTimeEdit() {\n          _this2._reloadDataMember();\n        }\n      }), isShowEditRoleAgent && React.createElement(EditRoleAgentModal, {\n        isShowEditRoleAgent: isShowEditRoleAgent,\n        dataUser: this.state.partyTarget,\n        toggleMemberModal: function toggleMemberModal() {\n          _this2.setState({\n            isShowEditRoleAgent: !isShowEditRoleAgent\n          });\n\n          Cookies.remove('add_new_transaction');\n        },\n        realTimeEdit: function realTimeEdit() {\n          _this2._reloadDataMember();\n        }\n      }), isShowPartiesFile && React.createElement(TransactionPartiesFileModal, {\n        isShowPartiesFile: isShowPartiesFile,\n        dataDocument: this.state.dataDocument,\n        toggleModal: function toggleModal() {\n          return _this2.setState({\n            isShowPartiesFile: !isShowPartiesFile\n          });\n        }\n      }), isShowMemberModal && React.createElement(AddNewMemberModal, {\n        isShowMemberModal: isShowMemberModal,\n        toggleMemberModal: function toggleMemberModal() {\n          return _this2.setState({\n            isShowMemberModal: !isShowMemberModal\n          });\n        },\n        transactionId: transaction.id,\n        memberRole: memberRole,\n        fetchData: function fetchData() {\n          return _this2._reRenderDynamic();\n        },\n        dataAllUser: dataUserAllUer\n      }), React.createElement(InvitePartyModal, {\n        data: {\n          addPartyModalData: addPartyModalData,\n          transaction: transaction\n        },\n        onClose: this._closeInvitePartyModal,\n        onSubmit: this._sendInvitation\n      }), this._renderModalUpdateMyProfile(), React.createElement(InformationInvitedModal, {\n        _CloseInfoTransactionParties: this._CloseInfoTransactionParties,\n        toggleModalInfoTransactionParties: this.state.toggleModalInfoTransactionParties,\n        _toggleModalInfoTransactionParties: this._toggleModalInfoTransactionParties,\n        transaction: transaction\n      }), isShowCloseTransactionModal && React.createElement(CloseTransactionModal, {\n        isShow: isShowCloseTransactionModal,\n        toggle: function toggle() {\n          return _this2.setState({\n            isShowCloseTransactionModal: !isShowCloseTransactionModal\n          });\n        },\n        transactionId: transaction.id,\n        currentUserId: currentUser.id,\n        transactionAgents: transactionAgents,\n        refetchData: function refetchData() {\n          return _this2._refetchDataDynamic();\n        }\n      }));\n    }\n  }]);\n\n  return TransactionPartiesPage;\n}(Component);\n\nexport default userOnly(TransactionPartiesPage);","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/TransactionPartiesPage/index.js"],"names":["React","Component","_","Error","moment","Cookies","toastr","Modal","Formik","Head","transactionService","userService","InvitePartyModal","InformationInvitedModal","TransactionRole","TransactionAccessType","TransactionType","TransactionTypeStatus","TransactionStatus","MAX_FILE_SIZE","Link","getRoleLabel","getTransactionFullAddress","getTransactionActivity","roundPercent","calculatorPercentageOfParty","userOnly","PhoneInput","EditMemberModal","AddNewMemberModal","EditRoleAgentModal","TransactionDocuments","TransactionEnvelopes","TransactionDocumentVendor","TransactionDocumentActions","TransactionPartiesFileModal","CloseTransactionModal","ROLES","BUYING_AGENT","SELLER_AGENT","BUYER","SELLER","TRANSACTION_COORDINATOR","ESCROW","TITLE","LENDER","HOME_INSPECTOR","TERMITE","_fetchTransactionAndActivities","transactionId","currentLoginUserId","getDetailedTransactionAndActivityById","transaction","activitiesFull","detail","partyTarget","parties","find","party","userId","activities","access","FULL","filter","activity","partyId","id","currentTransactionStatus","status","TransactionPartiesPage","nextProps","currentUser","avatar","state","user","setState","_reRenderDynamic","ctx","query","idTransaction","currentUserId","store","getState","global","loginUser","data","headerText","subHeaderText","toggleTimeline","props","loading","document","getElementById","classList","add","remove","getAllUser","dataUserAllUer","get","isShowEditRoleAgent","imageURL","_displayLoading","createMainImage","getTransactionsDetailByTransactionId","newTran","success","setTimeout","_hiddenLoading","code","msg","message","error","invitations","percentComplete","role","transactionParty","role1","toggleModalInfoTransactionParties","addPartyModalData","toggleModal","firstName","lastName","email","phoneNumber","inviteParty","isShowPartiesFile","dataDocument","partyNew","CLOSED","partyJoined","_getDataFile","documents","toggleModalUpdateMyProfile","ARCHIVED","isShowMemberModal","memberRole","_getDataEditMemberMain","partyInvited","invitation","_toggleModalUpdateMyProfile","_setAddMember","_percentOfParty","backgroundImage","name","length","map","index","percentOfTransaction","percentOfTransactions","item","percent","getMemberPartiesByTransaction","newMem","console","_viewName","_viewRole","padding","_getDataEditMember","concat","isShowEditMemberModal","dataUser","values","action","setSubmitting","yearBuilt","bedrooms","squareFootage","schoolDistrict","type","bathrooms","lotSize","country","streetNumber","streetName","unitNumber","city","postalCode","county","mlsNumber","taxId","address","transactionType","transactionTypeStatus","url","description","closingDate","statusT","TTS_ARCHIVED","updateTransactionById","createTransactionDetail","createNewTransactionDetail","_fetchTransaction","deleteImage","image","img","querySelector","reader","window","FileReader","addEventListener","readAsDataURL","date","a","Date","b","getTime","d","month","getMonth","day","getDate","year","getFullYear","join","e","callback","target","value","TTS_CLOSE","getAllAgents","transactionAgents","isShowCloseTransactionModal","isShowEditPercentTransaction","tempPercentTransaction","_viewPercentTransaction","isEditingPercentTransaction","updateTransactionPercent","_refetchDataDynamic","position","setViewButtonEdit","TTS_PRE_OFFER","TTS_UNDER_CONTRACT","TTS_ESCROW","TTS_ESCROW_CLOSE","TTS_SOLD","handleEditPercentTransaction","top","right","listDocument","listEnvelopeDocument","documentAction","documentActionsByPartyId","dataVendor","isSubmit","currentParty","selectedViewParties","_renderTransactionPercentCircle","_onSubmitDetail","handleChange","isSubmitting","handleSubmit","setFieldValue","isValid","height","event","currentTarget","files","size","saveImage","warning","NEW_PURCHASE","NEW_LISTING_FOR_SALE","NEW_LISTING_FOR_LEASE","NEW_LEASE","NEW_REAL_ESTATE_OTHER","NEW_OTHER","handleChangeTransactionTypeStatus","TTS_WITHDRAWN","TTS_TERMINATED","TTS_PRE_LISTING","TTS_PRIVATE_LISTING","TTS_ACTIVE_LISTING","TTS_LEASED","TTS_NEW","TTS_IN_PROCESS","TTS_DONE","_viewDate","_renderPartiesMemberInfo","paddingTop","marginLeft","fontSize","fontWeight","_viewTransactionType","_viewTransactionStatus","_fetchDocumentsAndActions","objectFit","format","_testPartiesView","_renderCardBodyTest","_renderTransactionPartiesFullName","_renderAvatarTransaction","_renderButtonFile","_renderButtonProfile","matchedParty","assignedActions","cursor","all","getDocumentsAndPartyByTransactionId","getEnvelopeDocumentsAndPartyByTransactionId","getDocumentActionsByPartyId","doc","getDocumentActionsByDocumentId","actions","getAllDocumentVendorByTransactionId","_toggleModalInfoTransactionParties","UPLOAD_ONLY","_showInvitePartyModal","groupTimes","groupBy","createdAt","groupTimesArray","chain","toPairs","sort","itemTime","title","currentRole","company","licenseNumber","updateTransactionPartyById","_reloadDataMember","_onSubmitModalUpdateMyProfile","details","errors","isDisabled","selectedView","isShowTest","_viewEditMemberByOwnerAgent","_getDataUser","width","marginRight","_renderAllParties","_renderTransactionPartiesAllowedAccess","_closeInvitePartyModal","_sendInvitation","_renderModalUpdateMyProfile","_CloseInfoTransactionParties"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport Error from 'next/error'\nimport moment from 'moment'\nimport Cookies from 'js-cookie'\nimport toastr from 'toastr'\nimport { Modal } from 'reactstrap'\nimport { Formik } from 'formik'\nimport Head from 'next/head'\nimport { transactionService, userService } from '../../services'\nimport InvitePartyModal from './InvitePartyModal'\nimport InformationInvitedModal from './InformationInvitedModal'\nimport {\n  TransactionRole,\n  TransactionAccessType,\n  TransactionType,\n  TransactionTypeStatus,\n  TransactionStatus,\n  MAX_FILE_SIZE\n} from '../../../common/models/Transaction'\nimport { Link } from '../../../common/routes'\n// import authRedux from '../../redux/authRedux'\nimport { getRoleLabel } from '../../view-models/User'\nimport {\n  getTransactionFullAddress,\n  getTransactionActivity,\n  roundPercent,\n  calculatorPercentageOfParty\n} from '../../view-models/Transaction'\nimport userOnly from '../../hocs/userOnly'\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport EditMemberModal from '../../component/Transaction/EditMemberModal'\nimport AddNewMemberModal from '../../component/Transaction/AddNewMemberModal'\nimport EditRoleAgentModal from '../../component/Transaction/EditRoleAgentModal'\nimport TransactionDocuments from './TransactionDocuments'\nimport TransactionEnvelopes from './TransactionEnvelopes'\nimport TransactionDocumentVendor from './TransactionDocumentVendor'\nimport TransactionDocumentActions from './TransactionDocumentActions'\nimport TransactionPartiesFileModal from '../../component/Transaction/TransactionPartiesFileModal'\nimport CloseTransactionModal from '../../component/Transaction/CloseTransactionModal'\n\nconst ROLES = [\n  TransactionRole.BUYING_AGENT,\n  TransactionRole.SELLER_AGENT,\n  TransactionRole.BUYER,\n  TransactionRole.SELLER,\n  TransactionRole.TRANSACTION_COORDINATOR,\n  TransactionRole.ESCROW,\n  TransactionRole.TITLE,\n  TransactionRole.LENDER,\n  TransactionRole.HOME_INSPECTOR,\n  TransactionRole.TERMITE\n]\n\nasync function _fetchTransactionAndActivities (\n  transactionId,\n  currentLoginUserId\n) {\n  const {\n    transaction,\n    activitiesFull,\n    detail\n  } = await transactionService.getDetailedTransactionAndActivityById(\n    transactionId\n  )\n\n  if (!transaction) {\n    return { transaction: null }\n  }\n  if (!detail) {\n    return { detail: null }\n  }\n  const partyTarget = transaction.parties.find(\n    party => party.userId === currentLoginUserId\n  )\n\n  if (!partyTarget) {\n    return { partyTarget: null }\n  }\n\n  const activities =\n    partyTarget.access === TransactionAccessType.FULL\n      ? activitiesFull\n      : activitiesFull.filter(activity => activity.partyId === partyTarget.id)\n  return {\n    transaction,\n    activities,\n    partyTarget,\n    detail,\n    currentTransactionStatus: transaction.status\n  }\n}\n\nclass TransactionPartiesPage extends Component {\n  static async getInitialProps (ctx) {\n    const transactionId = ctx.query.idTransaction\n    const currentUserId = ctx.store.getState().global.loginUser.data.id\n    const {\n      transaction,\n      activities,\n      partyTarget,\n      detail,\n      status\n    } = await _fetchTransactionAndActivities(transactionId, currentUserId)\n\n    return {\n      transaction,\n      partyTarget,\n      headerText: 'Transaction Parties',\n      activities,\n      detail,\n      subHeaderText:\n        partyTarget &&\n        transaction &&\n        `for ${getTransactionFullAddress(transaction)}`,\n      toggleTimeline: false,\n      status\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.currentUser.avatar !== this.state.user.avatar) {\n      this.setState({\n        user: {\n          ...this.state.user,\n          avatar: nextProps.currentUser.avatar\n        }\n      })\n    }\n    this._reRenderDynamic()\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      transaction: props.transaction,\n      activities: props.activities,\n      isDisabled: true,\n      toggleModal: false,\n      addPartyModalData: null,\n      isShowEditMemberModal: false,\n      isShowEditRoleAgent: false,\n      isShowPartiesFile: false,\n      isShowMemberModal: false,\n      isShowCloseTransactionModal: false,\n      toggleModalUpdateMyProfile: false,\n      toggleModalInfoTransactionParties: false,\n      partyTarget: props.partyTarget,\n      selectedView: 'Main',\n      selectedViewParties: props.selectedViewParties,\n      detail: props.detail,\n      listDocument: [],\n      documentAction: {},\n      documentActionsByPartyId: [],\n      dataUser: [],\n      dataDocument: [],\n      dataVendor: [],\n      memberRole: '',\n      partyNew: props.transaction.parties,\n      user: props.currentUser,\n      transactionAgents: [],\n      isEditingPercentTransaction: false,\n      isShowEditPercentTransaction: false,\n      tempPercentTransaction: null,\n      listEnvelopeDocument: [],\n      dataUserAllUer: [],\n      isShowTest: false\n    }\n  }\n\n  _displayLoading = () => {\n    const loading = document.getElementById('loadingTh')\n    loading.classList.add('display')\n  }\n\n  _hiddenLoading = () => {\n    const loading = document.getElementById('loadingTh')\n    loading.classList.remove('display')\n  }\n\n  componentDidMount () {\n    window.addEventListener('load', this._viewEditMemberByOwnerAgent())\n    this._getDataUser()\n  }\n\n  _getDataUser = async () => {\n    try {\n      const data = await userService.getAllUser()\n      this.setState({\n        dataUserAllUer: data\n      })\n    } catch (e) {}\n  }\n  // display popup when owner transaction agent\n  _viewEditMemberByOwnerAgent = () => {\n    const { idTransaction } = this.props.query\n    const id = Cookies.get('add_new_transaction')\n    if (idTransaction === id) {\n      this.setState({\n        isShowEditRoleAgent: true\n      })\n    }\n  }\n\n  saveImage = async (imageURL, id) => {\n    if (imageURL) {\n      try {\n        this._displayLoading()\n        await transactionService.createMainImage(id, imageURL)\n        const newTran = await transactionService.getTransactionsDetailByTransactionId(\n          id\n        )\n        this.setState({\n          transaction: newTran\n        })\n        toastr.success('Success')\n        setTimeout(() => {\n          this._hiddenLoading()\n        }, 2000)\n      } catch (e) {\n        let msg\n        switch (e.code) {\n          default: {\n            msg = e.message\n          }\n        }\n        toastr.error(msg)\n      }\n    }\n  }\n\n  render () {\n    const { currentUser } = this.props\n    const {\n      dataUser,\n      isShowEditMemberModal,\n      transaction,\n      addPartyModalData,\n      isShowEditRoleAgent,\n      isShowPartiesFile,\n      isShowMemberModal,\n      isShowCloseTransactionModal,\n      memberRole,\n      transactionAgents,\n      dataUserAllUer\n    } = this.state\n    const party = this.props.partyTarget\n    if (!transaction) {\n      return <Error statusCode={404} />\n    }\n    if (!party) {\n      return <Error statusCode={404} />\n    }\n\n    return (\n      <div className='box-main'>\n        <Head>\n          <title>Transaction Parties</title>\n        </Head>\n        <div\n          className='row'\n          style={{\n            width: '100%',\n            marginLeft: '0',\n            marginRight: '0'\n            // justifyContent: 'center'\n          }}\n        >\n          {party.access === TransactionAccessType.FULL\n            ? this._renderAllParties()\n            : this._renderTransactionPartiesAllowedAccess()}\n        </div>\n        <footer className='footer-card' style={{ padding: '2rem 0' }}>\n          <div className='footer-page'>\n            <div className='footer-p1'>\n              © Copyright Link Management Systems. All rights reserved\n            </div>\n            <div className='footer-p2'>Powered by Link Brokerages</div>\n          </div>\n        </footer>\n        {isShowEditMemberModal && (\n          <EditMemberModal\n            isShowEditMemberModal={isShowEditMemberModal}\n            dataUser={dataUser}\n            toggleMemberModal={() =>\n              this.setState({ isShowEditMemberModal: !isShowEditMemberModal })\n            }\n            realTimeEdit={() => {\n              this._reloadDataMember()\n            }}\n          />\n        )}\n        {isShowEditRoleAgent && (\n          <EditRoleAgentModal\n            isShowEditRoleAgent={isShowEditRoleAgent}\n            dataUser={this.state.partyTarget}\n            toggleMemberModal={() => {\n              this.setState({ isShowEditRoleAgent: !isShowEditRoleAgent })\n              Cookies.remove('add_new_transaction')\n            }}\n            realTimeEdit={() => {\n              this._reloadDataMember()\n            }}\n          />\n        )}\n        {isShowPartiesFile && (\n          <TransactionPartiesFileModal\n            isShowPartiesFile={isShowPartiesFile}\n            dataDocument={this.state.dataDocument}\n            toggleModal={() =>\n              this.setState({ isShowPartiesFile: !isShowPartiesFile })\n            }\n          />\n        )}\n        {isShowMemberModal && (\n          <AddNewMemberModal\n            isShowMemberModal={isShowMemberModal}\n            toggleMemberModal={() =>\n              this.setState({ isShowMemberModal: !isShowMemberModal })\n            }\n            transactionId={transaction.id}\n            memberRole={memberRole}\n            fetchData={() => this._reRenderDynamic()}\n            dataAllUser={dataUserAllUer}\n          />\n        )}\n        <InvitePartyModal\n          data={{ addPartyModalData, transaction }}\n          onClose={this._closeInvitePartyModal}\n          onSubmit={this._sendInvitation}\n        />\n        {this._renderModalUpdateMyProfile()}\n        <InformationInvitedModal\n          _CloseInfoTransactionParties={this._CloseInfoTransactionParties}\n          toggleModalInfoTransactionParties={\n            this.state.toggleModalInfoTransactionParties\n          }\n          _toggleModalInfoTransactionParties={\n            this._toggleModalInfoTransactionParties\n          }\n          transaction={transaction}\n        />\n        {isShowCloseTransactionModal && (\n          <CloseTransactionModal\n            isShow={isShowCloseTransactionModal}\n            toggle={() =>\n              this.setState({\n                isShowCloseTransactionModal: !isShowCloseTransactionModal\n              })\n            }\n            transactionId={transaction.id}\n            currentUserId={currentUser.id}\n            transactionAgents={transactionAgents}\n            refetchData={() => this._refetchDataDynamic()}\n          />\n        )}\n      </div>\n    )\n  }\n\n  _viewPercentTransaction = () => {\n    const { transaction } = this.state\n    if (transaction && transaction.parties && transaction.invitations) {\n      return transaction.percentComplete || 0\n    }\n  }\n\n  _toggleModalInfoTransactionParties = role => {\n    const transactionParty = this.state.transaction.parties.find(\n      role1 => role1.role === role\n    )\n    this.setState({\n      toggleModalInfoTransactionParties: transactionParty\n    })\n  }\n\n  _CloseInfoTransactionParties = role => {\n    this.setState({\n      toggleModalInfoTransactionParties: false\n    })\n  }\n\n  _showInvitePartyModal = role => {\n    this.setState({\n      addPartyModalData: role\n    })\n  }\n\n  _closeInvitePartyModal = () => {\n    this.setState({\n      addPartyModalData: null\n    })\n  }\n\n  _toggleModal = () => {\n    this.setState({\n      toggleModal: !this.state.toggleModal\n    })\n  }\n\n  _sendInvitation = async ({\n    firstName,\n    lastName,\n    email,\n    phoneNumber,\n    access\n  }) => {\n    try {\n      await transactionService.inviteParty({\n        transactionId: this.state.transaction.id,\n        role: this.state.addPartyModalData,\n        firstName,\n        lastName,\n        email,\n        phoneNumber,\n        access\n      })\n\n      toastr.success('Party has been invited')\n      // reload data to fetch new transaction information\n    } catch (e) {\n      toastr.error(e.message)\n    }\n  }\n\n  _refetchDataDynamic = async () => {\n    const { transaction } = await _fetchTransactionAndActivities(\n      this.state.transaction.id,\n      this.props.currentUser.id\n    )\n\n    this.setState({ transaction })\n  }\n\n  // view modal document\n  _getDataFile = data => {\n    this.setState({\n      isShowPartiesFile: true,\n      dataDocument: data\n    })\n  }\n  // test\n  _renderButtonFile = role => {\n    const { partyNew } = this.state\n    const { currentTransactionStatus } = this.props\n    if (currentTransactionStatus === TransactionStatus.CLOSED) {\n      return <div />\n    }\n\n    const partyJoined = partyNew.find(party => party.role === role)\n    if (partyJoined) {\n      return (\n        <button\n          className='files'\n          onClick={() => this._getDataFile(partyJoined.documents)}\n        >\n          Files\n        </button>\n      )\n    } else {\n      return (\n        <button className='files files__dis' disabled>\n          {' '}\n          Files{' '}\n        </button>\n      )\n    }\n  }\n\n  _getDataEditMemberMain = data => {\n    const { partyNew } = this.state\n    const user = partyNew.find(party => party.userId === data)\n    if (user) {\n      this.setState({\n        toggleModalUpdateMyProfile: true,\n        partyTarget: user\n      })\n    }\n  }\n\n  _setAddMember = role => {\n    const { transaction } = this.state\n    if (transaction.status !== TransactionStatus.ARCHIVED) {\n      this.setState({\n        isShowMemberModal: true,\n        memberRole: role\n      })\n    }\n  }\n\n  _renderButtonProfile = role => {\n    const { transaction, partyNew } = this.state\n    const { status } = transaction\n    const { invitations } = this.props.transaction\n    const { currentTransactionStatus } = this.props\n    if (currentTransactionStatus === TransactionStatus.CLOSED) {\n      return <div />\n    }\n\n    const partyJoined = partyNew.find(party => party.role === role)\n    if (partyJoined) {\n      return (\n        <button\n          className='profiles'\n          onClick={() => this._getDataEditMemberMain(partyJoined.userId)}\n        >\n          Profile\n        </button>\n      )\n    }\n    const partyInvited = invitations.find(\n      invitation => invitation.role === role\n    )\n    if (partyInvited) {\n      return (\n        <button\n          className='profiles'\n          onClick={() => !status && this._toggleModalUpdateMyProfile}\n        >\n          Profile\n        </button>\n      )\n    }\n    return (\n      <button className='profiles' onClick={() => this._setAddMember(role)}>\n        Add member\n      </button>\n    )\n  }\n\n  _renderCardBodyTest = role => {\n    const { partyNew } = this.state\n    const partyJoined = partyNew.find(party => party.role === role)\n\n    if (partyJoined) {\n      return (\n        <div className='no-padding'>\n          <div className='percent'>\n            <div\n              data-progress={this._percentOfParty(role)}\n              className='th-17 d-flex justify-content-center align-items-center display-6 text-white'\n              style={{\n                '&::after': {\n                  backgroundImage:\n                    'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                }\n              }}\n            />\n          </div>\n          <h6 className='role-content'>{getRoleLabel(role)}</h6>\n        </div>\n      )\n    }\n    return (\n      <div className='no-padding'>\n        <div className='percent'>\n          <div\n            data-progress={this._percentOfParty(role)}\n            className='th-17 d-flex justify-content-center align-items-center display-6 text-white'\n            style={{\n              '&::after': {\n                backgroundImage:\n                  'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n              }\n            }}\n          />\n        </div>\n        <h6 className='role-content'>{getRoleLabel(role)}</h6>\n      </div>\n    )\n  }\n  _renderTransactionPartiesFullName = role => {\n    const { partyNew } = this.state\n    const user = partyNew.find(party => party.role === role)\n    if (user) {\n      if (user.firstName) {\n        return <div className='name1'>{user.firstName}</div>\n      } else {\n        if (user.user.name) {\n          return <div className='name1'>{user.user.name}</div>\n        }\n      }\n    } else {\n      return <div className='name1'>Empty</div>\n    }\n  }\n  //\n  _renderAvatarTransaction = role => {\n    const { partyNew } = this.state\n    const partyJoined = partyNew.filter(party => party.role === role)\n    if (partyJoined && partyJoined.length === 0) {\n      return (\n        <img\n          className='avt-role'\n          src={'/static/images/default-avatar.png'}\n          alt='Avatar'\n        />\n      )\n    } else {\n      return partyJoined.map((partyJoined, index) => {\n        if (partyJoined.user) {\n          return (\n            <img\n              key={index}\n              className='avt-role'\n              src={\n                partyJoined.user.avatar || '/static/images/default-avatar.png'\n              }\n              alt='Avatar'\n            />\n          )\n        }\n      })\n    }\n  }\n\n  _percentOfTransaction = transactionId => {\n    const percentOfTransaction = this.state.percentOfTransactions.find(\n      item => item.transactionId === transactionId\n    )\n    if (percentOfTransaction) {\n      return percentOfTransaction.percent\n    }\n    return 0\n  }\n\n  _reloadDataMember = async () => {\n    const { query } = this.props\n\n    try {\n      const newMem = await transactionService.getMemberPartiesByTransaction(\n        query.idTransaction\n      )\n      this.setState({\n        partyNew: newMem\n      })\n    } catch (e) {\n      console.error('error')\n    }\n  }\n  //\n  _renderPartiesMemberInfo = () => {\n    const { partyNew, partyTarget, transaction } = this.state\n    return partyNew.map((user, index) => (\n      <tr key={index}>\n        <td scope='row'>{this._viewName(user)}</td>\n        <td>{user.email}</td>\n        <td>{this._viewRole(user.role)}</td>\n        <td>\n          {partyTarget.role === TransactionRole.TRANSACTION_COORDINATOR &&\n            transaction.status !== TransactionStatus.ARCHIVED &&\n            transaction.status !== TransactionStatus.CLOSED && (\n            <button\n              className='btn'\n              type='button'\n              style={{\n                padding: '0'\n              }}\n              onClick={() => this._getDataEditMember(user)}\n            >\n              <i className='far fa-edit' />\n            </button>\n          )}\n        </td>\n      </tr>\n    ))\n  }\n  // view fullName\n  _viewName = user => {\n    if (user) {\n      if (user.firstName && user.lastName) {\n        return user.firstName.concat(' ', user.lastName)\n      } else if (user.firstName || user.lastName) {\n        return user.firstName || user.lastName\n      } else {\n        if (user.user) {\n          if (user.user.firstName && user.user.lastName) {\n            return user.user.firstName.concat(' ', user.user.lastName)\n          } else if (user.user.firstName || user.user.lastName) {\n            return user.user.firstName || user.user.lastName\n          } else {\n            if (user.user.name) {\n              return user.user.name\n            } else {\n              return 'None'\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _viewRole = role => {\n    switch (role) {\n      case 'buyer-agent':\n        return 'Buyer’s Agent'\n      case 'listing-agent':\n        return 'Listing agent'\n      case 'buyer':\n        return 'Buyer'\n      case 'seller':\n        return 'Seller'\n      case 'transaction-coordinator':\n        return 'Transaction coordinator'\n      case 'escrow':\n        return 'Escrow'\n      case 'title':\n        return 'Title'\n      case 'lender':\n        return 'Lender'\n      case 'home-inspector':\n        return 'Home inspector'\n      case 'termite':\n        return 'Termite'\n      case 'vendors':\n        return 'Vendors'\n      case 'seller-agent':\n        return 'Seller’s Agent'\n      default:\n        break\n    }\n  }\n\n  _getDataEditMember = user => {\n    this.setState({\n      isShowEditMemberModal: true,\n      dataUser: user\n    })\n  }\n\n  _onSubmitDetail = async (values, action) => {\n    const { setSubmitting } = action\n    try {\n      const {\n        yearBuilt,\n        bedrooms,\n        squareFootage,\n        schoolDistrict,\n        type,\n        bathrooms,\n        lotSize,\n        country,\n        streetNumber,\n        streetName,\n        unitNumber,\n        city,\n        state,\n        postalCode,\n        county,\n        mlsNumber,\n        taxId,\n        address,\n        transactionType,\n        transactionTypeStatus,\n        url,\n        description,\n        closingDate\n      } = values\n\n      let statusT = ''\n      if (transactionType === '') {\n        statusT = ''\n      } else {\n        statusT = transactionTypeStatus\n      }\n      let status = ''\n      if (statusT === TransactionTypeStatus.TTS_ARCHIVED) {\n        status = TransactionTypeStatus.TTS_ARCHIVED\n      } else {\n        status = this.state.transaction.status\n      }\n      setSubmitting(true)\n      await transactionService.updateTransactionById(\n        this.props.transaction.id,\n        {\n          address,\n          transactionType,\n          transactionTypeStatus: statusT,\n          url,\n          description,\n          closingDate,\n          status: status\n        }\n      )\n      if (this.props.detail[0] && this.props.detail[0].id) {\n        await transactionService.createTransactionDetail(\n          this.props.detail[0].id,\n          {\n            yearBuilt,\n            bedrooms,\n            squareFootage,\n            schoolDistrict,\n            type,\n            bathrooms,\n            lotSize,\n            country,\n            streetNumber,\n            streetName,\n            unitNumber,\n            city,\n            state,\n            postalCode,\n            county,\n            mlsNumber,\n            taxId\n          }\n        )\n      } else {\n        await transactionService.createNewTransactionDetail({\n          yearBuilt,\n          bedrooms,\n          squareFootage,\n          schoolDistrict,\n          type,\n          bathrooms,\n          lotSize,\n          country,\n          streetNumber,\n          streetName,\n          unitNumber,\n          city,\n          state,\n          postalCode,\n          county,\n          mlsNumber,\n          taxId\n        })\n      }\n\n      // this.setState({\n      //   detail: [...detail,newTransactionDetail],\n\n      // })\n      setSubmitting(false)\n      toastr.success('Success')\n      this._fetchTransaction()\n    } catch (e) {\n      let msg\n      switch (e.code) {\n        default: {\n          msg = e.message\n        }\n      }\n      toastr.error(msg)\n      setSubmitting(false)\n    }\n  }\n  deleteImage = async id => {\n    try {\n      await transactionService.deleteImage(id)\n      const newTran = await transactionService.getTransactionsDetailByTransactionId(\n        id\n      )\n      this.setState({\n        transaction: newTran\n      })\n      toastr.success('Success')\n    } catch (e) {\n      let msg\n      switch (e.code) {\n        default: {\n          msg = e.message\n        }\n      }\n      toastr.error(msg)\n    }\n  }\n  _previewImage = image => {\n    const img = document.querySelector('.new-image')\n    if (image !== null) {\n      const reader = new window.FileReader()\n      reader.addEventListener('load', function () {\n        img.classList.add('hide-ne')\n      })\n      reader.readAsDataURL(image)\n    }\n  }\n  _viewDate = date => {\n    const a = new Date(date)\n    const b = new Date(0)\n    if (a.getTime() !== b.getTime()) {\n      var d = new Date(date)\n      var month = '' + (d.getMonth() + 1)\n      var day = '' + d.getDate()\n      var year = d.getFullYear()\n      if (month.length < 2) month = '0' + month\n      if (day.length < 2) day = '0' + day\n      return [year, month, day].join('-')\n    } else {\n      return ''\n    }\n  }\n\n  handleChangeTransactionTypeStatus = async (e, callback) => {\n    // Open \"Close Transaction Modal\"\n    if (e.target.value === TransactionTypeStatus.TTS_CLOSE) {\n      // Check number of agents\n      const transactionAgents = await transactionService.getAllAgents(\n        this.props.transaction.id\n      )\n      // Can't close without agent\n      if (transactionAgents.length === 0) {\n        toastr.error('Nead at least 1 Link Agent to close this transaction!')\n      } else {\n        // HandleChange of Formik\n        callback(e)\n        this.setState({ isShowCloseTransactionModal: true, transactionAgents })\n      }\n    } else {\n      // Normal update\n      callback(e)\n    }\n  }\n\n  handleEditPercentTransaction = async () => {\n    const {\n      isShowEditPercentTransaction,\n      tempPercentTransaction,\n      transaction\n    } = this.state\n    try {\n      if (!tempPercentTransaction) {\n        // Init values\n        this.setState({\n          tempPercentTransaction: this._viewPercentTransaction()\n        })\n      } else {\n        // Editing\n        this.setState({ isEditingPercentTransaction: true })\n        await transactionService.updateTransactionPercent(\n          transaction.id,\n          tempPercentTransaction\n        )\n        await this._refetchDataDynamic()\n        this.setState({\n          tempPercentTransaction: null,\n          isEditingPercentTransaction: false\n        })\n      }\n    } catch (e) {\n      console.error(e)\n    } finally {\n      this.setState({\n        isShowEditPercentTransaction: !isShowEditPercentTransaction\n      })\n    }\n  }\n\n  // For TC: can edit\n  _renderTransactionPercentCircle = () => {\n    const {\n      isShowEditPercentTransaction,\n      isEditingPercentTransaction,\n      tempPercentTransaction\n    } = this.state\n\n    return (\n      <div\n        style={{ position: 'relative' }}\n        className='transaction-percent-input'\n      >\n        <div className='d-flex justify-content-center align-items-center'>\n          <div className='percent'>\n            <div\n              data-progress={this._viewPercentTransaction()}\n              className='th-17 th-per-d d-flex justify-content-center align-items-center display-6 text-white'\n            />\n          </div>\n          {isShowEditPercentTransaction && (\n            <input\n              type='number'\n              min='0'\n              max='100'\n              value={tempPercentTransaction}\n              disabled={isEditingPercentTransaction}\n              onChange={e => {\n                const value = e.target.value\n                this.setState({\n                  tempPercentTransaction: parseInt(\n                    value < 0 ? 0 : value > 100 ? 100 : e.target.value || 0\n                  )\n                })\n              }}\n              autoFocus\n            />\n          )}\n        </div>\n        {this.setViewButtonEdit()}\n      </div>\n    )\n  }\n\n  setViewButtonEdit = () => {\n    const {\n      transaction,\n      isEditingPercentTransaction,\n      isShowEditPercentTransaction\n    } = this.state\n    if (\n      transaction.transactionTypeStatus !==\n        TransactionTypeStatus.TTS_PRE_OFFER &&\n      transaction.transactionTypeStatus !==\n        TransactionTypeStatus.TTS_UNDER_CONTRACT &&\n      transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_ESCROW &&\n      transaction.transactionTypeStatus !==\n        TransactionTypeStatus.TTS_ESCROW_CLOSE &&\n      transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_SOLD &&\n      transaction.transactionTypeStatus !== TransactionTypeStatus.TTS_CLOSE\n    ) {\n      return (\n        <button\n          type='button'\n          className='btn p-0'\n          onClick={() => this.handleEditPercentTransaction()}\n          style={{ position: 'absolute', top: 2, right: 5 }}\n        >\n          <div className='app-fade app-fade--circle app-fade--black'>\n            {isEditingPercentTransaction ? (\n              <span className='spinner-border spinner-border-sm text-white' />\n            ) : isShowEditPercentTransaction ? (\n              <i class='fas fa-check fa-sm' />\n            ) : (\n              <i className='far fa-edit fa-sm' />\n            )}\n          </div>\n        </button>\n      )\n    }\n  }\n\n  // render all parties\n  _renderAllParties = () => {\n    const {\n      transaction,\n      listDocument,\n      listEnvelopeDocument,\n      documentAction,\n      documentActionsByPartyId,\n      partyTarget,\n      dataVendor,\n      isSubmit,\n      isShowEditPercentTransaction\n    } = this.state\n    const { currentParty, detail, currentTransactionStatus } = this.props\n\n    if (this.props.selectedViewParties === 'View Details') {\n      if (\n        partyTarget.role === TransactionRole.TRANSACTION_COORDINATOR &&\n        transaction.status !== TransactionStatus.ARCHIVED &&\n        transaction.status !== TransactionStatus.CLOSED\n      ) {\n        return (\n          <>\n            <div\n              className='card-details'\n              onClick={() =>\n                isShowEditPercentTransaction &&\n                this.setState({ isShowEditPercentTransaction: false })\n              }\n            >\n              <div className='box-card-details'>\n                <div className='head-details'>\n                  <div className='boc-detail'>\n                    <div className='image-detail'>\n                      <div className='percent-detail mr-2'>\n                        {this._renderTransactionPercentCircle()}\n                      </div>\n                      <div className='name-address-title'>\n                        {transaction.address}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <Formik\n                  initialValues={{\n                    address: transaction.address,\n                    transactionType: transaction.transactionType,\n                    transactionTypeStatus: transaction.transactionTypeStatus,\n                    url: transaction.url,\n                    description: transaction.description,\n                    closingDate: transaction.closingDate,\n                    role: '',\n                    imageURL: '',\n                    yearBuilt: detail[0] ? detail[0].yearBuilt : '',\n                    bedrooms: detail[0] ? detail[0].bedrooms : '',\n                    squareFootage: detail[0] ? detail[0].squareFootage : '',\n                    schoolDistrict: detail[0] ? detail[0].schoolDistrict : '',\n                    type: detail[0] ? detail[0].type : '',\n                    bathrooms: detail[0] ? detail[0].bathrooms : '',\n                    lotSize: detail[0] ? detail[0].lotSize : '',\n                    country: detail[0] ? detail[0].country : '',\n                    streetNumber: detail[0] ? detail[0].streetNumber : '',\n                    streetName: detail[0] ? detail[0].streetName : '',\n                    unitNumber: detail[0] ? detail[0].unitNumber : '',\n                    city: detail[0] ? detail[0].city : '',\n                    state: detail[0] ? detail[0].state : '',\n                    postalCode: detail[0] ? detail[0].postalCode : '',\n                    county: detail[0] ? detail[0].county : '',\n                    mlsNumber: detail[0] ? detail[0].mlsNumber : '',\n                    taxId: detail[0] ? detail[0].taxId : ''\n                  }}\n                  onSubmit={this._onSubmitDetail}\n                >\n                  {({\n                    values,\n                    error,\n                    handleChange,\n                    isSubmitting,\n                    handleSubmit,\n                    setFieldValue,\n                    isValid\n                  }) => (\n                    <form onSubmit={handleSubmit}>\n                      <div className='row mt-4 border-bottom pb-3'>\n                        <div className='col-12'>\n                          {transaction.imageURL ? (\n                            <div className='main-image-details'>\n                              <img src={`${transaction.imageURL}`} alt='' />\n                              <div\n                                onClick={() => this.deleteImage(transaction.id)}\n                                className='delete-image'\n                              >\n                                <span />\n                              </div>\n                            </div>\n                          ) : (\n                            <div\n                              className='image-upload-wrap mb-4'\n                              style={{ height: '56px' }}\n                            >\n                              <input\n                                className='form-control new-image'\n                                placeholder='Type Here'\n                                name='imageURL'\n                                type='file'\n                                accept='image/*'\n                                onChange={event => {\n                                  setFieldValue(\n                                    'imageURL',\n                                    event.currentTarget.files[0]\n                                  )\n                                  if (event.currentTarget.files[0] !== null) {\n                                    if (\n                                      event.currentTarget.files[0].size <\n                                      MAX_FILE_SIZE\n                                    ) {\n                                      this.saveImage(\n                                        event.currentTarget.files[0],\n                                        transaction.id\n                                      )\n                                    } else {\n                                      toastr.warning(\n                                        'The file you have selected is too large'\n                                      )\n                                    }\n                                  }\n                                }}\n                              />\n                              <div className='drag-text'>\n                                <h3>Upload a photo</h3>\n                              </div>\n                            </div>\n                          )}\n                          <div id='loadingTh' />\n                        </div>\n                        <div className='col-12'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Transaction Name\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Type Here'\n                                name='address'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.address}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Transaction Type\n                            </label>\n                            <select\n                              className='custom-select mr-sm-2 form-control'\n                              id='text-select'\n                              onChange={handleChange}\n                              value={values.transactionType}\n                              name='transactionType'\n                            >\n                              <option value=''>None</option>\n                              <option value={TransactionType.NEW_PURCHASE}>\n                                Purchase\n                              </option>\n                              <option\n                                value={TransactionType.NEW_LISTING_FOR_SALE}\n                              >\n                                Listing for sale\n                              </option>\n                              <option\n                                value={TransactionType.NEW_LISTING_FOR_LEASE}\n                              >\n                                Listing for lease\n                              </option>\n                              <option value={TransactionType.NEW_LEASE}>\n                                Lease\n                              </option>\n                              <option\n                                value={TransactionType.NEW_REAL_ESTATE_OTHER}\n                              >\n                                Real estate other\n                              </option>\n                              <option value={TransactionType.NEW_OTHER}>\n                                Other\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Transaction Status\n                            </label>\n                            {values.transactionType === 'new-purchase' && (\n                              <select\n                                className='custom-select mr-sm-2 form-control'\n                                id='inlineFormCustomSelect2'\n                                onChange={e =>\n                                  this.handleChangeTransactionTypeStatus(\n                                    e,\n                                    handleChange\n                                  )\n                                }\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_PRE_OFFER}\n                                >\n                                  Pre-offer\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_UNDER_CONTRACT\n                                  }\n                                >\n                                  Under contract\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW}\n                                >\n                                  Escrow\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW_CLOSE}\n                                >\n                                  Escrow close\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_SOLD}>\n                                  Sold\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_CLOSE}>\n                                  Close\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType ===\n                              'new-listing-for-sale' && (\n                              <select\n                                className='custom-select mr-sm-2 form-control'\n                                id='inlineFormCustomSelect2'\n                                onChange={e =>\n                                  this.handleChangeTransactionTypeStatus(\n                                    e,\n                                    handleChange\n                                  )\n                                }\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_PRE_LISTING}\n                                >\n                                  Pre-listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_PRIVATE_LISTING\n                                  }\n                                >\n                                  Private listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_ACTIVE_LISTING\n                                  }\n                                >\n                                  Active listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_UNDER_CONTRACT\n                                  }\n                                >\n                                  Under contract\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW}\n                                >\n                                  Escrow\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW_CLOSE}\n                                >\n                                  Escrow close\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_SOLD}>\n                                  Sold\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_CLOSE}>\n                                  Close\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType ===\n                              'new-listing-for-lease' && (\n                              <select\n                                className='custom-select mr-sm-2 form-control'\n                                id='inlineFormCustomSelect2'\n                                onChange={e =>\n                                  this.handleChangeTransactionTypeStatus(\n                                    e,\n                                    handleChange\n                                  )\n                                }\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_PRE_LISTING}\n                                >\n                                  Pre-listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_PRIVATE_LISTING\n                                  }\n                                >\n                                  Private listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_ACTIVE_LISTING\n                                  }\n                                >\n                                  Active listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_UNDER_CONTRACT\n                                  }\n                                >\n                                  Under contract\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_LEASED}\n                                >\n                                  Leased\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_CLOSE}>\n                                  Close\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType === 'new-lease' && (\n                              <select\n                                className='custom-select mr-sm-2 form-control'\n                                id='inlineFormCustomSelect2'\n                                onChange={e =>\n                                  this.handleChangeTransactionTypeStatus(\n                                    e,\n                                    handleChange\n                                  )\n                                }\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_PRE_OFFER}\n                                >\n                                  Pre-offer\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_UNDER_CONTRACT\n                                  }\n                                >\n                                  Under contract\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_LEASED}\n                                >\n                                  Leased\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_CLOSE}>\n                                  Close\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType ===\n                              'new-real-estate-other' && (\n                              <select\n                                className='custom-select mr-sm-2 form-control'\n                                id='inlineFormCustomSelect2'\n                                onChange={e =>\n                                  this.handleChangeTransactionTypeStatus(\n                                    e,\n                                    handleChange\n                                  )\n                                }\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option value={TransactionTypeStatus.TTS_NEW}>\n                                  New\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_IN_PROCESS}\n                                >\n                                  In-process\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW}\n                                >\n                                  Escrow\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW_CLOSE}\n                                >\n                                  Escrow close\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_DONE}>\n                                  Done\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_CLOSE}>\n                                  Close\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType === 'new-other' && (\n                              <select\n                                className='custom-select mr-sm-2 form-control'\n                                id='inlineFormCustomSelect2'\n                                onChange={e =>\n                                  this.handleChangeTransactionTypeStatus(\n                                    e,\n                                    handleChange\n                                  )\n                                }\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option value={TransactionTypeStatus.TTS_NEW}>\n                                  New\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_IN_PROCESS}\n                                >\n                                  In-process\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_DONE}>\n                                  Done\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_CLOSE}>\n                                  Close\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType === '' && (\n                              <select\n                                className='custom-select mr-sm-2 form-control'\n                                id='inlineFormCustomSelect2'\n                                onChange={e =>\n                                  this.handleChangeTransactionTypeStatus(\n                                    e,\n                                    handleChange\n                                  )\n                                }\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                              </select>\n                            )}\n                            {values.transactionType === 'close' && (\n                              <select\n                                className='custom-select mr-sm-2 form-control'\n                                id='inlineFormCustomSelect2'\n                                onChange={e =>\n                                  this.handleChangeTransactionTypeStatus(\n                                    e,\n                                    handleChange\n                                  )\n                                }\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value='close'>Close</option>\n                              </select>\n                            )}\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Expected Closing Date\n                            </label>\n                            <input\n                              className='form-control'\n                              type='date'\n                              id='example-date-input'\n                              name='closingDate'\n                              onChange={handleChange}\n                              value={this._viewDate(values.closingDate)}\n                            />\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>URL</label>\n                            <input\n                              className='form-control'\n                              placeholder='Add URL'\n                              name='url'\n                              type='text'\n                              onChange={handleChange}\n                              value={values.url}\n                            />\n                          </div>\n                        </div>\n                        <div className='col-12'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Description\n                            </label>\n                            <textarea\n                              className='form-control'\n                              placeholder='Add Description'\n                              rows={3}\n                              name='description'\n                              onChange={handleChange}\n                              value={values.description}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row pt-5 border-bottom pb-3'>\n                        <div className='col-12 col-md-6'>\n                          <h4 className='text-left tittle-mini'>PEOPLE</h4>\n                        </div>\n                        <div className='table-responsive'>\n                          <table className='table table-borderless'>\n                            <thead>\n                              <tr>\n                                <th scope='col'>Full Name</th>\n                                <th scope='col'>Email</th>\n                                <th scope='col'>Role</th>\n                                <th scope='col' />\n                              </tr>\n                            </thead>\n                            <tbody>{this._renderPartiesMemberInfo()}</tbody>\n                          </table>\n                        </div>\n                      </div>\n                      <div className='row pt-5 border-bottom pb-3'>\n                        <div className='col-12'>\n                          <h4 className='text-left tittle-mini'>PROPERTY</h4>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Year Built\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add year built'\n                                name='yearBuilt'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.yearBuilt}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Bedrooms</label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add bedrooms'\n                                name='bedrooms'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.bedrooms}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Square Footage\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add square footage'\n                                name='squareFootage'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.squareFootage}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              School District\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add school district'\n                                name='schoolDistrict'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.schoolDistrict}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Type</label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add type'\n                                name='type'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.type}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Bathrooms</label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add bathrooms'\n                                name='bathrooms'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.bathrooms}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Lot Size</label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add lot size'\n                                name='lotSize'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.lotSize}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        className='row pt-5 pb-3'\n                        style={{\n                          paddingTop: '2rem'\n                        }}\n                      >\n                        <div className='col-12'>\n                          <h4 className='text-left tittle-mini'>\n                            PROPERTY ADDRESS\n                          </h4>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Country</label>\n                            <input\n                              className='form-control'\n                              placeholder='Add country'\n                              type='text'\n                              onChange={handleChange}\n                              value={values.country}\n                              name='country'\n                            />\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Street Number\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add street number'\n                                name='streetNumber'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.streetNumber}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Street Name\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add street name'\n                                name='streetName'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.streetName}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Unit Number\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add unit number'\n                                name='unitNumber'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.unitNumber}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>City</label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add city'\n                                name='city'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.city}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              State/Prov\n                            </label>\n                            <input\n                              className='form-control'\n                              placeholder='Add state/prov'\n                              type='text'\n                              onChange={handleChange}\n                              value={values.state}\n                              name='state'\n                            />\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              ZIP/Postal Code\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add zip/postal code'\n                                name='postalCode'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.postalCode}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>County</label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add county'\n                                name='county'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.county}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              MLS Number\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add MLS number'\n                                name='mlsNumber'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.mlsNumber}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-4 col-lg-4'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Parcel/TaxID\n                            </label>\n                            <div className='transaction-pro'>\n                              <input\n                                className='form-control'\n                                placeholder='Add parcel/tax ID'\n                                name='taxId'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.taxId}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row pt-3'>\n                        <div className='form-group'>\n                          <div\n                            className='btn-save'\n                            style={{\n                              marginLeft: '10px'\n                            }}\n                          >\n                            <button\n                              disabled={\n                                isSubmit ||\n                                currentTransactionStatus ===\n                                  TransactionStatus.CLOSED ||\n                                isSubmitting\n                              }\n                              type='submit'\n                              className='btn text-white py-2 px-5'\n                              style={{\n                                fontSize: '16px',\n                                fontWeight: '500',\n                                height: '100%'\n                              }}\n                            >\n                              {isSubmitting && (\n                                <span className='spinner-border spinner-border-sm mr-2' />\n                              )}\n                              Save\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  )}\n                </Formik>\n              </div>\n            </div>\n          </>\n        )\n      } else {\n        return (\n          <>\n            <div className='card-details'>\n              <div className='box-card-details'>\n                <div className='head-details'>\n                  <div className='boc-detail'>\n                    <div className='image-detail'>\n                      <div className='percent pr-2'>\n                        <div\n                          data-progress={this._viewPercentTransaction()}\n                          className='th-17 th-per-d d-flex justify-content-center align-items-center display-6 text-white'\n                          style={{\n                            '&::after': {\n                              backgroundImage:\n                                'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                            }\n                          }}\n                        />\n                      </div>\n                      <div className='name-address-title'>\n                        {transaction.address || 'None'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <form>\n                  <div className='row mt-4 border-bottom pb-3'>\n                    <div className='col-12'>\n                      {transaction.imageURL ? (\n                        <div className='main-image-details'>\n                          <img src={`${transaction.imageURL}`} alt='' />\n                        </div>\n                      ) : (\n                        <div\n                          className='image-upload-wrap mb-4'\n                          style={{ height: '56px' }}\n                        >\n                          <div className='drag-text'>\n                            <h3>Upload a photo</h3>\n                          </div>\n                        </div>\n                      )}\n                      <div id='loadingTh' />\n                    </div>\n                    <div className='col-12'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>\n                          Transaction Name\n                        </label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Type Here'\n                            type='text'\n                            defaultValue={transaction.address || 'None'}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>\n                          Transaction Type\n                        </label>\n                        <input\n                          className='form-control'\n                          type='text'\n                          id='example-date-input'\n                          defaultValue={this._viewTransactionType(\n                            transaction.transactionType\n                          )}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>\n                          Transaction Status\n                        </label>\n                        <input\n                          className='form-control'\n                          type='text'\n                          id='example-date-input'\n                          defaultValue={this._viewTransactionStatus(\n                            transaction.transactionTypeStatus\n                          )}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>\n                          Expected Closing Date\n                        </label>\n                        <input\n                          className='form-control'\n                          type='date'\n                          id='example-date-input'\n                          defaultValue={this._viewDate(transaction.closingDate)}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>URL</label>\n                        <input\n                          className='form-control'\n                          placeholder='Add URL'\n                          name='url'\n                          type='text'\n                          defaultValue={transaction.url || 'None'}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-12'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Description</label>\n                        <textarea\n                          className='form-control'\n                          placeholder='Add Description'\n                          rows={3}\n                          defaultValue={transaction.description || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='row pt-5 border-bottom pb-3'>\n                    <div className='col-12'>\n                      <h4 className='text-left tittle-mini'>PEOPLE</h4>\n                    </div>\n                    <table className='table table-borderless'>\n                      <thead>\n                        <tr>\n                          <th scope='col'>Full Name</th>\n                          <th scope='col'>Email</th>\n                          <th scope='col'>Role</th>\n                        </tr>\n                      </thead>\n                      <tbody>{this._renderPartiesMemberInfo()}</tbody>\n                    </table>\n                  </div>\n                  <div className='row pt-5 border-bottom pb-3'>\n                    <div className='col-12'>\n                      <h4 className='text-left tittle-mini'>PROPERTY</h4>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Year Built</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add year built'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].yearBuilt\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Bedrooms</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add bedrooms'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].bedrooms\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>\n                          Square Footage\n                        </label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add square footage'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].squareFootage\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>\n                          School District\n                        </label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add school district'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].schoolDistrict\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Type</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add type'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].type\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Bathrooms</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add bathrooms'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].bathrooms\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Lot Size</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add lot size'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].lotSize\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    className='row pt-5 pb-3'\n                    style={{\n                      paddingTop: '2rem'\n                    }}\n                  >\n                    <div className='col-12'>\n                      <h4 className='text-left tittle-mini'>\n                        PROPERTY ADDRESS\n                      </h4>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Country</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add country'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].country\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Street Number</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add street number'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].streetNumber\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Street Name</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add street name'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].streetName\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Unit Number</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add unit number'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].unitNumber\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>City</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add city'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].city\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>State/Prov</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add state/prov'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].state\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>\n                          ZIP/Postal Code\n                        </label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add zip/postal code'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].postalCode\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>County</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add county'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].county\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>MLS Number</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add MLS number'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].mlsNumber\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-4'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Parcel/TaxID</label>\n                        <div className='transaction-pro'>\n                          <input\n                            className='form-control'\n                            placeholder='Add parcel/tax ID'\n                            type='text'\n                            defaultValue={\n                              detail\n                                ? detail[0]\n                                  ? detail[0].taxId\n                                  : 'None'\n                                : 'None'\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </>\n        )\n      }\n    }\n\n    if (\n      this.props.selectedViewParties === 'Actions Needed' &&\n      listEnvelopeDocument.length > 0\n    ) {\n      return (\n        <TransactionDocumentActions\n          currentParty={currentParty}\n          documentActions={documentActionsByPartyId}\n          listDocument={listEnvelopeDocument}\n          reFetchData={() => this._fetchDocumentsAndActions()}\n          transactionStatus={currentTransactionStatus}\n        />\n      )\n    }\n\n    if (this.props.selectedViewParties === 'My Documents') {\n      return (\n        <>\n          <TransactionDocuments listDocument={listDocument} />\n          {dataVendor && dataVendor.length > 0 ? (\n            <TransactionDocumentVendor listDocument={dataVendor} />\n          ) : (\n            <></>\n          )}\n        </>\n      )\n    }\n\n    if (this.props.selectedViewParties === 'Envelopes') {\n      return (\n        <TransactionEnvelopes\n          documentAction={documentAction}\n          listDocument={listEnvelopeDocument}\n        />\n      )\n    }\n\n    if (this.props.selectedViewParties === 'Main') {\n      const { transaction } = this.state\n      return (\n        <>\n          <div className='card-des-big'>\n            <div className='info-description'>\n              <div className='info-left'>\n                <div className='card-info-left'>\n                  <div className='bo-image'>\n                    {transaction.imageURL !== '' ? (\n                      <img\n                        src={`${transaction.imageURL}`}\n                        alt=''\n                        style={{ objectFit: 'cover' }}\n                      />\n                    ) : (\n                      <img\n                        src='/static/images/image-default.png'\n                        alt=''\n                        style={{ objectFit: 'cover' }}\n                      />\n                    )}\n                  </div>\n                  <div className='description'>\n                    <div className='up-des'>\n                      <div className='address-x'>\n                        <h4 className='name-des'>{transaction.address}</h4>\n                      </div>\n                      <a href={`${transaction.url}`} className='link-des'>\n                        {transaction.url}\n                      </a>\n                    </div>\n                    <div className='down-des'>\n                      <p>{transaction.description}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='info-right'>\n                <div className='info-percents'>\n                  <div className='cap-per'>Property to Close</div>\n                  <div className='percent'>\n                    <div\n                      data-progress={this._viewPercentTransaction()}\n                      className='th-17  d-flex justify-content-center align-items-center display-6 text-white'\n                      style={{\n                        '&::after': {\n                          backgroundImage:\n                            'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                        }\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className='info-ch'>\n                  <div className='type-ch'>\n                    <label className='type-ch-l'>Type</label>\n                    <p>\n                      {this._viewTransactionType(transaction.transactionType)}\n                    </p>\n                  </div>\n                  <div className='status-ch'>\n                    <label className='status-ch-l'>Status</label>\n                    <p>\n                      {this._viewTransactionStatus(\n                        transaction.transactionTypeStatus\n                      )}\n                    </p>\n                  </div>\n                  <div className='create-ch'>\n                    <label className='create-ch-l'>Expected Closing Date</label>\n                    <p>\n                      {moment(transaction.closingDate).format('ll') ===\n                      'Jan 1, 1970'\n                        ? 'None'\n                        : moment(transaction.closingDate).format('ll')}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <h5 className='pt-h5'>Parties</h5>\n          <div className='row'>{this._testPartiesView()}</div>\n        </>\n      )\n    }\n  }\n  // render parties member\n  _renderTransactionPartiesAllowedAccess = () => {\n    const {\n      transaction,\n      listDocument,\n      listEnvelopeDocument,\n      documentAction,\n      documentActionsByPartyId\n    } = this.state\n    const { currentParty, currentTransactionStatus } = this.props\n    const role = this.props.partyTarget.role\n\n    if (this.props.selectedViewParties === 'Main') {\n      return (\n        <>\n          <div className='card-des-big'>\n            <div className='info-description'>\n              <div className='info-left'>\n                <div className='card-info-left'>\n                  <div className='bo-image'>\n                    {transaction.imageURL !== '' ? (\n                      <img src={`${transaction.imageURL}`} alt='' />\n                    ) : (\n                      <img src='/static/images/image-default.png' alt='' />\n                    )}\n                  </div>\n                  <div className='description'>\n                    <div className='up-des'>\n                      <div className='address-x'>\n                        <h4 className='name-des'>{transaction.address}</h4>\n                      </div>\n                      <a href={`${transaction.url}`} className='link-des'>\n                        {transaction.url}\n                      </a>\n                    </div>\n                    <div className='down-des'>\n                      <p>{transaction.description}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='info-right'>\n                <div className='info-percents'>\n                  <div className='cap-per'>Property to Close</div>\n                  <div className='percent'>\n                    <div\n                      data-progress={this._viewPercentTransaction()}\n                      className='th-17 d-flex justify-content-center align-items-center display-6 text-white'\n                      style={{\n                        '&::after': {\n                          backgroundImage:\n                            'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                        }\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className='info-ch'>\n                  <div className='type-ch'>\n                    <label className='type-ch-l'>Type</label>\n                    <p>\n                      {this._viewTransactionType(transaction.transactionType)}\n                    </p>\n                  </div>\n                  <div className='status-ch'>\n                    <label className='status-ch-l'>Status</label>\n                    <p>\n                      {this._viewTransactionStatus(\n                        transaction.transactionTypeStatus\n                      )}\n                    </p>\n                  </div>\n                  <div className='create-ch'>\n                    <label className='create-ch-l'>Expected Closing Date</label>\n                    <p>\n                      {moment(transaction.closingDate).format('ll') ===\n                      'Jan 1, 1970'\n                        ? 'None'\n                        : moment(transaction.closingDate).format('ll')}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <h5 className='pt-h5'>Parties</h5>\n          <div className='tha-6'>\n            <div className='cardParties'>\n              <div className='cardParties-box'>\n                <div className='project-content'>\n                  {this._renderCardBodyTest(role)}\n                  <div className='project-role-name'>\n                    {this._renderTransactionPartiesFullName(role)}\n                  </div>\n                  <div className='project-avt'>\n                    {this._renderAvatarTransaction(role)}\n                  </div>\n                  {this._renderButtonFile(role)}\n                  {this._renderButtonProfile(role)}\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )\n    }\n    if (this.props.selectedViewParties === 'Actions Needed') {\n      return (\n        <TransactionDocumentActions\n          currentParty={currentParty}\n          documentActions={documentActionsByPartyId}\n          listDocument={listEnvelopeDocument}\n          reFetchData={() => this._fetchDocumentsAndActions()}\n          transactionStatus={currentTransactionStatus}\n        />\n      )\n    }\n    if (this.props.selectedViewParties === 'My Documents') {\n      return <TransactionDocuments listDocument={listDocument} />\n    }\n    if (this.props.selectedViewParties === 'Envelopes') {\n      return (\n        <TransactionEnvelopes\n          documentAction={documentAction}\n          listDocument={listEnvelopeDocument}\n        />\n      )\n    }\n    if (this.props.selectedViewParties === 'View Details') {\n      const { transaction } = this.state\n      const { detail } = this.props\n      return (\n        <>\n          <div className='card-details'>\n            <div className='box-card-details'>\n              <div className='head-details'>\n                <div className='boc-detail'>\n                  <div className='image-detail'>\n                    <div className='percent pr-2'>\n                      <div\n                        data-progress={this._viewPercentTransaction()}\n                        className='th-17 th-per-d d-flex justify-content-center align-items-center display-6 text-white'\n                        style={{\n                          '&::after': {\n                            backgroundImage:\n                              'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                          }\n                        }}\n                      />\n                    </div>\n\n                    <div className='name-address-title'>\n                      {transaction.address || 'None'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <form>\n                <div className='row mt-4 border-bottom pb-3'>\n                  <div className='col-12'>\n                    {transaction.imageURL ? (\n                      <div className='main-image-details'>\n                        <img src={`${transaction.imageURL}`} alt='' />\n                      </div>\n                    ) : (\n                      <div\n                        className='image-upload-wrap mb-4'\n                        style={{ height: '56px' }}\n                      >\n                        <div className='drag-text'>\n                          <h3>Upload a photo</h3>\n                        </div>\n                      </div>\n                    )}\n                    <div id='loadingTh' />\n                  </div>\n                  <div className='col-12'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>\n                        Transaction Name\n                      </label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Type Here'\n                          type='text'\n                          value={transaction.address || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-6'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>\n                        Transaction Type\n                      </label>\n                      <input\n                        className='form-control'\n                        type='text'\n                        id='example-date-input'\n                        value={this._viewTransactionType(\n                          transaction.transactionType\n                        )}\n                      />\n                    </div>\n                  </div>\n                  <div className='col-6'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>\n                        Transaction Status\n                      </label>\n                      <input\n                        className='form-control'\n                        type='text'\n                        id='example-date-input'\n                        value={this._viewTransactionStatus(\n                          transaction.transactionTypeStatus\n                        )}\n                      />\n                    </div>\n                  </div>\n                  <div className='col-6'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>\n                        Expected Closing Date\n                      </label>\n                      <input\n                        className='form-control'\n                        type='date'\n                        id='example-date-input'\n                        defaultValue={this._viewDate(transaction.closingDate)}\n                      />\n                    </div>\n                  </div>\n                  <div className='col-6'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>URL</label>\n                      <input\n                        className='form-control'\n                        placeholder='Add URL'\n                        name='url'\n                        type='text'\n                        value={transaction.url || 'None'}\n                      />\n                    </div>\n                  </div>\n                  <div className='col-12'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Description</label>\n                      <textarea\n                        className='form-control'\n                        placeholder='Add Description'\n                        rows={3}\n                        value={transaction.description || 'None'}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className='row pt-5 border-bottom pb-3'>\n                  <div className='col-12'>\n                    <h4 className='text-left tittle-mini'>PEOPLE</h4>\n                  </div>\n                  <table className='table table-borderless'>\n                    <thead>\n                      <tr>\n                        <th scope='col'>Full Name</th>\n                        <th scope='col'>Email</th>\n                        <th scope='col'>Role</th>\n                      </tr>\n                    </thead>\n                    <tbody>{this._renderPartiesMemberInfo()}</tbody>\n                  </table>\n                </div>\n                <div className='row pt-5 border-bottom pb-3'>\n                  <div className='col-12'>\n                    <h4 className='text-left tittle-mini'>PROPERTY</h4>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Year Built</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add year built'\n                          type='text'\n                          value={detail[0].yearBuilt || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Bedrooms</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add bedrooms'\n                          type='text'\n                          value={detail[0].bedrooms || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Square Footage</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add square footage'\n                          type='text'\n                          value={detail[0].squareFootage || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>School District</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add school district'\n                          type='text'\n                          value={detail[0].schoolDistrict || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Type</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add type'\n                          type='text'\n                          value={detail[0].type || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Bathrooms</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add bathrooms'\n                          type='text'\n                          value={detail[0].bathrooms || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Lot Size</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add lot size'\n                          type='text'\n                          value={detail[0].lotSize || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className='row pt-5 pb-3'\n                  style={{\n                    paddingTop: '2rem'\n                  }}\n                >\n                  <div className='col-12'>\n                    <h4 className='text-left tittle-mini'>PROPERTY ADDRESS</h4>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Country</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add country'\n                          type='text'\n                          value={detail[0].country || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Street Number</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add street number'\n                          type='text'\n                          value={detail[0].streetNumber || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Street Name</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add street name'\n                          type='text'\n                          value={detail[0].streetName || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Unit Number</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add unit number'\n                          type='text'\n                          value={detail[0].unitNumber || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>City</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add city'\n                          type='text'\n                          value={detail[0].city || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>State/Prov</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add state/prov'\n                          type='text'\n                          value={detail[0].state || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>ZIP/Postal Code</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add zip/postal code'\n                          type='text'\n                          value={detail[0].postalCode || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>County</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add county'\n                          type='text'\n                          value={detail[0].county || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>MLS Number</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add MLS number'\n                          type='text'\n                          value={detail[0].mlsNumber || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='col-4'>\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>Parcel/TaxID</label>\n                      <div className='transaction-pro'>\n                        <input\n                          className='form-control'\n                          placeholder='Add parcel/tax ID'\n                          type='text'\n                          value={detail[0].taxId || 'None'}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </>\n      )\n    }\n  }\n  // view transaction type\n  _viewTransactionType = transactionType => {\n    switch (transactionType) {\n      case '':\n        return 'None'\n      case 'new-purchase':\n        return 'Purchase'\n      case 'new-listing-for-sale':\n        return 'Listing for sale'\n      case 'new-listing-for-lease':\n        return 'Listing for lease'\n      case 'new-lease':\n        return 'Lease'\n      case 'new-real-estate-other':\n        return 'Real estate other'\n      case 'new-other':\n        return 'Other'\n      default:\n    }\n  }\n  // view transaction type status\n  _viewTransactionStatus = transaction => {\n    if (transaction) {\n      switch (transaction) {\n        case '':\n          return 'None'\n        case TransactionTypeStatus.TTS_PRE_OFFER:\n          return 'Pre-offer'\n        case TransactionTypeStatus.TTS_UNDER_CONTRACT:\n          return 'Under contract'\n        case TransactionTypeStatus.TTS_ESCROW:\n          return 'Escrow'\n        case TransactionTypeStatus.TTS_ESCROW_CLOSE:\n          return 'Escrow close'\n        case TransactionTypeStatus.TTS_WITHDRAWN:\n          return 'Withdrawn'\n        case TransactionTypeStatus.TTS_SOLD:\n          return 'Sold'\n        case TransactionTypeStatus.TTS_TERMINATED:\n          return 'Terminated'\n        case TransactionTypeStatus.TTS_ARCHIVED:\n          return 'Archived'\n        case TransactionTypeStatus.TTS_PRE_LISTING:\n          return 'Pre-listing'\n        case TransactionTypeStatus.TTS_PRIVATE_LISTING:\n          return 'Private Listing'\n        case TransactionTypeStatus.TTS_ACTIVE_LISTING:\n          return 'Active Listing'\n        case TransactionTypeStatus.TTS_LEASED:\n          return 'Leased'\n        case TransactionTypeStatus.TTS_NEW:\n          return 'New'\n        case TransactionTypeStatus.TTS_IN_PROCESS:\n          return 'In process'\n        case TransactionTypeStatus.TTS_DONE:\n          return 'Done'\n        case TransactionTypeStatus.TTS_CLOSE:\n          return 'Close'\n        default:\n          break\n      }\n    } else {\n      return 'None'\n    }\n  }\n  //\n  _testPartiesView = () => {\n    return ROLES.map((role, index) => (\n      <div className='cardParties' key={index}>\n        <div className='cardParties-box'>\n          <div className='project-content'>\n            {this._renderCardBodyTest(role)}\n            <div className='project-role-name'>\n              {this._renderTransactionPartiesFullName(role)}\n            </div>\n            <div className='project-avt'>\n              {this._renderAvatarTransaction(role)}\n            </div>\n            {this._renderButtonFile(role)}\n            {this._renderButtonProfile(role)}\n          </div>\n        </div>\n      </div>\n    ))\n  }\n\n  // end test\n  _percentOfParty = role => {\n    const {\n      transaction: { parties }\n    } = this.props\n    const matchedParty = parties.find(item => item.role === role)\n\n    if (!matchedParty) {\n      return 0\n    }\n\n    return roundPercent(\n      calculatorPercentageOfParty(\n        matchedParty.documents,\n        matchedParty.assignedActions\n      )\n    )\n  }\n\n  _renderCardBody = role => {\n    const { transaction } = this.state\n    const { parties } = this.state.transaction\n    const partyJoined = parties.find(party => party.role === role)\n    if (partyJoined) {\n      return (\n        <Link\n          route={`/my-transactions/${transaction.id}/parties/${\n            partyJoined.id\n          }/files`}\n        >\n          <div\n            className='card-body py-0 border-bottom'\n            style={{ cursor: 'pointer' }}\n          >\n            <div\n              data-progress={this._percentOfParty(role)}\n              className='progress-circle d-flex justify-content-center align-items-center display-6 text-white'\n              style={{\n                '&::after': {\n                  backgroundImage:\n                    'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                }\n              }}\n            />\n            <h4 className='card-title'>{getRoleLabel(role)}</h4>\n          </div>\n        </Link>\n      )\n    }\n\n    return (\n      <div className='card-body py-0 border-bottom'>\n        <div\n          data-progress={this._percentOfParty(role)}\n          className='progress-circle d-flex justify-content-center align-items-center display-6 text-white'\n          style={{\n            '&::after': {\n              backgroundImage:\n                'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n            }\n          }}\n        />\n        <h4 className='card-title'>{getRoleLabel(role)}</h4>\n      </div>\n    )\n  }\n\n  _fetchDocumentsAndActions = async () => {\n    // Need for \"Document\" feature\n    const { currentParty, transaction } = this.props\n    const [\n      listDocument,\n      listEnvelopeDocument,\n      documentActionsByPartyId\n    ] = await Promise.all([\n      transactionService.getDocumentsAndPartyByTransactionId(transaction.id),\n      transactionService.getEnvelopeDocumentsAndPartyByTransactionId(\n        transaction.id\n      ),\n      transactionService.getDocumentActionsByPartyId(currentParty.id)\n    ])\n\n    let documentAction = {}\n    for (const doc of listEnvelopeDocument) {\n      const actions = await transactionService.getDocumentActionsByDocumentId(\n        doc.id\n      )\n      documentAction[doc.id] = actions\n    }\n\n    this.setState({\n      listDocument,\n      listEnvelopeDocument,\n      documentActionsByPartyId,\n      documentAction\n    })\n\n    return {\n      listDocument,\n      documentActionsByPartyId,\n      documentAction\n    }\n  }\n\n  _fetchTransaction = async () => {\n    const {\n      transaction\n    } = await transactionService.getDetailedTransactionAndActivityById(\n      this.props.transaction.id\n    )\n    this.setState({\n      transaction\n    })\n  }\n\n  _reRenderDynamic = async () => {\n    const {\n      transaction\n    } = await transactionService.getDetailedTransactionAndActivityById(\n      this.props.transaction.id\n    )\n\n    const newMem = await transactionService.getMemberPartiesByTransaction(\n      this.props.transaction.id\n    )\n    const dataVendor = await transactionService.getAllDocumentVendorByTransactionId(\n      this.props.transaction.id\n    )\n    this.setState({\n      partyNew: newMem,\n      transaction,\n      dataVendor\n    })\n\n    await this._fetchDocumentsAndActions()\n  }\n\n  _renderIconEdit = role => {\n    const { partyNew } = this.state\n    const partyJoined = partyNew.find(party => party.role === role)\n    if (partyJoined) {\n      if (partyJoined.userId === this.props.currentUser.id) {\n        return (\n          <button className='btn text-muted invisible'>\n            <i className='fas fa-info invisible ' />\n          </button>\n        )\n      }\n      return (\n        <button\n          className='btn text-muted '\n          onClick={() => this._toggleModalInfoTransactionParties(role)}\n        >\n          <i className='fas fa-info ' />\n        </button>\n      )\n    } else {\n      return (\n        <button\n          className='btn text-muted invisible'\n          onClick={() => this._toggleModalInfoTransactionParties(role)}\n        >\n          <i className='fas fa-info' />\n        </button>\n      )\n    }\n  }\n\n  _renderActionButton = role => {\n    const { transaction } = this.state\n    const { invitations, parties, status } = transaction\n\n    const partyJoined = parties.find(party => party.role === role)\n    if (partyJoined) {\n      if (partyJoined.userId === this.props.currentUser.id) {\n        return (\n          <button\n            className='btn text-info'\n            onClick={() => !status && this._toggleModalUpdateMyProfile}\n          >\n            My Profile\n          </button>\n        )\n      }\n\n      if (partyJoined.access === TransactionAccessType.UPLOAD_ONLY) {\n        return <a className='btn text-dark disabled'>Message</a>\n      }\n\n      return (\n        <Link route={`/message?partyId=${partyJoined.id}`}>\n          <a className='text-info btn'>Message</a>\n        </Link>\n      )\n    }\n\n    const partyInvited = invitations.find(\n      invitation => invitation.role === role\n    )\n    if (partyInvited) {\n      return (\n        <button disabled className='btn text-info'>\n          Invited\n        </button>\n      )\n    }\n\n    return (\n      <button\n        className='btn text-info'\n        onClick={() => this._showInvitePartyModal(role, transaction)}\n        disabled={!!status}\n      >\n        Invite\n      </button>\n    )\n  }\n\n  _renderActivityTimeline = () => {\n    let groupTimes = _.groupBy(this.state.activities, function (item) {\n      return moment(item.createdAt).format('L')\n    })\n    let groupTimesArray = _.chain(groupTimes)\n      .toPairs()\n      .sort(function (a, b) {\n        return b - a\n      })\n      .value()\n    return groupTimesArray.map((activity, index) => (\n      <React.Fragment key={index}>\n        <p className='mt-3 ml-2'>{activity[0]}</p>\n        {activity[1].map((itemTime, index) => (\n          <div className='border-bottom p-0 row' key={index}>\n            <div className='col-2 col-sm-1 col-md-1 col-xl-2 row align-items-center position-relative'>\n              <div className='circle-timeline position-absolute timeline-sidebar_circle' />\n            </div>\n            <div className='col-10 col-sm-11 col-md-11 col-xl-10 text-left '>\n              <div>\n                <b>{getRoleLabel(itemTime.role)}</b>\n              </div>\n              <span className='card-text '>\n                <b>{moment(itemTime.createdAt).format('LT')}</b>\n              </span>\n              <br />\n              <span>{`${\n                itemTime.data ? itemTime.data.title : ''\n              } ${getTransactionActivity(itemTime.type)} ${\n                itemTime.data ? getRoleLabel(itemTime.data.currentRole) : ''\n              }`}</span>\n            </div>\n          </div>\n        ))}\n      </React.Fragment>\n    ))\n  }\n\n  _onSubmitModalUpdateMyProfile = async (values, action) => {\n    const { partyTarget } = this.state\n    const { setSubmitting } = action\n\n    try {\n      const {\n        firstName,\n        lastName,\n        email,\n        phoneNumber,\n        company,\n        licenseNumber\n      } = values\n\n      setSubmitting(true)\n\n      await transactionService.updateTransactionPartyById(partyTarget.id, {\n        firstName,\n        lastName,\n        email,\n        phoneNumber,\n        company,\n        licenseNumber\n      })\n      setSubmitting(false)\n      toastr.success('Success')\n\n      this._reloadDataMember()\n\n      this._toggleModalUpdateMyProfile()\n    } catch (e) {\n      toastr.error(e.message)\n      setSubmitting(false)\n    }\n  }\n\n  _toggleModalUpdateMyProfile = () =>\n    this.setState({\n      toggleModalUpdateMyProfile: !this.state.toggleModalUpdateMyProfile\n    })\n\n  _renderModalUpdateMyProfile = () => {\n    const { partyTarget, transaction } = this.state\n    return (\n      <Modal\n        isOpen={this.state.toggleModalUpdateMyProfile || false}\n        toggle={this._toggleModalUpdateMyProfile}\n        id='create-transaction-party-profile-modal'\n      >\n        <div className='modal-header modal-header--change' id='bg-gr'>\n          <div className='text-center w-100'>\n            <h5 className='modal-title new-add' id='exampleModalLabel'>\n              Transaction Profile\n            </h5>\n          </div>\n          <button\n            type='button'\n            className='close bg-transparent'\n            data-dismiss='modal'\n            onClick={this._toggleModalUpdateMyProfile}\n          >\n            &times;\n          </button>\n        </div>\n        <Formik\n          initialValues={{\n            firstName: partyTarget.firstName || '',\n            lastName: partyTarget.lastName || '',\n            email: partyTarget.email || '',\n            phoneNumber: partyTarget.phoneNumber || '',\n            company: partyTarget.company || '',\n            licenseNumber: partyTarget.licenseNumber || ''\n          }}\n          onSubmit={this._onSubmitModalUpdateMyProfile}\n          validate={values => {\n            let error = {}\n            if (partyTarget.role !== 'seller' && partyTarget.role !== 'buyer') {\n              if (\n                values.firstName === '' ||\n                values.lastName === '' ||\n                values.email === '' ||\n                values.phoneNumber.length < 9 ||\n                values.company === ''\n              ) {\n                error.details = `${getRoleLabel(\n                  partyTarget.role\n                )} details are required`\n              }\n            } else {\n              if (\n                values.firstName.length < 1 ||\n                values.lastName.length < 1 ||\n                values.email.length < 1 ||\n                values.phoneNumber.length < 9\n              ) {\n                error.details = `${getRoleLabel(\n                  partyTarget.role\n                )} details are required`\n              }\n            }\n            return error\n          }}\n        >\n          {({\n            values,\n            errors,\n            isValid,\n            isSubmitting,\n            handleSubmit,\n            handleChange\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <div className='modal-body px-5 mx-2' id='main-body-add-member'>\n                <div>\n                  {/* <h4 className='text-center'>{getRoleLabel(welcomeInvitation.role)}</h4> */}\n                  <div className='row pt-3'>\n                    <div className='col-12 col-md-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>First Name</label>\n                        <input\n                          className='form-control'\n                          placeholder='First Name'\n                          name='firstName'\n                          onChange={handleChange}\n                          value={values.firstName}\n                          autoFocus\n                        />\n                      </div>\n                    </div>\n                    <div className='col-12 col-md-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Last Name</label>\n                        <input\n                          className='form-control'\n                          placeholder='Last Name'\n                          name='lastName'\n                          onChange={handleChange}\n                          value={values.lastName}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-12 col-md-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Email</label>\n                        <input\n                          disabled\n                          className='form-control'\n                          placeholder='Email Address'\n                          name='email'\n                          onChange={handleChange}\n                          value={values.email}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-12 col-md-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Phone Number</label>\n                        <PhoneInput\n                          country={'us'}\n                          enableSearch\n                          onChange={value => {\n                            handleChange({\n                              target: { name: 'phoneNumber', value }\n                            })\n                          }}\n                          value={values.phoneNumber}\n                          placeholder='Phone Number'\n                          className='form-control'\n                        />\n                      </div>\n                    </div>\n                    <div className='col-12 col-md-6'>\n                      <div className='form-group'>\n                        <label className='tittle-mini-ver'>Company</label>\n                        <input\n                          className='form-control'\n                          placeholder='Company'\n                          name='company'\n                          onChange={handleChange}\n                          value={values.company}\n                        />\n                      </div>\n                    </div>\n                    {partyTarget.access === TransactionAccessType.FULL ? (\n                      <div className='col-12 col-md-6'>\n                        <div className='form-group'>\n                          <label className='tittle-mini-ver'>\n                            License Number\n                          </label>\n                          <input\n                            className='form-control'\n                            placeholder='License Number'\n                            name='licenseNumber'\n                            onChange={handleChange}\n                            value={values.licenseNumber}\n                          />\n                        </div>\n                      </div>\n                    ) : (\n                      <></>\n                    )}\n                  </div>\n                  {errors.details && (\n                    <div className='text-danger text-center'>\n                      {errors.details}\n                    </div>\n                  )}\n                </div>\n                <div className='text-center my-5'>\n                  <button\n                    disabled={\n                      !isValid ||\n                      errors.details ||\n                      transaction.status === TransactionStatus.ARCHIVED ||\n                      transaction.status === TransactionStatus.CLOSED\n                    }\n                    type='submit'\n                    className='btn btn-add-new text-white py-2 px-5'\n                  >\n                    {isSubmitting && (\n                      <span className='spinner-border spinner-border-sm mr-2' />\n                    )}\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </Modal>\n    )\n  }\n}\n\nexport default userOnly(TransactionPartiesPage)\n"]},"metadata":{},"sourceType":"module"}