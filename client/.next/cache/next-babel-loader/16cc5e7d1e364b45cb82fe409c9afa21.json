{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar UserInvitationGateway =\n/*#__PURE__*/\nfunction () {\n  function UserInvitationGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, UserInvitationGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(UserInvitationGateway, [{\n    key: \"addNewInvitation\",\n    value: function () {\n      var _addNewInvitation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref2) {\n        var firstName, lastName, email, role, resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                firstName = _ref2.firstName, lastName = _ref2.lastName, email = _ref2.email, role = _ref2.role;\n                _context.next = 3;\n                return this.restConnector.post(\"/userInvitations\", {\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  role: role\n                });\n\n              case 3:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addNewInvitation(_x) {\n        return _addNewInvitation.apply(this, arguments);\n      }\n\n      return addNewInvitation;\n    }()\n  }, {\n    key: \"getInvitationById\",\n    value: function () {\n      var _getInvitationById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.restConnector.get(\"/userInvitations/\".concat(id));\n\n              case 2:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getInvitationById(_x2) {\n        return _getInvitationById.apply(this, arguments);\n      }\n\n      return getInvitationById;\n    }()\n  }]);\n\n  return UserInvitationGateway;\n}();\n\nexport { UserInvitationGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/UserInvitationGateway.js"],"names":["UserInvitationGateway","restConnector","firstName","lastName","email","role","post","resp","data","id","get"],"mappings":";;;;;IAAqBA,qB;;;AACnB,uCAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD;;;;;;;;;;;;;AAEyBC,gBAAAA,S,SAAAA,S,EAAWC,Q,SAAAA,Q,EAAUC,K,SAAAA,K,EAAOC,I,SAAAA,I;;uBACjC,KAAKJ,aAAL,CAAmBK,IAAnB,qBAA4C;AAC7DJ,kBAAAA,SAAS,EAATA,SAD6D;AAE7DC,kBAAAA,QAAQ,EAARA,QAF6D;AAG7DC,kBAAAA,KAAK,EAALA,KAH6D;AAI7DC,kBAAAA,IAAI,EAAJA;AAJ6D,iBAA5C,C;;;AAAbE,gBAAAA,I;iDAMCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;iDAEWC,E;;;;;;;uBACJ,KAAKR,aAAL,CAAmBS,GAAnB,4BAA2CD,EAA3C,E;;;AAAbF,gBAAAA,I;kDACCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;SAhBKR,qB","sourcesContent":["export default class UserInvitationGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async addNewInvitation ({ firstName, lastName, email, role }) {\n    const resp = await this.restConnector.post(`/userInvitations`, {\n      firstName,\n      lastName,\n      email,\n      role\n    })\n    return resp.data\n  }\n  async getInvitationById (id) {\n    const resp = await this.restConnector.get(`/userInvitations/${id}`)\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}