{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport className from 'classnames';\nimport Dropzone from 'react-dropzone';\nimport getConfig from 'next/config';\nimport { Modal } from 'reactstrap';\nimport Head from 'next/head';\nimport { MAX_FILE_SIZE, MEGABYTE } from '../../../common/models/Transaction';\nimport { Link } from '../../../common/routes';\nimport { getFullName } from '../../../common/view-models/TransactionParty';\nimport { MessageType } from '../../../common/models/Message';\nimport { messageService, newsService, userService } from '../../services';\nimport userOnly from '../../hocs/userOnly';\nimport Role from '../../../common/models/Role';\nimport { NewsType } from '../../../common/models/News';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar API_BASE_URL = \"\".concat(publicRuntimeConfig.BASE_URL, \"/api\");\n\nvar MessagePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessagePage, _Component);\n\n  _createClass(MessagePage, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx) {\n        var user, _ref, myParties, otherParties, listNews;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                user = ctx.store.getState().global.loginUser.data;\n                _context.next = 3;\n                return userService.getMyMessagingParties();\n\n              case 3:\n                _ref = _context.sent;\n                myParties = _ref.myParties;\n                otherParties = _ref.otherParties;\n                listNews = [];\n\n                if (!(user.roles[0].name === Role.AGENT || user.roles[0].name === Role.COORDINATOR)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 10;\n                return newsService.getViewNews();\n\n              case 10:\n                listNews = _context.sent;\n\n              case 11:\n                if (listNews.length > 0) {\n                  listNews = listNews.filter(function (news) {\n                    return new Date(news.publicDate).getTime() >= new Date(user.createdAt).getTime();\n                  });\n                }\n\n                return _context.abrupt(\"return\", {\n                  headerText: 'Inbox',\n                  parties: otherParties,\n                  myParties: myParties,\n                  listNews: listNews,\n                  partyId: ctx.query.partyId ? ctx.query.partyId : ctx.query.newsId\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MessagePage(props) {\n    var _this;\n\n    _classCallCheck(this, MessagePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessagePage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getAllContact\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var currentUser, res, data, index;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              currentUser = _this.props.currentUser;\n              _context2.next = 3;\n              return userService.getAllContact(currentUser.id);\n\n            case 3:\n              res = _context2.sent;\n\n              if (res.data.user) {\n                data = res.data.user.user;\n                index = data.map(function (x) {\n                  return x.id;\n                }).indexOf(currentUser.id);\n                data.splice(index, 1);\n\n                _this.setState({\n                  user: data\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getMessageSearch\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.setState({\n                search: true\n              });\n\n            case 2:\n              _context3.next = 4;\n              return _this._focusIn();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_focusIn\", function () {\n      var test = document.getElementById('text-search');\n\n      if (test) {\n        test.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      if (e.key === 'Enter') {\n        _this._sendToNewMessage();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollToLastMessage\", function () {\n      var mes = document.getElementsByClassName('message');\n\n      if (mes.length > 0) {\n        document.addEventListener('load', _this.scrollLast());\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollLast\", function () {\n      var check = document.getElementsByClassName('chat');\n\n      if (check[0]) {\n        check[0].scrollTop = check[0].scrollHeight;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_moreMessages\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var router, _this$state, level, totalPage, chatWithPartyId;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              router = _this.props.router;\n              _this$state = _this.state, level = _this$state.level, totalPage = _this$state.totalPage, chatWithPartyId = _this$state.chatWithPartyId;\n\n              _this.setState({\n                level: level + 1,\n                isMore: true\n              });\n\n              if (!(level > totalPage)) {\n                _context4.next = 5;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 5:\n              if (router.query.partyId) {\n                _context4.next = 10;\n                break;\n              }\n\n              _context4.next = 8;\n              return _this._refetchDynamicMessages(chatWithPartyId, _this.state.level);\n\n            case 8:\n              _context4.next = 12;\n              break;\n\n            case 10:\n              _context4.next = 12;\n              return _this._refetchDynamicMessages(router.query.partyId, _this.state.leve1);\n\n            case 12:\n              _this.setState({\n                isMore: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateField\", function (field) {\n      return function (e) {\n        return _this.setState(_defineProperty({}, field, e.target.value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_sendToNewMessage\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var _this$state2, recipientParty, newMessage, file, senderParty, message, _message;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this$state2 = _this.state, recipientParty = _this$state2.recipientParty, newMessage = _this$state2.newMessage, file = _this$state2.file;\n\n              if (recipientParty) {\n                _context5.next = 3;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 3:\n              if (file) {\n                _context5.next = 6;\n                break;\n              }\n\n              if (!(newMessage === '')) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 6:\n              _this.setState({\n                isSending: true\n              });\n\n              senderParty = _this.props.myParties.find(function (party) {\n                return party.transactionId === recipientParty.transactionId;\n              });\n\n              if (!(file && file[0])) {\n                _context5.next = 15;\n                break;\n              }\n\n              _context5.next = 11;\n              return messageService.sendToFile({\n                file: file[0],\n                senderId: senderParty.id,\n                recipientId: recipientParty.id,\n                type: MessageType.ATTACHMENT\n              });\n\n            case 11:\n              message = _context5.sent;\n\n              _this._setStateAfterSend(message, recipientParty);\n\n              _context5.next = 20;\n              break;\n\n            case 15:\n              _context5.next = 17;\n              return messageService.sendToNewMessage({\n                content: newMessage,\n                senderId: senderParty.id,\n                recipientId: recipientParty.id,\n                type: MessageType.TEXT\n              });\n\n            case 17:\n              _message = _context5.sent;\n\n              _this._setStateAfterSend(_message, recipientParty);\n\n              _this._refetchDynamicMessages(senderParty.id, _this.state.level);\n\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_setStateAfterSend\", function (message, recipientParty) {\n      var newParties = _toConsumableArray(_this.state.parties);\n\n      var party = newParties.find(function (party) {\n        return party.id === recipientParty.id;\n      });\n      party.messages.push(message);\n\n      _this.setState({\n        newMessage: '',\n        file: null,\n        messages: [].concat(_toConsumableArray(_this.state.messages), [message]),\n        parties: newParties,\n        level: 1,\n        isSending: false\n      });\n\n      _this._scrollToLastMessage();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_refetchDynamicMessages\",\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(partyId, level) {\n        var recipientParty, senderParty, _ref7, otherParties, _ref8, messages, totalPage;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                recipientParty = _this.state.parties.find(function (party) {\n                  return party.id === partyId;\n                });\n\n                if (recipientParty) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 3:\n                senderParty = _this.props.myParties.find(function (party) {\n                  return party.transactionId === recipientParty.transactionId;\n                });\n                _context6.next = 6;\n                return userService.getMyMessagingParties();\n\n              case 6:\n                _ref7 = _context6.sent;\n                otherParties = _ref7.otherParties;\n                _context6.next = 10;\n                return messageService.getMyMessagesWithUser(senderParty.id, partyId, level);\n\n              case 10:\n                _ref8 = _context6.sent;\n                messages = _ref8.messages;\n                totalPage = _ref8.totalPage;\n\n                _this.setState({\n                  messages: messages,\n                  recipientParty: recipientParty,\n                  parties: otherParties,\n                  totalPage: totalPage\n                });\n\n                _this._scrollToLastMessage();\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_toggleModalError\", function () {\n      _this.setState({\n        file: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderModalNoticeError\", function () {\n      var file = _this.state.file;\n      return React.createElement(Modal, {\n        isOpen: file[0].size > MAX_FILE_SIZE,\n        toggle: _this._toggleModalError,\n        id: \"modal-error\"\n      }, React.createElement(\"div\", {\n        className: \"modal-header header\"\n      }, React.createElement(\"b\", null, \"The file you have selected is too large\")), React.createElement(\"div\", {\n        className: \"modal-body\"\n      }, \"The file you have selected is too large. The maximum size is\", ' ', MEGABYTE, \"MB.\"), React.createElement(\"div\", {\n        className: \"modal-footer\"\n      }, React.createElement(\"button\", {\n        className: \"btn button\",\n        onClick: _this._toggleModalError\n      }, \"OK\")));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderContentMessage\", function (message) {\n      if (message.type === MessageType.TEXT) {\n        return React.createElement(\"div\", {\n          className: \"message last\"\n        }, message.content);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"message last\"\n      }, React.createElement(\"u\", null, message.content), React.createElement(\"a\", {\n        href: \"\".concat(API_BASE_URL, \"/messages/\").concat(message.id, \"/download\"),\n        target: \"_blank\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-arrow-circle-down ml-2\"\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderContentMessageSend\", function (message) {\n      var _this$state3 = _this.state,\n          messages = _this$state3.messages,\n          recipientParty = _this$state3.recipientParty;\n      var data = messages.filter(function (data) {\n        return data.recipientId !== recipientParty.id;\n      });\n\n      if (data[data.length - 1].id === message.id) {\n        if (message.type === MessageType.TEXT) {\n          return React.createElement(\"div\", {\n            className: \"d-flex align-items-center w-100\"\n          }, React.createElement(\"div\", {\n            className: \"rounded-circle mr-2 overflow-hidden\",\n            style: {\n              width: '40px',\n              height: '40px',\n              flexShrink: '0'\n            }\n          }, React.createElement(\"img\", {\n            src: _this._getSrcAvt(message.senderId),\n            alt: \"\"\n          })), React.createElement(\"div\", {\n            className: \"message last\"\n          }, message.content));\n        }\n\n        return React.createElement(\"div\", {\n          className: \"d-flex align-items-center w-100\"\n        }, React.createElement(\"div\", {\n          className: \"rounded-circle mr-2 overflow-hidden\",\n          style: {\n            width: '40px',\n            height: '40px',\n            flexShrink: '0'\n          }\n        }, React.createElement(\"img\", {\n          src: _this._getSrcAvt(message.senderId),\n          alt: \"\"\n        })), React.createElement(\"div\", {\n          className: \"message last\"\n        }, React.createElement(\"u\", null, message.content), React.createElement(\"a\", {\n          href: \"\".concat(API_BASE_URL, \"/messages/\").concat(message.id, \"/download\"),\n          target: \"_blank\"\n        }, React.createElement(\"i\", {\n          className: \"fas fa-arrow-circle-down ml-2\"\n        }))));\n      } else {\n        if (message.type === MessageType.TEXT) {\n          return React.createElement(\"div\", {\n            className: \"message last\",\n            style: {\n              marginLeft: '48px'\n            }\n          }, message.content);\n        }\n\n        return React.createElement(\"div\", {\n          className: \"message last\",\n          style: {\n            marginLeft: '48px'\n          }\n        }, React.createElement(\"u\", null, message.content), React.createElement(\"a\", {\n          href: \"\".concat(API_BASE_URL, \"/messages/\").concat(message.id, \"/download\"),\n          target: \"_blank\"\n        }, React.createElement(\"i\", {\n          className: \"fas fa-arrow-circle-down ml-2\"\n        })));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getSrcAvt\", function (senderId) {\n      var parties = _this.state.parties;\n\n      if (parties.length > 0) {\n        var data = parties.find(function (parties) {\n          return parties.id === senderId;\n        });\n\n        if (data) {\n          return data.user.avatar ? data.user.avatar : '/static/images/default-avatar.png';\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderMessages\", function () {\n      var _this$state4 = _this.state,\n          messages = _this$state4.messages,\n          recipientParty = _this$state4.recipientParty;\n\n      if (messages) {\n        return _this.state.messages.map(function (message, index) {\n          return React.createElement(\"div\", {\n            key: index\n          }, message.recipientId === recipientParty.id ? React.createElement(\"div\", {\n            className: \"mine messages mt-1\"\n          }, _this._renderContentMessage(message)) : React.createElement(\"div\", {\n            className: \"yours messages mt-1\"\n          }, _this._renderContentMessageSend(message)));\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderListMessaging\", function () {\n      var parties = _this.state.parties;\n      var data = parties.filter(function (party) {\n        return party.messages.length > 0;\n      });\n\n      if (parties.length > 0) {\n        return data.map(function (party, index) {\n          return React.createElement(\"div\", {\n            className: \"message_child-scroll\",\n            key: index\n          }, _this._renderCardMessaging(party));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"card shadow-sm rounded p-4 th-font-w-5\",\n          style: {\n            fontSize: '20px'\n          }\n        }, \"You currently do not have parties\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderListNews\", function () {\n      var listNews = _this.state.listNews;\n\n      if (listNews && listNews.length > 0) {\n        return listNews.map(function (news, index) {\n          return React.createElement(\"div\", {\n            className: \"message_child-scroll\",\n            key: index\n          }, _this._renderCardNews(news));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"card shadow-sm rounded p-4 th-font-w-5\",\n          style: {\n            fontSize: '20px'\n          }\n        }, \"There are currently no new news\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewDataSearch\", function () {\n      var _this$state5 = _this.state,\n          keyword = _this$state5.keyword,\n          parties = _this$state5.parties;\n\n      if (keyword !== '') {\n        return parties.map(function (party, index) {\n          return React.createElement(\"div\", {\n            className: \"item-search\",\n            key: index\n          }, getFullName(party).toLowerCase().indexOf(keyword.toLowerCase().trim()) !== -1 && _this._renderSearch(party));\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderSearch\", function (party) {\n      return React.createElement(Link, {\n        route: \"/message?partyId=\".concat(party.id)\n      }, React.createElement(\"div\", {\n        className: \"search-big\",\n        onClick: function onClick() {\n          _this.setState({\n            level: 1,\n            search: false,\n            keyword: ''\n          });\n\n          _this._refetchDynamicMessages(party.id, _this.state.level);\n        }\n      }, React.createElement(\"div\", {\n        className: \"search-left\"\n      }, React.createElement(\"img\", {\n        className: \"rounded-circle mr-2\",\n        src: party.user ? party.user.avatar ? party.user.avatar : '/static/images/default-avatar.png' : '/static/images/default-avatar.png'\n      })), React.createElement(\"div\", {\n        className: \"search-right\"\n      }, React.createElement(\"h3\", null, getFullName(party)), React.createElement(\"span\", null, party.email))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderCardMessaging\", function (party) {\n      if (party && party.messages && party.user) {\n        var router = _this.props.router;\n        var recipientParty = _this.state.recipientParty;\n        var isRouter = recipientParty ? party.id === recipientParty.id : party.id === router.query.partyId;\n\n        var lastMessage = _.last(party.messages);\n\n        return React.createElement(\"div\", {\n          className: \"shadow-sm message__list\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: function onClick() {\n            _this.setState({\n              level: 1,\n              keyword: '',\n              search: false\n            });\n\n            _this._refetchDynamicMessages(party.id, _this.state.level);\n          }\n        }, React.createElement(\"div\", {\n          className: isRouter ? 'message__item--action' : 'message__item'\n        }, React.createElement(\"div\", {\n          className: \"message__item-text row mx-0\"\n        }, React.createElement(\"img\", {\n          className: \"rounded-circle col-2 px-0\",\n          src: party.user.avatar || '/static/images/default-avatar.png'\n        }), React.createElement(\"div\", {\n          className: \"gr-text col-10 pr-0\"\n        }, React.createElement(\"div\", {\n          className: \"row mx-0\"\n        }, React.createElement(\"h5\", {\n          className: \"col-6 px-0 overflow-hidden th-font-w-5\",\n          style: {\n            textOverflow: 'ellipsis'\n          }\n        }, getFullName(party)), React.createElement(\"span\", {\n          className: \"th-color-blue th-font-w-5 col-6 px-0 text-right\"\n        }, lastMessage ? moment(lastMessage.createdAt).fromNow() : React.createElement(\"br\", null))), lastMessage && React.createElement(\"p\", {\n          className: className('message__overflow th-font-w-5', {\n            'text-black-50': isRouter\n          })\n        }, lastMessage.content))), !isRouter && party.newMessage && React.createElement(\"div\", {\n          className: \"d-flex justify-content-end mt-5\"\n        }, React.createElement(\"div\", {\n          className: \"m-3 row message__item-time__new\"\n        }, React.createElement(\"p\", {\n          className: \"message__item-new-message\"\n        }, party.newMessage))), isRouter && delete party.newMessage));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderCardNews\", function (news) {\n      var currentNews = _this.state.currentNews;\n      var isCurrent = false;\n\n      if (currentNews.id === news.id) {\n        isCurrent = true;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"shadow-sm message__list\",\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          _this.setState({\n            currentNews: news\n          });\n        }\n      }, React.createElement(\"div\", {\n        className: isCurrent ? 'message__item--action' : 'message__item'\n      }, React.createElement(\"div\", {\n        className: \"message__item-text row mx-0\"\n      }, _this._viewImageNews(news.newsType), React.createElement(\"div\", {\n        className: \"gr-text col-10 pr-0\"\n      }, React.createElement(\"div\", {\n        className: \"gr-top row mx-0\"\n      }, React.createElement(\"h5\", {\n        className: \"col-6 px-0 overflow-hidden\"\n      }, news.title), React.createElement(\"p\", {\n        className: \"message__item-time text-right col-6 pr-0\"\n      }, React.createElement(\"span\", {\n        className: \"th-color-blue th-font-w-5\"\n      }, moment(news.publicDate || news.createdAt).fromNow()))), React.createElement(\"p\", {\n        className: className('message__overflow th-font-w-5', {\n          'text-black-50': isCurrent\n        }),\n        style: {\n          width: '100%'\n        }\n      }, news.content)))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewImageNews\", function (data) {\n      switch (data) {\n        case NewsType.E_COMMERCE:\n          return React.createElement(\"div\", {\n            className: \"rounded-circle d-flex align-items-center justify-content-center col-2 px-0\",\n            style: {\n              width: '50px',\n              height: '50px',\n              minWidth: '50px',\n              maxWidth: '50px',\n              backgroundColor: '#2F80ED'\n            }\n          }, React.createElement(\"img\", {\n            className: \"\",\n            src: \"/static/images/New/type-eCom.png\",\n            style: {\n              width: '50%',\n              height: '50%',\n              minHeight: '50%'\n            }\n          }));\n\n        case NewsType.REAL_ESTATE:\n          return React.createElement(\"div\", {\n            className: \"rounded-circle d-flex align-items-center justify-content-center col-2 px-0\",\n            style: {\n              width: '50px',\n              height: '50px',\n              minWidth: '50px',\n              maxWidth: '50px',\n              backgroundColor: '#446AEB'\n            }\n          }, React.createElement(\"img\", {\n            className: \"\",\n            src: \"/static/images/New/type-real.png\",\n            style: {\n              width: '50%',\n              height: '50%',\n              minHeight: '50%'\n            }\n          }));\n\n        case NewsType.OTHERS:\n          return React.createElement(\"div\", {\n            className: \"rounded-circle d-flex align-items-center justify-content-center col-2 px-0\",\n            style: {\n              width: '50px',\n              height: '50px',\n              minWidth: '50px',\n              maxWidth: '50px',\n              backgroundColor: '#DFDFDF'\n            }\n          }, React.createElement(\"img\", {\n            className: \"\",\n            src: \"/static/images/New/type-order.png\",\n            style: {\n              width: '50%',\n              height: '50%',\n              minHeight: '50%'\n            }\n          }));\n\n        default:\n          break;\n      }\n    });\n\n    _this.onDrop = function (file) {\n      _this.setState({\n        file: file\n      });\n    };\n\n    _this.state = {\n      messages: [],\n      user: [],\n      newMessage: '',\n      chatWithPartyId: props.partyId ? props.partyId : props.parties[0] ? props.parties[0].id : null,\n      recipientParty: null,\n      parties: props.parties,\n      keyword: '',\n      toggleTimeline: false,\n      toggleMessageBox: false,\n      level: 1,\n      totalPage: 0,\n      isMore: false,\n      file: null,\n      isSending: false,\n      toggleModalError: false,\n      search: false,\n      isViewInbox: true,\n      listNews: props.listNews,\n      currentNews: props.listNews[0]\n    };\n    return _this;\n  } // Get all contact for user\n\n\n  _createClass(MessagePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state6 = this.state,\n          recipientParty = _this$state6.recipientParty,\n          newMessage = _this$state6.newMessage,\n          keyword = _this$state6.keyword,\n          isMore = _this$state6.isMore,\n          level = _this$state6.level,\n          totalPage = _this$state6.totalPage,\n          file = _this$state6.file,\n          isSending = _this$state6.isSending,\n          search = _this$state6.search,\n          isViewInbox = _this$state6.isViewInbox,\n          currentNews = _this$state6.currentNews,\n          parties = _this$state6.parties;\n      return React.createElement(\"div\", {\n        className: \"box-main\"\n      }, React.createElement(Head, null, React.createElement(\"title\", null, \"Messaging\")), React.createElement(\"div\", {\n        className: \"row m-0\"\n      }, React.createElement(\"div\", {\n        className: \"card-border-top card-border-top_transaction w-100\",\n        id: \"message\",\n        style: {\n          overflowY: 'hidden'\n        }\n      }, React.createElement(\"div\", {\n        className: \"row message__row m-0\"\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-md-6 col-xl-5 message__box pb-3 pl-0 pr-0\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center p-4 th-allMes\"\n      }, isViewInbox ? React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        className: \"th-font-f-7 mb-0\"\n      }, \"All Messages\"), parties.length > 0 && React.createElement(\"div\", {\n        className: \"th-color-blue rounded th-new\",\n        onClick: function onClick() {\n          return _this2._getMessageSearch();\n        }\n      }, \"+\")) : React.createElement(\"h3\", {\n        className: \"th-font-f-7 mb-0\"\n      }, \"All News\")), React.createElement(\"div\", {\n        className: \"d-flex th-new-mess border-bottom\"\n      }, React.createElement(\"div\", {\n        className: isViewInbox ? 'col-6 d-flex align-items-center justify-content-center flex-column th-left active-ch' : 'col-6 d-flex align-items-center justify-content-center flex-column th-left',\n        style: {\n          padding: '11px 24px'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            isViewInbox: true\n          });\n        }\n      }, React.createElement(\"img\", {\n        className: \"\",\n        src: \"/static/images/New/new-mess.png\",\n        style: {\n          width: '30px',\n          height: '30px'\n        }\n      }), React.createElement(\"span\", {\n        className: \"font-weight-bold\"\n      }, \"Messages\")), React.createElement(\"div\", {\n        className: !isViewInbox ? 'active-ch col-6 d-flex align-items-center justify-content-center flex-column th-right' : 'col-6 d-flex align-items-center justify-content-center flex-column th-right',\n        style: {\n          padding: '11px 24px'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            isViewInbox: false\n          });\n        }\n      }, React.createElement(\"img\", {\n        className: \"\",\n        src: \"/static/images/New/new-noti.png\",\n        style: {\n          width: '30px',\n          height: '30px'\n        }\n      }), React.createElement(\"span\", {\n        className: \"font-weight-bold\"\n      }, \"News\"))), isViewInbox ? React.createElement(\"div\", {\n        className: \"\".concat(this.state.toggleMessageBox ? 'message_scroll--fix' : 'message_scroll')\n      }, this._renderListMessaging()) : React.createElement(\"div\", {\n        className: \"message_scroll\" // style={{ fontSize: '20px' }}\n\n      }, this._renderListNews())), isViewInbox ? recipientParty !== null && (search ? React.createElement(\"div\", {\n        className: \"col-md-6 col-xl-7 col-12 message__content px-0 d-flex justify-content-between flex-column\"\n      }, React.createElement(\"div\", {\n        className: \"bg-light\",\n        style: {\n          padding: '25px 16px',\n          borderBottom: '1px solid #eee'\n        }\n      }, React.createElement(\"h3\", {\n        className: \"th-font-f-7 mb-0 th-search\"\n      }, \"To:\", React.createElement(\"input\", {\n        id: \"text-search\",\n        type: \"text\",\n        placeholder: \"Enter name\",\n        onChange: this._updateField('keyword'),\n        value: keyword\n      }), React.createElement(\"div\", {\n        className: \"card shadow-sm rounded box-search\"\n      }, this._viewDataSearch()))), React.createElement(\"div\", {\n        className: \"th-box-chat\"\n      }, React.createElement(\"div\", {\n        className: \"chat p-3\",\n        id: \"chat-box\"\n      }, React.createElement(\"div\", {\n        className: \"text-center\"\n      }, level < totalPage && React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2._moreMessages();\n        },\n        style: {\n          cursor: 'pointer'\n        },\n        className: \"text-black-50\"\n      }, isMore && React.createElement(\"span\", {\n        className: \"spinner-border spinner-border-sm mr-2\"\n      }), \"more...\")), this._renderMessages(), React.createElement(\"div\", {\n        className: \"text-right loading\"\n      }, isSending && React.createElement(\"span\", {\n        className: \"spinner-border spinner-border-sm mr-2 \"\n      })), React.createElement(\"div\", {\n        ref: \"message\"\n      }))), React.createElement(\"div\", {\n        className: \"input-group message__text\"\n      }, React.createElement(\"div\", {\n        className: \"gr-inbox\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"new-message\",\n        className: \"form-control form-control--fix\",\n        placeholder: \"Type a message here\\u2026\",\n        onChange: this._updateField('newMessage'),\n        value: file && file[0] ? file[0].name : newMessage,\n        onKeyDown: this._handleKeyDown\n      }), React.createElement(\"div\", {\n        className: \"group-send-big\"\n      }, React.createElement(Dropzone // accept={FILE_TYPE}\n      , {\n        maxSizeBytes: MAX_FILE_SIZE,\n        onDrop: this.onDrop\n      }, function (_ref9) {\n        var getRootProps = _ref9.getRootProps,\n            getInputProps = _ref9.getInputProps;\n        return React.createElement(\"section\", {\n          className: \"mr-2\"\n        }, React.createElement(\"div\", getRootProps(), React.createElement(\"input\", getInputProps()), React.createElement(\"span\", {\n          className: \"input-group-text\",\n          id: \"basic-addon1\"\n        }, React.createElement(\"i\", {\n          className: \"fa fa-paperclip\"\n        }))), file && file[0] && file[0].size > MAX_FILE_SIZE && _this2._renderModalNoticeError());\n      }), React.createElement(\"span\", {\n        className: \"gr-send\",\n        onClick: function onClick() {\n          return _this2._sendToNewMessage();\n        }\n      }, React.createElement(\"i\", {\n        className: \"fa fa-location-arrow fa--fix\"\n      })))))) : React.createElement(\"div\", {\n        className: \"col-md-6 col-xl-7 col-12 message__content px-0 d-flex justify-content-between flex-column\"\n      }, React.createElement(\"div\", {\n        className: \"bg-light\",\n        style: {\n          padding: '26px 16px',\n          borderBottom: '1px solid #eee'\n        }\n      }, React.createElement(\"h3\", {\n        className: \"th-font-f-7 mb-0\"\n      }, getFullName(recipientParty))), React.createElement(\"div\", {\n        className: \"th-box-chat\"\n      }, React.createElement(\"div\", {\n        className: \"chat p-3\",\n        id: \"style-scroll\"\n      }, React.createElement(\"div\", {\n        className: \"text-center\"\n      }, level < totalPage && React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2._moreMessages();\n        },\n        style: {\n          cursor: 'pointer'\n        },\n        className: \"text-black-50\"\n      }, isMore && React.createElement(\"span\", {\n        className: \"spinner-border spinner-border-sm mr-2\"\n      }), \"more...\")), this._renderMessages(), React.createElement(\"div\", {\n        className: \"text-right loading\"\n      }, isSending && React.createElement(\"span\", {\n        className: \"spinner-border spinner-border-sm mr-2 \"\n      })), React.createElement(\"div\", {\n        ref: \"message\"\n      }))), React.createElement(\"div\", {\n        className: \"input-group message__text\"\n      }, React.createElement(\"div\", {\n        className: \"gr-inbox\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"new-message\",\n        className: \"form-control form-control--fix\",\n        placeholder: \"Type a message here\\u2026\",\n        onChange: this._updateField('newMessage'),\n        value: file && file[0] ? file[0].name : newMessage,\n        onKeyDown: this._handleKeyDown\n      }), React.createElement(\"div\", {\n        className: \"gr-send-big\"\n      }, React.createElement(Dropzone // accept={FILE_TYPE}\n      , {\n        maxSizeBytes: MAX_FILE_SIZE,\n        onDrop: this.onDrop\n      }, function (_ref10) {\n        var getRootProps = _ref10.getRootProps,\n            getInputProps = _ref10.getInputProps;\n        return React.createElement(\"section\", null, React.createElement(\"div\", _extends({}, getRootProps(), {\n          className: \"h-100\"\n        }), React.createElement(\"input\", getInputProps()), React.createElement(\"span\", {\n          className: \"input-group-text\",\n          id: \"basic-addon1\"\n        }, React.createElement(\"i\", {\n          className: \"fa fa-paperclip\"\n        }))), file && file[0] && file[0].size > MAX_FILE_SIZE && _this2._renderModalNoticeError());\n      }), React.createElement(\"span\", {\n        className: \"gr-send\",\n        onClick: function onClick() {\n          return _this2._sendToNewMessage();\n        }\n      }, React.createElement(\"i\", {\n        className: \"fa fa-location-arrow fa--fix\"\n      }))))))) : currentNews ? React.createElement(\"div\", {\n        className: \"col-md-6 col-xl-7 col-12 message__content pd-0 pl-0 pr-0\",\n        style: {\n          backgroundColor: '#fff'\n        }\n      }, React.createElement(\"div\", {\n        className: \"bg-light th-allMes\",\n        style: {\n          padding: '24px 16px'\n        }\n      }, React.createElement(\"h3\", {\n        className: \"th-font-f-7 mb-0\"\n      }, currentNews.title)), React.createElement(\"div\", {\n        className: \"p-4 th-box-chat\"\n      }, React.createElement(\"p\", null, currentNews.content))) : React.createElement(\"div\", {\n        className: \"col-7 card shadow-sm rounded mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"th-font-w-5\",\n        style: {\n          paddingBottom: '35vh',\n          paddingTop: '35vh',\n          textAlign: 'center'\n        }\n      }, \"No news\"))))), React.createElement(\"footer\", {\n        className: \"footer-card\",\n        style: {\n          padding: '2rem 0'\n        }\n      }, React.createElement(\"div\", {\n        className: \"footer-page\"\n      }, React.createElement(\"div\", {\n        className: \"footer-p1\"\n      }, \"\\xA9 Copyright Link Management Systems. All rights reserved\"), React.createElement(\"div\", {\n        className: \"footer-p2\"\n      }, \"Powered by Link Brokerages\"))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var _this3 = this;\n\n        var _this$state7, level, listNews, chatWithPartyId, currentUser, check;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _this$state7 = this.state, level = _this$state7.level, listNews = _this$state7.listNews, chatWithPartyId = _this$state7.chatWithPartyId;\n                currentUser = this.props.currentUser;\n\n                if (!this.state.chatWithPartyId) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                check = listNews.find(function (x) {\n                  return x.id === chatWithPartyId;\n                });\n\n                if (check) {\n                  this.setState({\n                    isViewInbox: false,\n                    currentNews: check\n                  });\n                }\n\n                _context7.next = 7;\n                return this._refetchDynamicMessages(this.state.chatWithPartyId, level);\n\n              case 7:\n                this._scrollToLastMessage();\n\n              case 8:\n                // setup real time when send sms\n                messageService.listenToMyNewMessages(currentUser.id, function (message) {\n                  if (_this3.state.chatWithPartyId === message.senderId) {\n                    _this3.setState({\n                      messages: [].concat(_toConsumableArray(_this3.state.messages), [message])\n                    }, _this3._scrollToLastMessage(), _this3._refetchDynamicMessages(_this3.state.chatWithPartyId, level));\n                  } else {\n                    var newParties = _toConsumableArray(_this3.state.parties);\n\n                    var party = newParties.find(function (party) {\n                      return party.id === message.senderId;\n                    });\n                    party.messages.push(message);\n\n                    if (party.newMessage) {\n                      party.newMessage += 1;\n                    } else {\n                      party.newMessage = 1;\n                    }\n\n                    _this3.setState({\n                      parties: newParties\n                    });\n                  }\n                });\n\n                this._getAllContact();\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // componentWillUnmount () {\n    //   messageService.unlistenToMyNewMessages(this.props.currentUser.id)\n    // }\n    // componentDidUpdate() {\n    //   if (this.state.level === 1) {\n    //     this._scrollToLastMessage()\n    //   }\n    // }\n\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.router.query.partyId) {\n        if (nextProps.router.query.partyId !== this.state.chatWithPartyId) {\n          this.setState({\n            chatWithPartyId: nextProps.router.query.partyId\n          });\n        }\n      }\n    }\n  }]);\n\n  return MessagePage;\n}(Component);\n\nexport default userOnly(MessagePage);","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/MessagePage/index.js"],"names":["React","Component","_","moment","className","Dropzone","getConfig","Modal","Head","MAX_FILE_SIZE","MEGABYTE","Link","getFullName","MessageType","messageService","newsService","userService","userOnly","Role","NewsType","publicRuntimeConfig","API_BASE_URL","BASE_URL","MessagePage","ctx","user","store","getState","global","loginUser","data","getMyMessagingParties","myParties","otherParties","listNews","roles","name","AGENT","COORDINATOR","getViewNews","length","filter","news","Date","publicDate","getTime","createdAt","headerText","parties","partyId","query","newsId","props","currentUser","getAllContact","id","res","index","map","x","indexOf","splice","setState","search","_focusIn","test","document","getElementById","focus","e","key","_sendToNewMessage","mes","getElementsByClassName","addEventListener","scrollLast","check","scrollTop","scrollHeight","router","state","level","totalPage","chatWithPartyId","isMore","_refetchDynamicMessages","leve1","field","target","value","recipientParty","newMessage","file","isSending","senderParty","find","party","transactionId","sendToFile","senderId","recipientId","type","ATTACHMENT","message","_setStateAfterSend","sendToNewMessage","content","TEXT","newParties","messages","push","_scrollToLastMessage","getMyMessagesWithUser","size","_toggleModalError","width","height","flexShrink","_getSrcAvt","marginLeft","avatar","_renderContentMessage","_renderContentMessageSend","_renderCardMessaging","fontSize","_renderCardNews","keyword","toLowerCase","trim","_renderSearch","email","isRouter","lastMessage","last","cursor","textOverflow","fromNow","currentNews","isCurrent","_viewImageNews","newsType","title","E_COMMERCE","minWidth","maxWidth","backgroundColor","minHeight","REAL_ESTATE","OTHERS","onDrop","toggleTimeline","toggleMessageBox","toggleModalError","isViewInbox","overflowY","_getMessageSearch","padding","_renderListMessaging","_renderListNews","borderBottom","_updateField","_viewDataSearch","_moreMessages","_renderMessages","_handleKeyDown","getRootProps","getInputProps","_renderModalNoticeError","paddingBottom","paddingTop","textAlign","listenToMyNewMessages","_getAllContact","nextProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport className from 'classnames'\nimport Dropzone from 'react-dropzone'\nimport getConfig from 'next/config'\nimport { Modal } from 'reactstrap'\nimport Head from 'next/head'\nimport { MAX_FILE_SIZE, MEGABYTE } from '../../../common/models/Transaction'\nimport { Link } from '../../../common/routes'\nimport { getFullName } from '../../../common/view-models/TransactionParty'\nimport { MessageType } from '../../../common/models/Message'\nimport { messageService, newsService, userService } from '../../services'\nimport userOnly from '../../hocs/userOnly'\nimport Role from '../../../common/models/Role'\nimport { NewsType } from '../../../common/models/News'\n\nconst { publicRuntimeConfig } = getConfig()\nconst API_BASE_URL = `${publicRuntimeConfig.BASE_URL}/api`\n\nclass MessagePage extends Component {\n  static async getInitialProps (ctx) {\n    const user = ctx.store.getState().global.loginUser.data\n    const {\n      myParties,\n      otherParties\n    } = await userService.getMyMessagingParties()\n    let listNews = []\n    if (\n      user.roles[0].name === Role.AGENT ||\n      user.roles[0].name === Role.COORDINATOR\n    ) {\n      listNews = await newsService.getViewNews()\n    }\n    if (listNews.length > 0) {\n      listNews = listNews.filter(\n        news =>\n          new Date(news.publicDate).getTime() >=\n          new Date(user.createdAt).getTime()\n      )\n    }\n    return {\n      headerText: 'Inbox',\n      parties: otherParties,\n      myParties,\n      listNews,\n      partyId: ctx.query.partyId ? ctx.query.partyId : ctx.query.newsId\n    }\n  }\n\n  constructor (props) {\n    super(props)\n    this.onDrop = file => {\n      this.setState({ file })\n    }\n    this.state = {\n      messages: [],\n      user: [],\n      newMessage: '',\n      chatWithPartyId: props.partyId\n        ? props.partyId\n        : props.parties[0]\n          ? props.parties[0].id\n          : null,\n      recipientParty: null,\n      parties: props.parties,\n      keyword: '',\n      toggleTimeline: false,\n      toggleMessageBox: false,\n      level: 1,\n      totalPage: 0,\n      isMore: false,\n      file: null,\n      isSending: false,\n      toggleModalError: false,\n      search: false,\n      isViewInbox: true,\n      listNews: props.listNews,\n      currentNews: props.listNews[0]\n    }\n  }\n  // Get all contact for user\n  _getAllContact = async () => {\n    const { currentUser } = this.props\n    const res = await userService.getAllContact(currentUser.id)\n    if (res.data.user) {\n      const data = res.data.user.user\n      const index = data.map(x => x.id).indexOf(currentUser.id)\n      data.splice(index, 1)\n      this.setState({\n        user: data\n      })\n    }\n  }\n  // set search\n  _getMessageSearch = async () => {\n    await this.setState({\n      search: true\n    })\n    await this._focusIn()\n  }\n  // focus search box\n  _focusIn = () => {\n    const test = document.getElementById('text-search')\n    if (test) {\n      test.focus()\n    }\n  }\n\n  render () {\n    const {\n      recipientParty,\n      newMessage,\n      keyword,\n      isMore,\n      level,\n      totalPage,\n      file,\n      isSending,\n      search,\n      isViewInbox,\n      currentNews,\n      parties\n    } = this.state\n    return (\n      <div className='box-main'>\n        <Head>\n          <title>Messaging</title>\n        </Head>\n        <div className='row m-0'>\n          <div\n            className='card-border-top card-border-top_transaction w-100'\n            id='message'\n            style={{\n              overflowY: 'hidden'\n            }}\n          >\n            <div className='row message__row m-0'>\n              <div className='col-12 col-md-6 col-xl-5 message__box pb-3 pl-0 pr-0'>\n                <div className='d-flex justify-content-between align-items-center p-4 th-allMes'>\n                  {isViewInbox ? (\n                    <>\n                      <h3 className='th-font-f-7 mb-0'>All Messages</h3>\n                      {parties.length > 0 && (\n                        <div\n                          className='th-color-blue rounded th-new'\n                          onClick={() => this._getMessageSearch()}\n                        >\n                          +\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    <h3 className='th-font-f-7 mb-0'>All News</h3>\n                  )}\n                </div>\n                <div className='d-flex th-new-mess border-bottom'>\n                  <div\n                    className={\n                      isViewInbox\n                        ? 'col-6 d-flex align-items-center justify-content-center flex-column th-left active-ch'\n                        : 'col-6 d-flex align-items-center justify-content-center flex-column th-left'\n                    }\n                    style={{ padding: '11px 24px' }}\n                    onClick={() => this.setState({ isViewInbox: true })}\n                  >\n                    <img\n                      className=''\n                      src='/static/images/New/new-mess.png'\n                      style={{ width: '30px', height: '30px' }}\n                    />\n                    <span className='font-weight-bold'>Messages</span>\n                  </div>\n                  <div\n                    className={\n                      !isViewInbox\n                        ? 'active-ch col-6 d-flex align-items-center justify-content-center flex-column th-right'\n                        : 'col-6 d-flex align-items-center justify-content-center flex-column th-right'\n                    }\n                    style={{ padding: '11px 24px' }}\n                    onClick={() => this.setState({ isViewInbox: false })}\n                  >\n                    <img\n                      className=''\n                      src='/static/images/New/new-noti.png'\n                      style={{ width: '30px', height: '30px' }}\n                    />\n                    <span className='font-weight-bold'>News</span>\n                  </div>\n                </div>\n                {isViewInbox ? (\n                  <div\n                    className={`${\n                      this.state.toggleMessageBox\n                        ? 'message_scroll--fix'\n                        : 'message_scroll'\n                    }`}\n                  >\n                    {/* <div className='message_scroll' id='style-scroll'> */}\n                    {this._renderListMessaging()}\n                  </div>\n                ) : (\n                  <div\n                    className='message_scroll'\n                    // style={{ fontSize: '20px' }}\n                  >\n                    {this._renderListNews()}\n                  </div>\n                )}\n              </div>\n              {isViewInbox ? (\n                recipientParty !== null &&\n                (search ? (\n                  <div className='col-md-6 col-xl-7 col-12 message__content px-0 d-flex justify-content-between flex-column'>\n                    <div\n                      className='bg-light'\n                      style={{\n                        padding: '25px 16px',\n                        borderBottom: '1px solid #eee'\n                      }}\n                    >\n                      <h3 className='th-font-f-7 mb-0 th-search'>\n                        To:\n                        <input\n                          id='text-search'\n                          type='text'\n                          placeholder='Enter name'\n                          onChange={this._updateField('keyword')}\n                          value={keyword}\n                        />\n                        <div className='card shadow-sm rounded box-search'>\n                          {this._viewDataSearch()}\n                        </div>\n                      </h3>\n                    </div>\n                    <div className='th-box-chat'>\n                      <div className='chat p-3' id='chat-box'>\n                        <div className='text-center'>\n                          {level < totalPage && (\n                            <div\n                              onClick={() => this._moreMessages()}\n                              style={{ cursor: 'pointer' }}\n                              className='text-black-50'\n                            >\n                              {isMore && (\n                                <span className='spinner-border spinner-border-sm mr-2' />\n                              )}\n                              more...\n                            </div>\n                          )}\n                        </div>\n                        {this._renderMessages()}\n                        <div className='text-right loading'>\n                          {isSending && (\n                            <span className='spinner-border spinner-border-sm mr-2 ' />\n                          )}\n                        </div>\n                        <div ref='message' />\n                      </div>\n                    </div>\n                    <div className='input-group message__text'>\n                      <div className='gr-inbox'>\n                        <input\n                          type='text'\n                          id='new-message'\n                          className='form-control form-control--fix'\n                          placeholder='Type a message here…'\n                          onChange={this._updateField('newMessage')}\n                          value={file && file[0] ? file[0].name : newMessage}\n                          onKeyDown={this._handleKeyDown}\n                        />\n                        <div className='group-send-big'>\n                          <Dropzone\n                            // accept={FILE_TYPE}\n                            maxSizeBytes={MAX_FILE_SIZE}\n                            onDrop={this.onDrop}\n                          >\n                            {({ getRootProps, getInputProps }) => (\n                              <section className='mr-2'>\n                                <div {...getRootProps()}>\n                                  <input {...getInputProps()} />\n\n                                  <span\n                                    className='input-group-text'\n                                    id='basic-addon1'\n                                  >\n                                    <i className='fa fa-paperclip' />\n                                  </span>\n                                </div>\n                                {file &&\n                                  file[0] &&\n                                  (file[0].size > MAX_FILE_SIZE &&\n                                    this._renderModalNoticeError())}\n                              </section>\n                            )}\n                          </Dropzone>\n                          <span\n                            className='gr-send'\n                            onClick={() => this._sendToNewMessage()}\n                          >\n                            <i className='fa fa-location-arrow fa--fix' />\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className='col-md-6 col-xl-7 col-12 message__content px-0 d-flex justify-content-between flex-column'>\n                    <div\n                      className='bg-light'\n                      style={{\n                        padding: '26px 16px',\n                        borderBottom: '1px solid #eee'\n                      }}\n                    >\n                      <h3 className='th-font-f-7 mb-0'>\n                        {getFullName(recipientParty)}\n                      </h3>\n                    </div>\n                    <div className='th-box-chat'>\n                      <div className='chat p-3' id='style-scroll'>\n                        <div className='text-center'>\n                          {level < totalPage && (\n                            <div\n                              onClick={() => this._moreMessages()}\n                              style={{ cursor: 'pointer' }}\n                              className='text-black-50'\n                            >\n                              {isMore && (\n                                <span className='spinner-border spinner-border-sm mr-2' />\n                              )}\n                              more...\n                            </div>\n                          )}\n                        </div>\n                        {this._renderMessages()}\n                        <div className='text-right loading'>\n                          {isSending && (\n                            <span className='spinner-border spinner-border-sm mr-2 ' />\n                          )}\n                        </div>\n                        <div ref='message' />\n                      </div>\n                    </div>\n                    <div className='input-group message__text'>\n                      <div className='gr-inbox'>\n                        <input\n                          type='text'\n                          id='new-message'\n                          className='form-control form-control--fix'\n                          placeholder='Type a message here…'\n                          onChange={this._updateField('newMessage')}\n                          value={file && file[0] ? file[0].name : newMessage}\n                          onKeyDown={this._handleKeyDown}\n                        />\n                        <div className='gr-send-big'>\n                          <Dropzone\n                            // accept={FILE_TYPE}\n                            maxSizeBytes={MAX_FILE_SIZE}\n                            onDrop={this.onDrop}\n                          >\n                            {({ getRootProps, getInputProps }) => (\n                              <section>\n                                <div {...getRootProps()} className='h-100'>\n                                  <input {...getInputProps()} />\n                                  <span\n                                    className='input-group-text'\n                                    id='basic-addon1'\n                                  >\n                                    <i className='fa fa-paperclip' />\n                                  </span>\n                                </div>\n                                {file &&\n                                  file[0] &&\n                                  (file[0].size > MAX_FILE_SIZE &&\n                                    this._renderModalNoticeError())}\n                              </section>\n                            )}\n                          </Dropzone>\n                          <span\n                            className='gr-send'\n                            onClick={() => this._sendToNewMessage()}\n                          >\n                            <i className='fa fa-location-arrow fa--fix' />\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              ) : currentNews ? (\n                <div\n                  className='col-md-6 col-xl-7 col-12 message__content pd-0 pl-0 pr-0'\n                  style={{ backgroundColor: '#fff' }}\n                >\n                  <div\n                    className='bg-light th-allMes'\n                    style={{ padding: '24px 16px' }}\n                  >\n                    <h3 className='th-font-f-7 mb-0'>{currentNews.title}</h3>\n                  </div>\n                  <div className='p-4 th-box-chat'>\n                    <p>{currentNews.content}</p>\n                  </div>\n                </div>\n              ) : (\n                <div className='col-7 card shadow-sm rounded mb-0'>\n                  <div\n                    className='th-font-w-5'\n                    style={{\n                      paddingBottom: '35vh',\n                      paddingTop: '35vh',\n                      textAlign: 'center'\n                    }}\n                  >\n                    No news\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <footer className='footer-card' style={{ padding: '2rem 0' }}>\n          <div className='footer-page'>\n            <div className='footer-p1'>\n              © Copyright Link Management Systems. All rights reserved\n            </div>\n            <div className='footer-p2'>Powered by Link Brokerages</div>\n          </div>\n        </footer>\n      </div>\n    )\n  }\n\n  async componentDidMount () {\n    const { level, listNews, chatWithPartyId } = this.state\n    const { currentUser } = this.props\n    if (this.state.chatWithPartyId) {\n      const check = listNews.find(x => x.id === chatWithPartyId)\n      if (check) {\n        this.setState({\n          isViewInbox: false,\n          currentNews: check\n        })\n      }\n      await this._refetchDynamicMessages(this.state.chatWithPartyId, level)\n      this._scrollToLastMessage()\n    }\n    // setup real time when send sms\n    messageService.listenToMyNewMessages(currentUser.id, message => {\n      if (this.state.chatWithPartyId === message.senderId) {\n        this.setState(\n          {\n            messages: [...this.state.messages, message]\n          },\n          this._scrollToLastMessage(),\n          this._refetchDynamicMessages(this.state.chatWithPartyId, level)\n        )\n      } else {\n        const newParties = [...this.state.parties]\n        const party = newParties.find(party => party.id === message.senderId)\n\n        party.messages.push(message)\n        if (party.newMessage) {\n          party.newMessage += 1\n        } else {\n          party.newMessage = 1\n        }\n\n        this.setState({ parties: newParties })\n      }\n    })\n    this._getAllContact()\n  }\n\n  // componentWillUnmount () {\n  //   messageService.unlistenToMyNewMessages(this.props.currentUser.id)\n  // }\n\n  // componentDidUpdate() {\n  //   if (this.state.level === 1) {\n  //     this._scrollToLastMessage()\n  //   }\n  // }\n\n  _handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      this._sendToNewMessage()\n    }\n  }\n\n  _scrollToLastMessage = () => {\n    const mes = document.getElementsByClassName('message')\n    if (mes.length > 0) {\n      document.addEventListener('load', this.scrollLast())\n    }\n  }\n  scrollLast = () => {\n    const check = document.getElementsByClassName('chat')\n    if (check[0]) {\n      check[0].scrollTop = check[0].scrollHeight\n    }\n  }\n\n  _moreMessages = async () => {\n    const { router } = this.props\n    const { level, totalPage, chatWithPartyId } = this.state\n    this.setState({ level: level + 1, isMore: true })\n\n    if (level > totalPage) {\n      return\n    }\n\n    // Because the variable 'level' has not been updated\n    if (!router.query.partyId) {\n      await this._refetchDynamicMessages(chatWithPartyId, this.state.level)\n    } else {\n      await this._refetchDynamicMessages(router.query.partyId, this.state.leve1)\n    }\n\n    this.setState({ isMore: false })\n  }\n\n  _updateField = field => e => this.setState({ [field]: e.target.value })\n\n  _sendToNewMessage = async () => {\n    const { recipientParty, newMessage, file } = this.state\n\n    if (!recipientParty) {\n      return\n    }\n\n    if (!file) {\n      if (newMessage === '') {\n        return\n      }\n    }\n\n    this.setState({ isSending: true })\n\n    const senderParty = this.props.myParties.find(\n      party => party.transactionId === recipientParty.transactionId\n    )\n\n    if (file && file[0]) {\n      const message = await messageService.sendToFile({\n        file: file[0],\n        senderId: senderParty.id,\n        recipientId: recipientParty.id,\n        type: MessageType.ATTACHMENT\n      })\n      this._setStateAfterSend(message, recipientParty)\n    } else {\n      const message = await messageService.sendToNewMessage({\n        content: newMessage,\n        senderId: senderParty.id,\n        recipientId: recipientParty.id,\n        type: MessageType.TEXT\n      })\n      this._setStateAfterSend(message, recipientParty)\n      this._refetchDynamicMessages(senderParty.id, this.state.level)\n    }\n  }\n\n  _setStateAfterSend = (message, recipientParty) => {\n    const newParties = [...this.state.parties]\n    const party = newParties.find(party => party.id === recipientParty.id)\n    party.messages.push(message)\n\n    this.setState({\n      newMessage: '',\n      file: null,\n      messages: [...this.state.messages, message],\n      parties: newParties,\n      level: 1,\n      isSending: false\n    })\n    this._scrollToLastMessage()\n  }\n\n  _refetchDynamicMessages = async (partyId, level) => {\n    const recipientParty = this.state.parties.find(\n      party => party.id === partyId\n    )\n\n    if (!recipientParty) {\n      return\n    }\n    const senderParty = this.props.myParties.find(\n      party => party.transactionId === recipientParty.transactionId\n    )\n\n    const { otherParties } = await userService.getMyMessagingParties()\n\n    const { messages, totalPage } = await messageService.getMyMessagesWithUser(\n      senderParty.id,\n      partyId,\n      level\n    )\n    this.setState({\n      messages: messages,\n      recipientParty,\n      parties: otherParties,\n      totalPage\n    })\n    this._scrollToLastMessage()\n  }\n\n  _toggleModalError = () => {\n    this.setState({ file: null })\n  }\n\n  _renderModalNoticeError = () => {\n    const { file } = this.state\n    return (\n      <Modal\n        isOpen={file[0].size > MAX_FILE_SIZE}\n        toggle={this._toggleModalError}\n        id='modal-error'\n      >\n        <div className='modal-header header'>\n          <b>The file you have selected is too large</b>\n        </div>\n        <div className='modal-body'>\n          The file you have selected is too large. The maximum size is{' '}\n          {MEGABYTE}MB.\n        </div>\n        <div className='modal-footer'>\n          <button className='btn button' onClick={this._toggleModalError}>\n            OK\n          </button>\n        </div>\n      </Modal>\n    )\n  }\n\n  _renderContentMessage = message => {\n    if (message.type === MessageType.TEXT) {\n      return <div className='message last'>{message.content}</div>\n    }\n    return (\n      <div className='message last'>\n        <u>{message.content}</u>\n        <a\n          href={`${API_BASE_URL}/messages/${message.id}/download`}\n          target='_blank'\n        >\n          <i className='fas fa-arrow-circle-down ml-2' />\n        </a>\n      </div>\n    )\n  }\n\n  _renderContentMessageSend = message => {\n    const { messages, recipientParty } = this.state\n    const data = messages.filter(data => data.recipientId !== recipientParty.id)\n    if (data[data.length - 1].id === message.id) {\n      if (message.type === MessageType.TEXT) {\n        return (\n          <div className='d-flex align-items-center w-100'>\n            <div\n              className='rounded-circle mr-2 overflow-hidden'\n              style={{ width: '40px', height: '40px', flexShrink: '0' }}\n            >\n              <img src={this._getSrcAvt(message.senderId)} alt='' />\n            </div>\n            <div className='message last'>{message.content}</div>\n          </div>\n        )\n      }\n      return (\n        <div className='d-flex align-items-center w-100'>\n          <div\n            className='rounded-circle mr-2 overflow-hidden'\n            style={{ width: '40px', height: '40px', flexShrink: '0' }}\n          >\n            <img src={this._getSrcAvt(message.senderId)} alt='' />\n          </div>\n          <div className='message last'>\n            <u>{message.content}</u>\n            <a\n              href={`${API_BASE_URL}/messages/${message.id}/download`}\n              target='_blank'\n            >\n              <i className='fas fa-arrow-circle-down ml-2' />\n            </a>\n          </div>\n        </div>\n      )\n    } else {\n      if (message.type === MessageType.TEXT) {\n        return (\n          <div className='message last' style={{ marginLeft: '48px' }}>\n            {message.content}\n          </div>\n        )\n      }\n      return (\n        <div className='message last' style={{ marginLeft: '48px' }}>\n          <u>{message.content}</u>\n          <a\n            href={`${API_BASE_URL}/messages/${message.id}/download`}\n            target='_blank'\n          >\n            <i className='fas fa-arrow-circle-down ml-2' />\n          </a>\n        </div>\n      )\n    }\n  }\n\n  _getSrcAvt = senderId => {\n    const { parties } = this.state\n    if (parties.length > 0) {\n      const data = parties.find(parties => parties.id === senderId)\n      if (data) {\n        return data.user.avatar\n          ? data.user.avatar\n          : '/static/images/default-avatar.png'\n      }\n    }\n  }\n\n  _renderMessages = () => {\n    const { messages, recipientParty } = this.state\n    if (messages) {\n      return this.state.messages.map((message, index) => (\n        <div key={index}>\n          {message.recipientId === recipientParty.id ? (\n            <div className='mine messages mt-1'>\n              {this._renderContentMessage(message)}\n            </div>\n          ) : (\n            <div className='yours messages mt-1'>\n              {this._renderContentMessageSend(message)}\n            </div>\n          )}\n        </div>\n      ))\n    }\n  }\n\n  _renderListMessaging = () => {\n    const { parties } = this.state\n    const data = parties.filter(party => party.messages.length > 0)\n    if (parties.length > 0) {\n      return data.map((party, index) => (\n        <div className='message_child-scroll' key={index}>\n          {this._renderCardMessaging(party)}\n        </div>\n      ))\n    } else {\n      return (\n        <div\n          className='card shadow-sm rounded p-4 th-font-w-5'\n          style={{ fontSize: '20px' }}\n        >\n          You currently do not have parties\n        </div>\n      )\n    }\n  }\n\n  _renderListNews = () => {\n    const { listNews } = this.state\n    if (listNews && listNews.length > 0) {\n      return listNews.map((news, index) => (\n        <div className='message_child-scroll' key={index}>\n          {this._renderCardNews(news)}\n        </div>\n      ))\n    } else {\n      return (\n        <div\n          className='card shadow-sm rounded p-4 th-font-w-5'\n          style={{ fontSize: '20px' }}\n        >\n          There are currently no new news\n        </div>\n      )\n    }\n  }\n\n  _viewDataSearch = () => {\n    const { keyword, parties } = this.state\n    if (keyword !== '') {\n      return parties.map((party, index) => (\n        <div className='item-search' key={index}>\n          {getFullName(party)\n            .toLowerCase()\n            .indexOf(keyword.toLowerCase().trim()) !== -1 &&\n            this._renderSearch(party)}\n        </div>\n      ))\n    }\n  }\n\n  _renderSearch = party => {\n    return (\n      <Link route={`/message?partyId=${party.id}`}>\n        <div\n          className='search-big'\n          onClick={() => {\n            this.setState({ level: 1, search: false, keyword: '' })\n            this._refetchDynamicMessages(party.id, this.state.level)\n          }}\n        >\n          <div className='search-left'>\n            <img\n              className='rounded-circle mr-2'\n              src={\n                party.user\n                  ? party.user.avatar\n                    ? party.user.avatar\n                    : '/static/images/default-avatar.png'\n                  : '/static/images/default-avatar.png'\n              }\n            />\n          </div>\n          <div className='search-right'>\n            <h3>{getFullName(party)}</h3>\n            <span>{party.email}</span>\n          </div>\n        </div>\n      </Link>\n    )\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.router.query.partyId) {\n      if (nextProps.router.query.partyId !== this.state.chatWithPartyId) {\n        this.setState({ chatWithPartyId: nextProps.router.query.partyId })\n      }\n    }\n  }\n\n  _renderCardMessaging = party => {\n    if (party && party.messages && party.user) {\n      const { router } = this.props\n      const { recipientParty } = this.state\n      const isRouter = recipientParty\n        ? party.id === recipientParty.id\n        : party.id === router.query.partyId\n      const lastMessage = _.last(party.messages)\n      return (\n        <div\n          className='shadow-sm message__list'\n          style={{ cursor: 'pointer' }}\n          onClick={() => {\n            this.setState({ level: 1, keyword: '', search: false })\n            this._refetchDynamicMessages(party.id, this.state.level)\n          }}\n        >\n          <div className={isRouter ? 'message__item--action' : 'message__item'}>\n            <div className='message__item-text row mx-0'>\n              <img\n                className='rounded-circle col-2 px-0'\n                src={party.user.avatar || '/static/images/default-avatar.png'}\n              />\n              <div className='gr-text col-10 pr-0'>\n                <div className='row mx-0'>\n                  <h5\n                    className='col-6 px-0 overflow-hidden th-font-w-5'\n                    style={{ textOverflow: 'ellipsis' }}\n                  >\n                    {getFullName(party)}\n                  </h5>\n                  <span className='th-color-blue th-font-w-5 col-6 px-0 text-right'>\n                    {lastMessage ? (\n                      moment(lastMessage.createdAt).fromNow()\n                    ) : (\n                      <br />\n                    )}\n                  </span>\n                </div>\n                {lastMessage && (\n                  <p\n                    className={className('message__overflow th-font-w-5', {\n                      'text-black-50': isRouter\n                    })}\n                  >\n                    {lastMessage.content}\n                  </p>\n                )}\n              </div>\n            </div>\n\n            {!isRouter && party.newMessage && (\n              <div className='d-flex justify-content-end mt-5'>\n                <div className='m-3 row message__item-time__new'>\n                  <p className='message__item-new-message'>\n                    {party.newMessage}\n                  </p>\n                </div>\n              </div>\n            )}\n            {isRouter && delete party.newMessage}\n          </div>\n        </div>\n      )\n    }\n  }\n  _renderCardNews = news => {\n    const { currentNews } = this.state\n    let isCurrent = false\n    if (currentNews.id === news.id) {\n      isCurrent = true\n    }\n    return (\n      <div\n        className='shadow-sm message__list'\n        style={{ cursor: 'pointer' }}\n        onClick={() => {\n          this.setState({ currentNews: news })\n        }}\n      >\n        <div className={isCurrent ? 'message__item--action' : 'message__item'}>\n          <div className='message__item-text row mx-0'>\n            {this._viewImageNews(news.newsType)}\n            <div className='gr-text col-10 pr-0'>\n              <div className='gr-top row mx-0'>\n                <h5 className='col-6 px-0 overflow-hidden'>{news.title}</h5>\n                <p className='message__item-time text-right col-6 pr-0'>\n                  <span className='th-color-blue th-font-w-5'>\n                    {moment(news.publicDate || news.createdAt).fromNow()}\n                  </span>\n                </p>\n              </div>\n              <p\n                className={className('message__overflow th-font-w-5', {\n                  'text-black-50': isCurrent\n                })}\n                style={{ width: '100%' }}\n              >\n                {news.content}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  _viewImageNews = data => {\n    switch (data) {\n      case NewsType.E_COMMERCE:\n        return (\n          <div\n            className='rounded-circle d-flex align-items-center justify-content-center col-2 px-0'\n            style={{\n              width: '50px',\n              height: '50px',\n              minWidth: '50px',\n              maxWidth: '50px',\n              backgroundColor: '#2F80ED'\n            }}\n          >\n            <img\n              className=''\n              src='/static/images/New/type-eCom.png'\n              style={{ width: '50%', height: '50%', minHeight: '50%' }}\n            />\n          </div>\n        )\n      case NewsType.REAL_ESTATE:\n        return (\n          <div\n            className='rounded-circle d-flex align-items-center justify-content-center col-2 px-0'\n            style={{\n              width: '50px',\n              height: '50px',\n              minWidth: '50px',\n              maxWidth: '50px',\n              backgroundColor: '#446AEB'\n            }}\n          >\n            <img\n              className=''\n              src='/static/images/New/type-real.png'\n              style={{ width: '50%', height: '50%', minHeight: '50%' }}\n            />\n          </div>\n        )\n      case NewsType.OTHERS:\n        return (\n          <div\n            className='rounded-circle d-flex align-items-center justify-content-center col-2 px-0'\n            style={{\n              width: '50px',\n              height: '50px',\n              minWidth: '50px',\n              maxWidth: '50px',\n              backgroundColor: '#DFDFDF'\n            }}\n          >\n            <img\n              className=''\n              src='/static/images/New/type-order.png'\n              style={{ width: '50%', height: '50%', minHeight: '50%' }}\n            />\n          </div>\n        )\n      default:\n        break\n    }\n  }\n}\n\nexport default userOnly(MessagePage)\n"]},"metadata":{},"sourceType":"module"}