{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'next/router';\nimport { Router } from '../../common/routes';\nimport { isAdmin } from '../../common/models/User';\nimport authRedux, { selector } from '../redux/authRedux';\nimport { withI18next } from './withI18next';\nimport { authService } from '../services/index';\n\nvar guestOnly = function guestOnly(Content) {\n  var GuestWrapper =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(GuestWrapper, _React$Component);\n\n    function GuestWrapper() {\n      _classCallCheck(this, GuestWrapper);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GuestWrapper).apply(this, arguments));\n    }\n\n    _createClass(GuestWrapper, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Content, this.props);\n      }\n    }], [{\n      key: \"getInitialProps\",\n      value: function () {\n        var _getInitialProps = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(_ref) {\n          var req, res, pathname, query, asPath, store, isServer, user, _user, initialProps;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  req = _ref.req, res = _ref.res, pathname = _ref.pathname, query = _ref.query, asPath = _ref.asPath, store = _ref.store, isServer = _ref.isServer;\n\n                  if (!isServer) {\n                    _context.next = 10;\n                    break;\n                  }\n\n                  if (!req.signedCookies.access_token) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  authService.setAccessToken(req.signedCookies.access_token);\n                  _context.next = 6;\n                  return store.dispatch(authRedux.getLoginUser());\n\n                case 6:\n                  user = _context.sent;\n\n                  if (user) {\n                    res.redirect(isAdmin(user) ? '/admin' : '/my-transactions');\n                    res.end();\n                  }\n\n                case 8:\n                  _context.next = 12;\n                  break;\n\n                case 10:\n                  _user = selector.getLoginUser(store.getState());\n\n                  if (_user) {\n                    Router.pushRoute(isAdmin(_user) ? '/admin' : '/my-transactions');\n                  }\n\n                case 12:\n                  if (!Content.getInitialProps) {\n                    _context.next = 18;\n                    break;\n                  }\n\n                  _context.next = 15;\n                  return Content.getInitialProps({\n                    req: req,\n                    res: res,\n                    pathname: pathname,\n                    query: query,\n                    asPath: asPath,\n                    store: store,\n                    isServer: isServer\n                  });\n\n                case 15:\n                  _context.t0 = _context.sent;\n                  _context.next = 19;\n                  break;\n\n                case 18:\n                  _context.t0 = {};\n\n                case 19:\n                  initialProps = _context.t0;\n                  return _context.abrupt(\"return\", initialProps);\n\n                case 21:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function getInitialProps(_x) {\n          return _getInitialProps.apply(this, arguments);\n        }\n\n        return getInitialProps;\n      }()\n    }]);\n\n    return GuestWrapper;\n  }(React.Component);\n\n  return composedHoc(GuestWrapper);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: selector.getLoginUser(state)\n  };\n};\n\nvar composedHoc = compose(connect(mapStateToProps), withRouter, withI18next(['common']));\nexport default guestOnly;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/hocs/guestOnly.js"],"names":["React","connect","compose","withRouter","Router","isAdmin","authRedux","selector","withI18next","authService","guestOnly","Content","GuestWrapper","props","req","res","pathname","query","asPath","store","isServer","signedCookies","access_token","setAccessToken","dispatch","getLoginUser","user","redirect","end","getState","pushRoute","getInitialProps","initialProps","Component","composedHoc","mapStateToProps","state","currentUser"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { withRouter } from 'next/router'\nimport { Router } from '../../common/routes'\nimport { isAdmin } from '../../common/models/User'\nimport authRedux, { selector } from '../redux/authRedux'\nimport { withI18next } from './withI18next'\nimport { authService } from '../services/index'\n\nconst guestOnly = Content => {\n  class GuestWrapper extends React.Component {\n    static async getInitialProps ({\n      req,\n      res,\n      pathname,\n      query,\n      asPath,\n      store,\n      isServer\n    }) {\n      if (isServer) {\n        if (req.signedCookies.access_token) {\n          authService.setAccessToken(req.signedCookies.access_token)\n          const user = await store.dispatch(authRedux.getLoginUser())\n\n          if (user) {\n            res.redirect(isAdmin(user) ? '/admin' : '/my-transactions')\n            res.end()\n          }\n        }\n      } else {\n        const user = selector.getLoginUser(store.getState())\n        if (user) {\n          Router.pushRoute(isAdmin(user) ? '/admin' : '/my-transactions')\n        }\n      }\n      const initialProps = Content.getInitialProps\n        ? await Content.getInitialProps({\n          req,\n          res,\n          pathname,\n          query,\n          asPath,\n          store,\n          isServer\n        })\n        : {}\n\n      return initialProps\n    }\n\n    render () {\n      return <Content {...this.props} />\n    }\n  }\n\n  return composedHoc(GuestWrapper)\n}\n\nconst mapStateToProps = state => ({\n  currentUser: selector.getLoginUser(state)\n})\nconst composedHoc = compose(\n  connect(mapStateToProps),\n  withRouter,\n  withI18next(['common'])\n)\n\nexport default guestOnly\n"]},"metadata":{},"sourceType":"module"}