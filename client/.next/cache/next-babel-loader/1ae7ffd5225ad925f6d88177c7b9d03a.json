{"ast":null,"code":"import NProgress from 'nprogress';\nimport Router from 'next/router';\nvar delayMs = 300;\nvar timer = null; // when a route change start run a timeout to init the progress bar\n\nRouter.onRouteChangeStart = function () {\n  timer = setTimeout(NProgress.start, delayMs);\n}; // when completed finish the progress bar and clear the timeout\n\n\nRouter.onRouteChangeComplete = function () {\n  NProgress.done();\n  clearTimeout(timer);\n}; // when errored finish the progress bar and clear the timeout\n\n\nRouter.onRouteChangeError = function () {\n  NProgress.done();\n  clearTimeout(timer);\n};\n\nexport default (function () {\n  var _delayMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : delayMs;\n\n  var configOptions = arguments.length > 1 ? arguments[1] : undefined;\n  delayMs = _delayMs; // configure NProgress if configuration object is passed\n\n  if (configOptions) NProgress.configure(configOptions); // receive page and return it as is\n\n  return function (Page) {\n    return Page;\n  };\n});","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/hocs/nprogress.js"],"names":["NProgress","Router","delayMs","timer","onRouteChangeStart","setTimeout","start","onRouteChangeComplete","done","clearTimeout","onRouteChangeError","_delayMs","configOptions","configure","Page"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAIC,OAAO,GAAG,GAAd;AACA,IAAIC,KAAK,GAAG,IAAZ,C,CAEA;;AACAF,MAAM,CAACG,kBAAP,GAA4B,YAAM;AAChCD,EAAAA,KAAK,GAAGE,UAAU,CAACL,SAAS,CAACM,KAAX,EAAkBJ,OAAlB,CAAlB;AACD,CAFD,C,CAIA;;;AACAD,MAAM,CAACM,qBAAP,GAA+B,YAAM;AACnCP,EAAAA,SAAS,CAACQ,IAAV;AACAC,EAAAA,YAAY,CAACN,KAAD,CAAZ;AACD,CAHD,C,CAKA;;;AACAF,MAAM,CAACS,kBAAP,GAA4B,YAAM;AAChCV,EAAAA,SAAS,CAACQ,IAAV;AACAC,EAAAA,YAAY,CAACN,KAAD,CAAZ;AACD,CAHD;;AAKA,gBAAe,YAAuC;AAAA,MAAtCQ,QAAsC,uEAA3BT,OAA2B;;AAAA,MAAlBU,aAAkB;AACpDV,EAAAA,OAAO,GAAGS,QAAV,CADoD,CAEpD;;AACA,MAAIC,aAAJ,EAAmBZ,SAAS,CAACa,SAAV,CAAoBD,aAApB,EAHiC,CAIpD;;AACA,SAAO,UAAAE,IAAI;AAAA,WAAIA,IAAJ;AAAA,GAAX;AACD,CAND","sourcesContent":["import NProgress from 'nprogress'\nimport Router from 'next/router'\n\nlet delayMs = 300\nlet timer = null\n\n// when a route change start run a timeout to init the progress bar\nRouter.onRouteChangeStart = () => {\n  timer = setTimeout(NProgress.start, delayMs)\n}\n\n// when completed finish the progress bar and clear the timeout\nRouter.onRouteChangeComplete = () => {\n  NProgress.done()\n  clearTimeout(timer)\n}\n\n// when errored finish the progress bar and clear the timeout\nRouter.onRouteChangeError = () => {\n  NProgress.done()\n  clearTimeout(timer)\n}\n\nexport default (_delayMs = delayMs, configOptions) => {\n  delayMs = _delayMs\n  // configure NProgress if configuration object is passed\n  if (configOptions) NProgress.configure(configOptions)\n  // receive page and return it as is\n  return Page => Page\n}\n"]},"metadata":{},"sourceType":"module"}