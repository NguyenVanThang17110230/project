{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar CommissionService =\n/*#__PURE__*/\nfunction () {\n  function CommissionService(options) {\n    _classCallCheck(this, CommissionService);\n\n    this.transactionCommissionGateway = options.transactionCommissionGateway;\n    this.userCommissionGateway = options.userCommissionGateway;\n  }\n\n  _createClass(CommissionService, [{\n    key: \"createTransactionCommission\",\n    value: function () {\n      var _createTransactionCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.transactionCommissionGateway.create(data));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createTransactionCommission(_x) {\n        return _createTransactionCommission.apply(this, arguments);\n      }\n\n      return createTransactionCommission;\n    }()\n  }, {\n    key: \"updateTransactionCommission\",\n    value: function () {\n      var _updateTransactionCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id, data) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.transactionCommissionGateway.updateById(id, data));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateTransactionCommission(_x2, _x3) {\n        return _updateTransactionCommission.apply(this, arguments);\n      }\n\n      return updateTransactionCommission;\n    }()\n  }, {\n    key: \"updateUserCommissionByTransactionIdUserId\",\n    value: function () {\n      var _updateUserCommissionByTransactionIdUserId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(transactionId, userId, data) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.userCommissionGateway.updateByTransactionIdUserId(transactionId, userId, data));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateUserCommissionByTransactionIdUserId(_x4, _x5, _x6) {\n        return _updateUserCommissionByTransactionIdUserId.apply(this, arguments);\n      }\n\n      return updateUserCommissionByTransactionIdUserId;\n    }()\n  }, {\n    key: \"deleteUserCommission\",\n    value: function () {\n      var _deleteUserCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.userCommissionGateway.deleteById(id);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function deleteUserCommission(_x7) {\n        return _deleteUserCommission.apply(this, arguments);\n      }\n\n      return deleteUserCommission;\n    }()\n  }, {\n    key: \"deleteTransactionCommission\",\n    value: function () {\n      var _deleteTransactionCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.transactionCommissionGateway.deleteById(id);\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deleteTransactionCommission(_x8) {\n        return _deleteTransactionCommission.apply(this, arguments);\n      }\n\n      return deleteTransactionCommission;\n    }()\n  }, {\n    key: \"getTransactionByCoordinator\",\n    value: function () {\n      var _getTransactionByCoordinator = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(coordinatorId) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.transactionCommissionGateway.findByCoordinator(coordinatorId));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getTransactionByCoordinator(_x9) {\n        return _getTransactionByCoordinator.apply(this, arguments);\n      }\n\n      return getTransactionByCoordinator;\n    }()\n  }, {\n    key: \"findByTransactionId\",\n    value: function () {\n      var _findByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(transactionId) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this.transactionCommissionGateway.findByTransactionId(transactionId));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function findByTransactionId(_x10) {\n        return _findByTransactionId.apply(this, arguments);\n      }\n\n      return findByTransactionId;\n    }()\n  }, {\n    key: \"createUserCommission\",\n    value: function () {\n      var _createUserCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(data) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", this.userCommissionGateway.create(data));\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function createUserCommission(_x11) {\n        return _createUserCommission.apply(this, arguments);\n      }\n\n      return createUserCommission;\n    }()\n  }, {\n    key: \"countCommission\",\n    value: function () {\n      var _countCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(_ref) {\n        var userId, type, isForThisYear;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                userId = _ref.userId, type = _ref.type, isForThisYear = _ref.isForThisYear;\n                return _context9.abrupt(\"return\", this.userCommissionGateway.countCommission({\n                  userId: userId,\n                  type: type,\n                  isForThisYear: isForThisYear\n                }));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function countCommission(_x12) {\n        return _countCommission.apply(this, arguments);\n      }\n\n      return countCommission;\n    }()\n  }, {\n    key: \"countCommissionPrevYear\",\n    value: function () {\n      var _countCommissionPrevYear = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(_ref2) {\n        var userId, type;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                userId = _ref2.userId, type = _ref2.type;\n                return _context10.abrupt(\"return\", this.userCommissionGateway.countCommissionPrevYear({\n                  userId: userId,\n                  type: type\n                }));\n\n              case 2:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function countCommissionPrevYear(_x13) {\n        return _countCommissionPrevYear.apply(this, arguments);\n      }\n\n      return countCommissionPrevYear;\n    }()\n  }, {\n    key: \"getUserCommissionThisYear\",\n    value: function () {\n      var _getUserCommissionThisYear = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(userId) {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", this.userCommissionGateway.getUserCommissionThisYear(userId));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getUserCommissionThisYear(_x14) {\n        return _getUserCommissionThisYear.apply(this, arguments);\n      }\n\n      return getUserCommissionThisYear;\n    }()\n  }, {\n    key: \"getCommissionByTransaction\",\n    value: function () {\n      var _getCommissionByTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(transactionId) {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt(\"return\", this.userCommissionGateway.getCommissionByTransaction(transactionId));\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getCommissionByTransaction(_x15) {\n        return _getCommissionByTransaction.apply(this, arguments);\n      }\n\n      return getCommissionByTransaction;\n    }()\n  }, {\n    key: \"getAllCommission\",\n    value: function () {\n      var _getAllCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                return _context13.abrupt(\"return\", this.userCommissionGateway.getAllCommission());\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getAllCommission() {\n        return _getAllCommission.apply(this, arguments);\n      }\n\n      return getAllCommission;\n    }()\n  }, {\n    key: \"getAllTransactionCommission\",\n    value: function () {\n      var _getAllTransactionCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                return _context14.abrupt(\"return\", this.transactionCommissionGateway.getAllTransactionCommission());\n\n              case 1:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function getAllTransactionCommission() {\n        return _getAllTransactionCommission.apply(this, arguments);\n      }\n\n      return getAllTransactionCommission;\n    }()\n  }, {\n    key: \"getAllAgentCommission\",\n    value: function () {\n      var _getAllAgentCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15() {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                return _context15.abrupt(\"return\", this.userCommissionGateway.getAllAgentCommission());\n\n              case 1:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function getAllAgentCommission() {\n        return _getAllAgentCommission.apply(this, arguments);\n      }\n\n      return getAllAgentCommission;\n    }()\n  }]);\n\n  return CommissionService;\n}();\n\nexport { CommissionService as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/services/CommissionService.js"],"names":["CommissionService","options","transactionCommissionGateway","userCommissionGateway","data","create","id","updateById","transactionId","userId","updateByTransactionIdUserId","deleteById","coordinatorId","findByCoordinator","findByTransactionId","type","isForThisYear","countCommission","countCommissionPrevYear","getUserCommissionThisYear","getCommissionByTransaction","getAllCommission","getAllTransactionCommission","getAllAgentCommission"],"mappings":";;;;;IAAqBA,iB;;;AACnB,6BAAaC,OAAb,EAAsB;AAAA;;AACpB,SAAKC,4BAAL,GAAoCD,OAAO,CAACC,4BAA5C;AACA,SAAKC,qBAAL,GAA6BF,OAAO,CAACE,qBAArC;AACD;;;;;;;gDAEkCC,I;;;;;iDAC1B,KAAKF,4BAAL,CAAkCG,MAAlC,CAAyCD,IAAzC,C;;;;;;;;;;;;;;;;;;;;;iDAG0BE,E,EAAIF,I;;;;;kDAC9B,KAAKF,4BAAL,CAAkCK,UAAlC,CAA6CD,EAA7C,EAAiDF,IAAjD,C;;;;;;;;;;;;;;;;;;;;;iDAIPI,a,EACAC,M,EACAL,I;;;;;kDAEO,KAAKD,qBAAL,CAA2BO,2BAA3B,CACLF,aADK,EAELC,MAFK,EAGLL,IAHK,C;;;;;;;;;;;;;;;;;;;;;iDAOmBE,E;;;;;;uBACpB,KAAKH,qBAAL,CAA2BQ,UAA3B,CAAsCL,EAAtC,C;;;;;;;;;;;;;;;;;;;;;iDAG2BA,E;;;;;;uBAC3B,KAAKJ,4BAAL,CAAkCS,UAAlC,CAA6CL,EAA7C,C;;;;;;;;;;;;;;;;;;;;;iDAG2BM,a;;;;;kDAC1B,KAAKV,4BAAL,CAAkCW,iBAAlC,CAAoDD,aAApD,C;;;;;;;;;;;;;;;;;;;;;iDAGkBJ,a;;;;;kDAClB,KAAKN,4BAAL,CAAkCY,mBAAlC,CAAsDN,aAAtD,C;;;;;;;;;;;;;;;;;;;;;iDAGmBJ,I;;;;;kDACnB,KAAKD,qBAAL,CAA2BE,MAA3B,CAAkCD,IAAlC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGgBK,gBAAAA,M,QAAAA,M,EAAQM,I,QAAAA,I,EAAMC,a,QAAAA,a;kDAC9B,KAAKb,qBAAL,CAA2Bc,eAA3B,CAA2C;AAChDR,kBAAAA,MAAM,EAANA,MADgD;AAEhDM,kBAAAA,IAAI,EAAJA,IAFgD;AAGhDC,kBAAAA,aAAa,EAAbA;AAHgD,iBAA3C,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOwBP,gBAAAA,M,SAAAA,M,EAAQM,I,SAAAA,I;mDAChC,KAAKZ,qBAAL,CAA2Be,uBAA3B,CAAmD;AACxDT,kBAAAA,MAAM,EAANA,MADwD;AAExDM,kBAAAA,IAAI,EAAJA;AAFwD,iBAAnD,C;;;;;;;;;;;;;;;;;;;;;kDAMwBN,M;;;;;mDACxB,KAAKN,qBAAL,CAA2BgB,yBAA3B,CAAqDV,MAArD,C;;;;;;;;;;;;;;;;;;;;;kDAGyBD,a;;;;;mDACzB,KAAKL,qBAAL,CAA2BiB,0BAA3B,CAAsDZ,aAAtD,C;;;;;;;;;;;;;;;;;;;;;;;;;;mDAIA,KAAKL,qBAAL,CAA2BkB,gBAA3B,E;;;;;;;;;;;;;;;;;;;;;;;;;;mDAIA,KAAKnB,4BAAL,CAAkCoB,2BAAlC,E;;;;;;;;;;;;;;;;;;;;;;;;;;mDAIA,KAAKnB,qBAAL,CAA2BoB,qBAA3B,E;;;;;;;;;;;;;;;;;;;;;SA9EUvB,iB","sourcesContent":["export default class CommissionService {\n  constructor (options) {\n    this.transactionCommissionGateway = options.transactionCommissionGateway\n    this.userCommissionGateway = options.userCommissionGateway\n  }\n\n  async createTransactionCommission (data) {\n    return this.transactionCommissionGateway.create(data)\n  }\n\n  async updateTransactionCommission (id, data) {\n    return this.transactionCommissionGateway.updateById(id, data)\n  }\n\n  async updateUserCommissionByTransactionIdUserId (\n    transactionId,\n    userId,\n    data\n  ) {\n    return this.userCommissionGateway.updateByTransactionIdUserId(\n      transactionId,\n      userId,\n      data\n    )\n  }\n\n  async deleteUserCommission (id) {\n    await this.userCommissionGateway.deleteById(id)\n  }\n\n  async deleteTransactionCommission (id) {\n    await this.transactionCommissionGateway.deleteById(id)\n  }\n\n  async getTransactionByCoordinator (coordinatorId) {\n    return this.transactionCommissionGateway.findByCoordinator(coordinatorId)\n  }\n\n  async findByTransactionId (transactionId) {\n    return this.transactionCommissionGateway.findByTransactionId(transactionId)\n  }\n\n  async createUserCommission (data) {\n    return this.userCommissionGateway.create(data)\n  }\n\n  async countCommission ({ userId, type, isForThisYear }) {\n    return this.userCommissionGateway.countCommission({\n      userId,\n      type,\n      isForThisYear\n    })\n  }\n\n  async countCommissionPrevYear ({ userId, type }) {\n    return this.userCommissionGateway.countCommissionPrevYear({\n      userId,\n      type\n    })\n  }\n\n  async getUserCommissionThisYear (userId) {\n    return this.userCommissionGateway.getUserCommissionThisYear(userId)\n  }\n\n  async getCommissionByTransaction (transactionId) {\n    return this.userCommissionGateway.getCommissionByTransaction(transactionId)\n  }\n\n  async getAllCommission () {\n    return this.userCommissionGateway.getAllCommission()\n  }\n\n  async getAllTransactionCommission () {\n    return this.transactionCommissionGateway.getAllTransactionCommission()\n  }\n\n  async getAllAgentCommission () {\n    return this.userCommissionGateway.getAllAgentCommission()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}