{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar InvitationGateway =\n/*#__PURE__*/\nfunction () {\n  function InvitationGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, InvitationGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(InvitationGateway, [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restConnector.post(\"/invitations\", data);\n\n              case 2:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"findById\",\n    value: function () {\n      var _findById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.restConnector.get(\"/invitations?filter={\\\"where\\\":{\\n        \\\"id\\\": \\\"\".concat(id, \"\\\",\\\"joined\\\": \", false, \"}}\"));\n\n              case 3:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data[0]);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", null);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function findById(_x2) {\n        return _findById.apply(this, arguments);\n      }\n\n      return findById;\n    }()\n  }, {\n    key: \"findByEmail\",\n    value: function () {\n      var _findByEmail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(email) {\n        var filter, resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                filter = _JSON$stringify({\n                  where: {\n                    email: encodeURIComponent(email)\n                  }\n                });\n                _context3.next = 4;\n                return this.restConnector.get(\"/invitations?filter=\".concat(filter));\n\n              case 4:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data[0]);\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\", null);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n\n      function findByEmail(_x3) {\n        return _findByEmail.apply(this, arguments);\n      }\n\n      return findByEmail;\n    }()\n  }, {\n    key: \"acceptInvatation\",\n    value: function () {\n      var _acceptInvatation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.restConnector.patch('/invitations', {\n                  id: id,\n                  joined: true\n                });\n\n              case 3:\n                resp = _context4.sent;\n                return _context4.abrupt(\"return\", resp.data);\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                return _context4.abrupt(\"return\", null);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n\n      function acceptInvatation(_x4) {\n        return _acceptInvatation.apply(this, arguments);\n      }\n\n      return acceptInvatation;\n    }()\n  }, {\n    key: \"getReferredList\",\n    value: function () {\n      var _getReferredList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(referrerId) {\n        var filter, resp;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                filter = _JSON$stringify({\n                  where: {\n                    referrerId: referrerId,\n                    joined: 'true'\n                  },\n                  include: 'user'\n                });\n                _context5.next = 4;\n                return this.restConnector.get(\"/invitations?filter=\".concat(filter));\n\n              case 4:\n                resp = _context5.sent;\n                return _context5.abrupt(\"return\", resp.data);\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](0);\n                return _context5.abrupt(\"return\", null);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 8]]);\n      }));\n\n      function getReferredList(_x5) {\n        return _getReferredList.apply(this, arguments);\n      }\n\n      return getReferredList;\n    }()\n  }, {\n    key: \"deleteExistedInvitation\",\n    value: function () {\n      var _deleteExistedInvitation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.restConnector[\"delete\"](\"/invitations/\".concat(id));\n\n              case 2:\n                resp = _context6.sent;\n                return _context6.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function deleteExistedInvitation(_x6) {\n        return _deleteExistedInvitation.apply(this, arguments);\n      }\n\n      return deleteExistedInvitation;\n    }()\n  }]);\n\n  return InvitationGateway;\n}();\n\nexport { InvitationGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/InvitationGateway.js"],"names":["InvitationGateway","restConnector","data","post","resp","id","get","email","filter","where","encodeURIComponent","patch","joined","referrerId","include"],"mappings":";;;;;;IAAqBA,iB;;;AACnB,mCAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD;;;;;;;gDAEaC,I;;;;;;;uBACO,KAAKD,aAAL,CAAmBE,IAAnB,iBAAwCD,IAAxC,C;;;AAAbE,gBAAAA,I;iDACCA,IAAI,CAACF,I;;;;;;;;;;;;;;;;;;;;;iDAGEG,E;;;;;;;;uBAEO,KAAKJ,aAAL,CAAmBK,GAAnB,+DACRD,EADQ,qBACS,KADT,Q;;;AAAbD,gBAAAA,I;kDAECA,IAAI,CAACF,IAAL,CAAU,CAAV,C;;;;;kDAEA,I;;;;;;;;;;;;;;;;;;;;;iDAIQK,K;;;;;;;AAETC,gBAAAA,M,GAAS,gBAAe;AAC5BC,kBAAAA,KAAK,EAAE;AAAEF,oBAAAA,KAAK,EAAEG,kBAAkB,CAACH,KAAD;AAA3B;AADqB,iBAAf,C;;uBAGI,KAAKN,aAAL,CAAmBK,GAAnB,+BAA8CE,MAA9C,E;;;AAAbJ,gBAAAA,I;kDACCA,IAAI,CAACF,IAAL,CAAU,CAAV,C;;;;;kDAEA,I;;;;;;;;;;;;;;;;;;;;;iDAIaG,E;;;;;;;;uBAED,KAAKJ,aAAL,CAAmBU,KAAnB,CAAyB,cAAzB,EAAyC;AAC1DN,kBAAAA,EAAE,EAAFA,EAD0D;AAE1DO,kBAAAA,MAAM,EAAE;AAFkD,iBAAzC,C;;;AAAbR,gBAAAA,I;kDAICA,IAAI,CAACF,I;;;;;kDAEL,I;;;;;;;;;;;;;;;;;;;;;iDAIYW,U;;;;;;;AAEbL,gBAAAA,M,GAAS,gBAAe;AAC5BC,kBAAAA,KAAK,EAAE;AAAEI,oBAAAA,UAAU,EAAVA,UAAF;AAAcD,oBAAAA,MAAM,EAAE;AAAtB,mBADqB;AAE5BE,kBAAAA,OAAO,EAAE;AAFmB,iBAAf,C;;uBAII,KAAKb,aAAL,CAAmBK,GAAnB,+BAA8CE,MAA9C,E;;;AAAbJ,gBAAAA,I;kDACCA,IAAI,CAACF,I;;;;;kDAEL,I;;;;;;;;;;;;;;;;;;;;;iDAIoBG,E;;;;;;;uBACV,KAAKJ,aAAL,kCAA0CI,EAA1C,E;;;AAAbD,gBAAAA,I;kDACCA,IAAI,CAACF,I;;;;;;;;;;;;;;;;;;;;;SA3DKF,iB","sourcesContent":["export default class InvitationGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async create (data: { referrerId: string, email: string }) {\n    const resp = await this.restConnector.post(`/invitations`, data)\n    return resp.data\n  }\n\n  async findById (id) {\n    try {\n      const resp = await this.restConnector.get(`/invitations?filter={\"where\":{\n        \"id\": \"${id}\",\"joined\": ${false}}}`)\n      return resp.data[0]\n    } catch (e) {\n      return null\n    }\n  }\n\n  async findByEmail (email) {\n    try {\n      const filter = JSON.stringify({\n        where: { email: encodeURIComponent(email) }\n      })\n      const resp = await this.restConnector.get(`/invitations?filter=${filter}`)\n      return resp.data[0]\n    } catch (e) {\n      return null\n    }\n  }\n\n  async acceptInvatation (id) {\n    try {\n      const resp = await this.restConnector.patch('/invitations', {\n        id,\n        joined: true\n      })\n      return resp.data\n    } catch (e) {\n      return null\n    }\n  }\n\n  async getReferredList (referrerId) {\n    try {\n      const filter = JSON.stringify({\n        where: { referrerId, joined: 'true' },\n        include: 'user'\n      })\n      const resp = await this.restConnector.get(`/invitations?filter=${filter}`)\n      return resp.data\n    } catch (e) {\n      return null\n    }\n  }\n\n  async deleteExistedInvitation (id) {\n    const resp = await this.restConnector.delete(`/invitations/${id}`)\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}