{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/objectSpread\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport { isEmpty } from 'lodash';\nimport { TransactionRole } from '../../common/models/Transaction';\nimport { getFullName } from '../../common/view-models/TransactionParty';\n\n// export default class UserService {\n//   constructor(options :{\n//     userGateway : UserGateway\n//   })\n// }\nvar TransactionService =\n/*#__PURE__*/\nfunction () {\n  function TransactionService(options) {\n    _classCallCheck(this, TransactionService);\n\n    var transactionGateway = options.transactionGateway,\n        transactionActivityGateway = options.transactionActivityGateway,\n        transactionInvitationGateway = options.transactionInvitationGateway,\n        transactionPartyGateway = options.transactionPartyGateway,\n        documentGateway = options.documentGateway,\n        documentActionGateway = options.documentActionGateway,\n        transactionDetailGateway = options.transactionDetailGateway,\n        userGateway = options.userGateway;\n    this.transactionGateway = transactionGateway;\n    this.transactionDetailGateway = transactionDetailGateway;\n    this.transactionActivityGateway = transactionActivityGateway;\n    this.transactionInvitationGateway = transactionInvitationGateway;\n    this.transactionPartyGateway = transactionPartyGateway;\n    this.documentGateway = documentGateway;\n    this.documentActionGateway = documentActionGateway;\n    this.userGateway = userGateway;\n  }\n\n  _createClass(TransactionService, [{\n    key: \"createTransaction\",\n    value: function () {\n      var _createTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var ownerId, address, imageURL, url, description, closingDate, transactionType, transactionTypeStatus, status;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                ownerId = _ref.ownerId, address = _ref.address, imageURL = _ref.imageURL, url = _ref.url, description = _ref.description, closingDate = _ref.closingDate, transactionType = _ref.transactionType, transactionTypeStatus = _ref.transactionTypeStatus, status = _ref.status;\n                return _context.abrupt(\"return\", this.transactionGateway.create({\n                  ownerId: ownerId,\n                  address: address,\n                  imageURL: imageURL,\n                  url: url,\n                  description: description,\n                  closingDate: closingDate,\n                  transactionType: transactionType,\n                  transactionTypeStatus: transactionTypeStatus,\n                  status: status\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createTransaction(_x) {\n        return _createTransaction.apply(this, arguments);\n      }\n\n      return createTransaction;\n    }()\n  }, {\n    key: \"updateTransactionById\",\n    value: function () {\n      var _updateTransactionById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id, _ref2) {\n        var address, transactionType, transactionTypeStatus, url, description, closingDate, status;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                address = _ref2.address, transactionType = _ref2.transactionType, transactionTypeStatus = _ref2.transactionTypeStatus, url = _ref2.url, description = _ref2.description, closingDate = _ref2.closingDate, status = _ref2.status;\n                return _context2.abrupt(\"return\", this.transactionGateway.updateById(id, {\n                  address: address,\n                  transactionType: transactionType,\n                  transactionTypeStatus: transactionTypeStatus,\n                  url: url,\n                  description: description,\n                  closingDate: closingDate,\n                  status: status\n                }));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateTransactionById(_x2, _x3) {\n        return _updateTransactionById.apply(this, arguments);\n      }\n\n      return updateTransactionById;\n    }()\n  }, {\n    key: \"listenToMyDocumentAction\",\n    value: function listenToMyDocumentAction(userId, callback) {\n      this.documentActionGateway.listenToMyDocumentAction(userId, callback);\n    }\n  }, {\n    key: \"listenToMyDocumentActionAdd\",\n    value: function listenToMyDocumentActionAdd(userId, callback) {\n      this.documentActionGateway.listenToMyDocumentActionAdd(userId, callback);\n    }\n  }, {\n    key: \"createMainImage\",\n    value: function () {\n      var _createMainImage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(transactionId, file) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.transactionGateway.createMainImageById(transactionId, file));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function createMainImage(_x4, _x5) {\n        return _createMainImage.apply(this, arguments);\n      }\n\n      return createMainImage;\n    }()\n  }, {\n    key: \"deleteImage\",\n    value: function () {\n      var _deleteImage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(transactionId) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.transactionGateway.deleteImageById(transactionId));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function deleteImage(_x6) {\n        return _deleteImage.apply(this, arguments);\n      }\n\n      return deleteImage;\n    }()\n  }, {\n    key: \"createTransactionDetail\",\n    value: function () {\n      var _createTransactionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(detailId, _ref3) {\n        var yearBuilt, bedrooms, squareFootage, schoolDistrict, type, bathrooms, lotSize, country, streetNumber, streetName, unitNumber, city, state, postalCode, county, mlsNumber, taxId;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                yearBuilt = _ref3.yearBuilt, bedrooms = _ref3.bedrooms, squareFootage = _ref3.squareFootage, schoolDistrict = _ref3.schoolDistrict, type = _ref3.type, bathrooms = _ref3.bathrooms, lotSize = _ref3.lotSize, country = _ref3.country, streetNumber = _ref3.streetNumber, streetName = _ref3.streetName, unitNumber = _ref3.unitNumber, city = _ref3.city, state = _ref3.state, postalCode = _ref3.postalCode, county = _ref3.county, mlsNumber = _ref3.mlsNumber, taxId = _ref3.taxId;\n                return _context5.abrupt(\"return\", this.transactionDetailGateway.updateDetail(detailId, {\n                  yearBuilt: yearBuilt,\n                  bedrooms: bedrooms,\n                  squareFootage: squareFootage,\n                  schoolDistrict: schoolDistrict,\n                  type: type,\n                  bathrooms: bathrooms,\n                  lotSize: lotSize,\n                  country: country,\n                  streetNumber: streetNumber,\n                  streetName: streetName,\n                  unitNumber: unitNumber,\n                  city: city,\n                  state: state,\n                  postalCode: postalCode,\n                  county: county,\n                  mlsNumber: mlsNumber,\n                  taxId: taxId\n                }));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function createTransactionDetail(_x7, _x8) {\n        return _createTransactionDetail.apply(this, arguments);\n      }\n\n      return createTransactionDetail;\n    }()\n  }, {\n    key: \"createNewTransactionDetail\",\n    value: function () {\n      var _createNewTransactionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(_ref4) {\n        var yearBuilt, bedrooms, squareFootage, schoolDistrict, type, bathrooms, lotSize, country, streetNumber, streetName, unitNumber, city, state, postalCode, county, mlsNumber, taxId;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                yearBuilt = _ref4.yearBuilt, bedrooms = _ref4.bedrooms, squareFootage = _ref4.squareFootage, schoolDistrict = _ref4.schoolDistrict, type = _ref4.type, bathrooms = _ref4.bathrooms, lotSize = _ref4.lotSize, country = _ref4.country, streetNumber = _ref4.streetNumber, streetName = _ref4.streetName, unitNumber = _ref4.unitNumber, city = _ref4.city, state = _ref4.state, postalCode = _ref4.postalCode, county = _ref4.county, mlsNumber = _ref4.mlsNumber, taxId = _ref4.taxId;\n                return _context6.abrupt(\"return\", this.transactionDetailGateway.createNewTransactionDetail({\n                  yearBuilt: yearBuilt,\n                  bedrooms: bedrooms,\n                  squareFootage: squareFootage,\n                  schoolDistrict: schoolDistrict,\n                  type: type,\n                  bathrooms: bathrooms,\n                  lotSize: lotSize,\n                  country: country,\n                  streetNumber: streetNumber,\n                  streetName: streetName,\n                  unitNumber: unitNumber,\n                  city: city,\n                  state: state,\n                  postalCode: postalCode,\n                  county: county,\n                  mlsNumber: mlsNumber,\n                  taxId: taxId\n                }));\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function createNewTransactionDetail(_x9) {\n        return _createNewTransactionDetail.apply(this, arguments);\n      }\n\n      return createNewTransactionDetail;\n    }()\n  }, {\n    key: \"getTransactionsForUser\",\n    value: function () {\n      var _getTransactionsForUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this.transactionGateway.findByOwnerId({\n                  include: [{\n                    parties: [{\n                      documents: 'actions'\n                    }, 'assignedActions', 'user']\n                  }, 'invitations']\n                }));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getTransactionsForUser() {\n        return _getTransactionsForUser.apply(this, arguments);\n      }\n\n      return getTransactionsForUser;\n    }()\n  }, {\n    key: \"getTransactionsDetailByTransactionId\",\n    value: function () {\n      var _getTransactionsDetailByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(id) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", this.transactionGateway.findByTransactionId(id));\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getTransactionsDetailByTransactionId(_x10) {\n        return _getTransactionsDetailByTransactionId.apply(this, arguments);\n      }\n\n      return getTransactionsDetailByTransactionId;\n    }()\n  }, {\n    key: \"getMemberPartiesByTransaction\",\n    value: function () {\n      var _getMemberPartiesByTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(id) {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", this.transactionPartyGateway.getByTransactionId(id, {\n                  include: ['user', {\n                    documents: 'actions'\n                  }]\n                }));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getMemberPartiesByTransaction(_x11) {\n        return _getMemberPartiesByTransaction.apply(this, arguments);\n      }\n\n      return getMemberPartiesByTransaction;\n    }()\n  }, {\n    key: \"getDetailedTransactionAndActivityById\",\n    value: function () {\n      var _getDetailedTransactionAndActivityById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(id) {\n        var transaction, activitiesFull, detail;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.transactionGateway.findById(id, {\n                  include: [{\n                    parties: [{\n                      documents: 'actions'\n                    }, 'assignedActions', 'user']\n                  }, 'invitations']\n                });\n\n              case 2:\n                transaction = _context10.sent;\n                _context10.next = 5;\n                return this.transactionActivityGateway.getByTransactionId(id);\n\n              case 5:\n                activitiesFull = _context10.sent;\n                _context10.next = 8;\n                return this.transactionDetailGateway.getById(id);\n\n              case 8:\n                detail = _context10.sent;\n                return _context10.abrupt(\"return\", {\n                  transaction: transaction,\n                  activitiesFull: activitiesFull,\n                  detail: detail\n                });\n\n              case 10:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getDetailedTransactionAndActivityById(_x12) {\n        return _getDetailedTransactionAndActivityById.apply(this, arguments);\n      }\n\n      return getDetailedTransactionAndActivityById;\n    }()\n  }, {\n    key: \"getTransactionVendor\",\n    value: function () {\n      var _getTransactionVendor = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(id) {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                return _context11.abrupt(\"return\", this.transactionGateway.getTransactionVendor(id));\n\n              case 1:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getTransactionVendor(_x13) {\n        return _getTransactionVendor.apply(this, arguments);\n      }\n\n      return getTransactionVendor;\n    }()\n  }, {\n    key: \"getAllTransactionVer2\",\n    value: function () {\n      var _getAllTransactionVer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(userId) {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                return _context12.abrupt(\"return\", this.transactionGateway.findById(userId, {\n                  include: [{\n                    parties: [{\n                      documents: 'actions'\n                    }, 'assignedActions', 'user']\n                  }, 'invitations']\n                }));\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getAllTransactionVer2(_x14) {\n        return _getAllTransactionVer.apply(this, arguments);\n      }\n\n      return getAllTransactionVer2;\n    }()\n  }, {\n    key: \"getMyTransactionsAndActivitiesForUser\",\n    value: function () {\n      var _getMyTransactionsAndActivitiesForUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(userId) {\n        var transactions, activities;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.transactionGateway.getMyTransactions();\n\n              case 2:\n                transactions = _context13.sent;\n                _context13.next = 5;\n                return this.transactionActivityGateway.getByActorId(userId);\n\n              case 5:\n                activities = _context13.sent;\n                return _context13.abrupt(\"return\", {\n                  transactions: transactions,\n                  activities: activities\n                });\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getMyTransactionsAndActivitiesForUser(_x15) {\n        return _getMyTransactionsAndActivitiesForUser.apply(this, arguments);\n      }\n\n      return getMyTransactionsAndActivitiesForUser;\n    }()\n  }, {\n    key: \"inviteParty\",\n    value: function () {\n      var _inviteParty = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(_ref5) {\n        var transactionId, role, firstName, lastName, email, phoneNumber, access;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                transactionId = _ref5.transactionId, role = _ref5.role, firstName = _ref5.firstName, lastName = _ref5.lastName, email = _ref5.email, phoneNumber = _ref5.phoneNumber, access = _ref5.access;\n                return _context14.abrupt(\"return\", this.transactionInvitationGateway.create({\n                  transactionId: transactionId,\n                  role: role,\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phoneNumber: phoneNumber,\n                  access: access\n                }));\n\n              case 2:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function inviteParty(_x16) {\n        return _inviteParty.apply(this, arguments);\n      }\n\n      return inviteParty;\n    }()\n  }, {\n    key: \"getInvitationById\",\n    value: function () {\n      var _getInvitationById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(id) {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                return _context15.abrupt(\"return\", this.transactionInvitationGateway.findById(id));\n\n              case 1:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function getInvitationById(_x17) {\n        return _getInvitationById.apply(this, arguments);\n      }\n\n      return getInvitationById;\n    }()\n  }, {\n    key: \"getDetailedTransactionInvitationById\",\n    value: function () {\n      var _getDetailedTransactionInvitationById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16(id) {\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                return _context16.abrupt(\"return\", this.transactionInvitationGateway.findById(id, {\n                  include: 'transaction'\n                }));\n\n              case 1:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function getDetailedTransactionInvitationById(_x18) {\n        return _getDetailedTransactionInvitationById.apply(this, arguments);\n      }\n\n      return getDetailedTransactionInvitationById;\n    }()\n  }, {\n    key: \"updateTransactionPartyInfo\",\n    value: function () {\n      var _updateTransactionPartyInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee17(_ref6, _ref7) {\n        var userId, transactionId, firstName, lastName, email, phoneNumber, company, licenseNumber, transactionParty;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                userId = _ref6.userId, transactionId = _ref6.transactionId;\n                firstName = _ref7.firstName, lastName = _ref7.lastName, email = _ref7.email, phoneNumber = _ref7.phoneNumber, company = _ref7.company, licenseNumber = _ref7.licenseNumber;\n                _context17.next = 4;\n                return this.transactionPartyGateway.getByTransactionIdAndUserId(transactionId, userId);\n\n              case 4:\n                transactionParty = _context17.sent;\n\n                if (!transactionParty) {\n                  _context17.next = 7;\n                  break;\n                }\n\n                return _context17.abrupt(\"return\", this.transactionPartyGateway.updateById(transactionParty.id, {\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phoneNumber: phoneNumber,\n                  company: company,\n                  licenseNumber: licenseNumber\n                }));\n\n              case 7:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function updateTransactionPartyInfo(_x19, _x20) {\n        return _updateTransactionPartyInfo.apply(this, arguments);\n      }\n\n      return updateTransactionPartyInfo;\n    }()\n  }, {\n    key: \"updateTransactionPartyById\",\n    value: function () {\n      var _updateTransactionPartyById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee18(id, _ref8) {\n        var firstName, lastName, email, role, phoneNumber, company, licenseNumber, access;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                firstName = _ref8.firstName, lastName = _ref8.lastName, email = _ref8.email, role = _ref8.role, phoneNumber = _ref8.phoneNumber, company = _ref8.company, licenseNumber = _ref8.licenseNumber, access = _ref8.access;\n                return _context18.abrupt(\"return\", this.transactionPartyGateway.updateById(id, {\n                  firstName: firstName,\n                  lastName: lastName,\n                  role: role,\n                  email: email,\n                  phoneNumber: phoneNumber,\n                  company: company,\n                  licenseNumber: licenseNumber,\n                  access: access\n                }));\n\n              case 2:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function updateTransactionPartyById(_x21, _x22) {\n        return _updateTransactionPartyById.apply(this, arguments);\n      }\n\n      return updateTransactionPartyById;\n    }() // async getTransactionParty ({findTransactionParties, where, skip, order, limit}) {\n    //   const arrayTransactionParties = await this.transactionPartyGateway.findByData(\n    //     findTransactionParties\n    //   )\n    //   let arrayTransaction =[]\n    //   arrayTransactionParties.map( async transaction => {\n    //     where.id = transaction.transactionId\n    //     const dataTransaction = await this.transactionGateway.findByData({where, skip, order, limit})\n    //     if (dataTransaction !== null) {\n    //       arrayTransaction.push(dataTransaction)\n    //     }\n    //   })\n    //   // const temp = await Promise.all(arrayTransaction)\n    //   console.log('arrayTransaction',arrayTransaction);\n    //   return arrayTransaction\n    // }\n\n  }, {\n    key: \"getTransactions\",\n    value: function () {\n      var _getTransactions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee19(_ref9) {\n        var where, skip, order, limit, include;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                where = _ref9.where, skip = _ref9.skip, order = _ref9.order, limit = _ref9.limit, include = _ref9.include;\n                return _context19.abrupt(\"return\", this.transactionGateway.findByData({\n                  where: where,\n                  skip: skip,\n                  order: order,\n                  limit: limit,\n                  include: include\n                }));\n\n              case 2:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function getTransactions(_x23) {\n        return _getTransactions.apply(this, arguments);\n      }\n\n      return getTransactions;\n    }()\n  }, {\n    key: \"getDetailedDocumentByPartyId\",\n    value: function () {\n      var _getDetailedDocumentByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee20(idParty) {\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                return _context20.abrupt(\"return\", this.documentGateway.getByPartyId(idParty, {\n                  include: 'actions'\n                }));\n\n              case 1:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function getDetailedDocumentByPartyId(_x24) {\n        return _getDetailedDocumentByPartyId.apply(this, arguments);\n      }\n\n      return getDetailedDocumentByPartyId;\n    }()\n  }, {\n    key: \"getDocumentsAndPartyByTransactionId\",\n    value: function () {\n      var _getDocumentsAndPartyByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee21(transactionId) {\n        var documents, result, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, doc, partyDetail, temp, party, user, name;\n\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return this.documentGateway.getByTransactionId(transactionId);\n\n              case 2:\n                documents = _context21.sent;\n                result = [];\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context21.prev = 7;\n                _iterator = _getIterator(documents);\n\n              case 9:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context21.next = 28;\n                  break;\n                }\n\n                doc = _step.value;\n                partyDetail = null; // Vendor: not have creatorId\n\n                if (!doc.creatorId) {\n                  _context21.next = 25;\n                  break;\n                }\n\n                // Normal document: Save in 'documents' folder\n                temp = doc.uri.split('/');\n\n                if (!(temp[temp.length - 2] === 'documents')) {\n                  _context21.next = 25;\n                  break;\n                }\n\n                _context21.next = 17;\n                return this.transactionPartyGateway.findById(doc.creatorId);\n\n              case 17:\n                party = _context21.sent;\n                _context21.next = 20;\n                return this.userGateway.findById(party.userId);\n\n              case 20:\n                user = _context21.sent;\n                name = getFullName(party);\n\n                if (isEmpty(name)) {\n                  name = user.name || getFullName(user);\n                }\n\n                partyDetail = {\n                  name: name,\n                  email: party.email,\n                  avatar: user.avatar\n                };\n                result.push(_objectSpread({}, doc, {\n                  party: partyDetail\n                }));\n\n              case 25:\n                _iteratorNormalCompletion = true;\n                _context21.next = 9;\n                break;\n\n              case 28:\n                _context21.next = 34;\n                break;\n\n              case 30:\n                _context21.prev = 30;\n                _context21.t0 = _context21[\"catch\"](7);\n                _didIteratorError = true;\n                _iteratorError = _context21.t0;\n\n              case 34:\n                _context21.prev = 34;\n                _context21.prev = 35;\n\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                  _iterator[\"return\"]();\n                }\n\n              case 37:\n                _context21.prev = 37;\n\n                if (!_didIteratorError) {\n                  _context21.next = 40;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 40:\n                return _context21.finish(37);\n\n              case 41:\n                return _context21.finish(34);\n\n              case 42:\n                return _context21.abrupt(\"return\", result);\n\n              case 43:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[7, 30, 34, 42], [35,, 37, 41]]);\n      }));\n\n      function getDocumentsAndPartyByTransactionId(_x25) {\n        return _getDocumentsAndPartyByTransactionId.apply(this, arguments);\n      }\n\n      return getDocumentsAndPartyByTransactionId;\n    }()\n  }, {\n    key: \"getEnvelopeDocumentsAndPartyByTransactionId\",\n    value: function () {\n      var _getEnvelopeDocumentsAndPartyByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee22(transactionId) {\n        var documents, result, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, doc, partyDetail, temp, party, user, name;\n\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return this.documentGateway.getByTransactionId(transactionId);\n\n              case 2:\n                documents = _context22.sent;\n                result = [];\n                _iteratorNormalCompletion2 = true;\n                _didIteratorError2 = false;\n                _iteratorError2 = undefined;\n                _context22.prev = 7;\n                _iterator2 = _getIterator(documents);\n\n              case 9:\n                if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                  _context22.next = 28;\n                  break;\n                }\n\n                doc = _step2.value;\n                partyDetail = null; // Vendor: not have creatorId\n\n                if (!doc.creatorId) {\n                  _context22.next = 25;\n                  break;\n                }\n\n                // Envelope document: Save in 'documents' folder\n                temp = doc.uri.split('/');\n\n                if (!(temp[temp.length - 2] === 'envelopes')) {\n                  _context22.next = 25;\n                  break;\n                }\n\n                _context22.next = 17;\n                return this.transactionPartyGateway.findById(doc.creatorId);\n\n              case 17:\n                party = _context22.sent;\n                _context22.next = 20;\n                return this.userGateway.findById(party.userId);\n\n              case 20:\n                user = _context22.sent;\n                name = getFullName(party);\n\n                if (isEmpty(name)) {\n                  name = user.name || getFullName(user);\n                }\n\n                partyDetail = {\n                  name: name,\n                  email: party.email,\n                  avatar: user.avatar\n                };\n                result.push(_objectSpread({}, doc, {\n                  party: partyDetail\n                }));\n\n              case 25:\n                _iteratorNormalCompletion2 = true;\n                _context22.next = 9;\n                break;\n\n              case 28:\n                _context22.next = 34;\n                break;\n\n              case 30:\n                _context22.prev = 30;\n                _context22.t0 = _context22[\"catch\"](7);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context22.t0;\n\n              case 34:\n                _context22.prev = 34;\n                _context22.prev = 35;\n\n                if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                  _iterator2[\"return\"]();\n                }\n\n              case 37:\n                _context22.prev = 37;\n\n                if (!_didIteratorError2) {\n                  _context22.next = 40;\n                  break;\n                }\n\n                throw _iteratorError2;\n\n              case 40:\n                return _context22.finish(37);\n\n              case 41:\n                return _context22.finish(34);\n\n              case 42:\n                return _context22.abrupt(\"return\", result);\n\n              case 43:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[7, 30, 34, 42], [35,, 37, 41]]);\n      }));\n\n      function getEnvelopeDocumentsAndPartyByTransactionId(_x26) {\n        return _getEnvelopeDocumentsAndPartyByTransactionId.apply(this, arguments);\n      }\n\n      return getEnvelopeDocumentsAndPartyByTransactionId;\n    }()\n  }, {\n    key: \"getDocumentsAndPartyByPartyId\",\n    value: function () {\n      var _getDocumentsAndPartyByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee24(partyId) {\n        var _this = this;\n\n        var documents, promise;\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return this.documentGateway.findByPartyId(partyId);\n\n              case 2:\n                documents = _context24.sent;\n                promise = documents.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref10 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee23(doc) {\n                    var party, user, name;\n                    return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n                      while (1) {\n                        switch (_context23.prev = _context23.next) {\n                          case 0:\n                            _context23.next = 2;\n                            return _this.transactionPartyGateway.findById(doc.creatorId);\n\n                          case 2:\n                            party = _context23.sent;\n                            _context23.next = 5;\n                            return _this.userGateway.findById(party.userId);\n\n                          case 5:\n                            user = _context23.sent;\n                            name = getFullName(party);\n\n                            if (isEmpty(name)) {\n                              name = user.name || getFullName(user);\n                            }\n\n                            return _context23.abrupt(\"return\", _objectSpread({}, doc, {\n                              party: {\n                                name: name,\n                                email: party.email,\n                                avatar: user.avatar\n                              }\n                            }));\n\n                          case 9:\n                          case \"end\":\n                            return _context23.stop();\n                        }\n                      }\n                    }, _callee23);\n                  }));\n\n                  return function (_x28) {\n                    return _ref10.apply(this, arguments);\n                  };\n                }());\n                return _context24.abrupt(\"return\", _Promise.all(promise));\n\n              case 5:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function getDocumentsAndPartyByPartyId(_x27) {\n        return _getDocumentsAndPartyByPartyId.apply(this, arguments);\n      }\n\n      return getDocumentsAndPartyByPartyId;\n    }()\n  }, {\n    key: \"getDocumentsByPartyId\",\n    value: function () {\n      var _getDocumentsByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee25(partyId) {\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                return _context25.abrupt(\"return\", this.documentGateway.findByPartyId(partyId));\n\n              case 1:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function getDocumentsByPartyId(_x29) {\n        return _getDocumentsByPartyId.apply(this, arguments);\n      }\n\n      return getDocumentsByPartyId;\n    }()\n  }, {\n    key: \"getDocumentsByTransactionId\",\n    value: function () {\n      var _getDocumentsByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee26(transactionId) {\n        var documents, result, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, doc, isExist;\n\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                _context26.next = 2;\n                return this.documentGateway.getByTransactionId(transactionId);\n\n              case 2:\n                documents = _context26.sent;\n                result = [];\n                _iteratorNormalCompletion3 = true;\n                _didIteratorError3 = false;\n                _iteratorError3 = undefined;\n                _context26.prev = 7;\n                _iterator3 = _getIterator(documents);\n\n              case 9:\n                if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                  _context26.next = 18;\n                  break;\n                }\n\n                doc = _step3.value;\n                _context26.next = 13;\n                return this.documentActionGateway.checkDocumentExistEnvelope(doc.id);\n\n              case 13:\n                isExist = _context26.sent;\n\n                // Cannot create envelop with document of vendors\n                if (!isExist && doc.role !== TransactionRole.VENDORS) {\n                  result.push(doc);\n                }\n\n              case 15:\n                _iteratorNormalCompletion3 = true;\n                _context26.next = 9;\n                break;\n\n              case 18:\n                _context26.next = 24;\n                break;\n\n              case 20:\n                _context26.prev = 20;\n                _context26.t0 = _context26[\"catch\"](7);\n                _didIteratorError3 = true;\n                _iteratorError3 = _context26.t0;\n\n              case 24:\n                _context26.prev = 24;\n                _context26.prev = 25;\n\n                if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                  _iterator3[\"return\"]();\n                }\n\n              case 27:\n                _context26.prev = 27;\n\n                if (!_didIteratorError3) {\n                  _context26.next = 30;\n                  break;\n                }\n\n                throw _iteratorError3;\n\n              case 30:\n                return _context26.finish(27);\n\n              case 31:\n                return _context26.finish(24);\n\n              case 32:\n                return _context26.abrupt(\"return\", result);\n\n              case 33:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this, [[7, 20, 24, 32], [25,, 27, 31]]);\n      }));\n\n      function getDocumentsByTransactionId(_x30) {\n        return _getDocumentsByTransactionId.apply(this, arguments);\n      }\n\n      return getDocumentsByTransactionId;\n    }()\n  }, {\n    key: \"createFileDocument\",\n    value: function () {\n      var _createFileDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee27(_ref11) {\n        var file, title, role, creatorId, partyId, transactionId, url, documentType;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                file = _ref11.file, title = _ref11.title, role = _ref11.role, creatorId = _ref11.creatorId, partyId = _ref11.partyId, transactionId = _ref11.transactionId, url = _ref11.url, documentType = _ref11.documentType;\n                return _context27.abrupt(\"return\", this.documentGateway.create({\n                  file: file,\n                  title: title,\n                  role: role,\n                  creatorId: creatorId,\n                  partyId: partyId,\n                  transactionId: transactionId,\n                  url: url,\n                  documentType: documentType\n                }));\n\n              case 2:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function createFileDocument(_x31) {\n        return _createFileDocument.apply(this, arguments);\n      }\n\n      return createFileDocument;\n    }()\n  }, {\n    key: \"createDocumentAction\",\n    value: function () {\n      var _createDocumentAction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee28(_ref12) {\n        var action, documentId, assignedPartyId, creatorId;\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                action = _ref12.action, documentId = _ref12.documentId, assignedPartyId = _ref12.assignedPartyId, creatorId = _ref12.creatorId;\n                return _context28.abrupt(\"return\", this.documentActionGateway.create({\n                  action: action,\n                  documentId: documentId,\n                  assignedPartyId: assignedPartyId,\n                  creatorId: creatorId\n                }));\n\n              case 2:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function createDocumentAction(_x32) {\n        return _createDocumentAction.apply(this, arguments);\n      }\n\n      return createDocumentAction;\n    }()\n  }, {\n    key: \"createDocumentsAction\",\n    value: function () {\n      var _createDocumentsAction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee29(arrayAction) {\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                return _context29.abrupt(\"return\", this.documentActionGateway.bulkCreate(arrayAction));\n\n              case 1:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function createDocumentsAction(_x33) {\n        return _createDocumentsAction.apply(this, arguments);\n      }\n\n      return createDocumentsAction;\n    }()\n  }, {\n    key: \"getActivitiesByActorId\",\n    value: function () {\n      var _getActivitiesByActorId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee30(actorId) {\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                return _context30.abrupt(\"return\", this.transactionActivityGateway.getByActorId(actorId));\n\n              case 1:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function getActivitiesByActorId(_x34) {\n        return _getActivitiesByActorId.apply(this, arguments);\n      }\n\n      return getActivitiesByActorId;\n    }()\n  }, {\n    key: \"getActivitiesByPartyId\",\n    value: function () {\n      var _getActivitiesByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee31(partyId) {\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                return _context31.abrupt(\"return\", this.transactionActivityGateway.getByPartyId(partyId));\n\n              case 1:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function getActivitiesByPartyId(_x35) {\n        return _getActivitiesByPartyId.apply(this, arguments);\n      }\n\n      return getActivitiesByPartyId;\n    }()\n  }, {\n    key: \"getDocumentActionByDocumentId\",\n    value: function () {\n      var _getDocumentActionByDocumentId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee32(documentId) {\n        return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                return _context32.abrupt(\"return\", this.documentActionGateway.getByDocumentId(documentId));\n\n              case 1:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this);\n      }));\n\n      function getDocumentActionByDocumentId(_x36) {\n        return _getDocumentActionByDocumentId.apply(this, arguments);\n      }\n\n      return getDocumentActionByDocumentId;\n    }()\n  }, {\n    key: \"getAllDocumentVendorByTransactionId\",\n    value: function () {\n      var _getAllDocumentVendorByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee33(transactionId) {\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                return _context33.abrupt(\"return\", this.documentGateway.getAllDocumentVendor(transactionId));\n\n              case 1:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function getAllDocumentVendorByTransactionId(_x37) {\n        return _getAllDocumentVendorByTransactionId.apply(this, arguments);\n      }\n\n      return getAllDocumentVendorByTransactionId;\n    }()\n  }, {\n    key: \"updateDocumentActionById\",\n    value: function () {\n      var _updateDocumentActionById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee34(id, _ref13) {\n        var action, status, documentId, assignedPartyId, creatorId;\n        return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                action = _ref13.action, status = _ref13.status, documentId = _ref13.documentId, assignedPartyId = _ref13.assignedPartyId, creatorId = _ref13.creatorId;\n                return _context34.abrupt(\"return\", this.documentActionGateway.updateById(id, {\n                  action: action,\n                  status: status,\n                  documentId: documentId,\n                  assignedPartyId: assignedPartyId,\n                  creatorId: creatorId\n                }));\n\n              case 2:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function updateDocumentActionById(_x38, _x39) {\n        return _updateDocumentActionById.apply(this, arguments);\n      }\n\n      return updateDocumentActionById;\n    }()\n  }, {\n    key: \"getDocumentByTransactionId\",\n    value: function () {\n      var _getDocumentByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee35(id) {\n        return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                return _context35.abrupt(\"return\", this.documentGateway.getByTransactionId(id));\n\n              case 1:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function getDocumentByTransactionId(_x40) {\n        return _getDocumentByTransactionId.apply(this, arguments);\n      }\n\n      return getDocumentByTransactionId;\n    }()\n  }, {\n    key: \"getAllAgentParty\",\n    value: function () {\n      var _getAllAgentParty = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee36(userId) {\n        return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                return _context36.abrupt(\"return\", this.transactionPartyGateway.getAllAgentParty(userId));\n\n              case 1:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n\n      function getAllAgentParty(_x41) {\n        return _getAllAgentParty.apply(this, arguments);\n      }\n\n      return getAllAgentParty;\n    }()\n  }, {\n    key: \"getDocumentById\",\n    value: function () {\n      var _getDocumentById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee37(id) {\n        return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                return _context37.abrupt(\"return\", this.documentGateway.getById(id, {\n                  include: 'actions'\n                }));\n\n              case 1:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n\n      function getDocumentById(_x42) {\n        return _getDocumentById.apply(this, arguments);\n      }\n\n      return getDocumentById;\n    }()\n  }, {\n    key: \"getDetailedDocumentsForParties\",\n    value: function () {\n      var _getDetailedDocumentsForParties = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee39(parties) {\n        var _this2 = this;\n\n        var documents;\n        return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                documents = parties.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref14 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee38(party) {\n                    return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n                      while (1) {\n                        switch (_context38.prev = _context38.next) {\n                          case 0:\n                            return _context38.abrupt(\"return\", _this2.documentGateway.getByPartyId(party.id, {\n                              include: 'actions'\n                            }));\n\n                          case 1:\n                          case \"end\":\n                            return _context38.stop();\n                        }\n                      }\n                    }, _callee38);\n                  }));\n\n                  return function (_x44) {\n                    return _ref14.apply(this, arguments);\n                  };\n                }());\n                return _context39.abrupt(\"return\", _Promise.all(documents));\n\n              case 2:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39);\n      }));\n\n      function getDetailedDocumentsForParties(_x43) {\n        return _getDetailedDocumentsForParties.apply(this, arguments);\n      }\n\n      return getDetailedDocumentsForParties;\n    }()\n  }, {\n    key: \"getDocumentActionsAssignedToParty\",\n    value: function () {\n      var _getDocumentActionsAssignedToParty = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee40(partyId, where) {\n        return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                return _context40.abrupt(\"return\", this.documentActionGateway.findByPartyId(partyId, where));\n\n              case 1:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this);\n      }));\n\n      function getDocumentActionsAssignedToParty(_x45, _x46) {\n        return _getDocumentActionsAssignedToParty.apply(this, arguments);\n      }\n\n      return getDocumentActionsAssignedToParty;\n    }()\n  }, {\n    key: \"getDocumentActionsByPartyId\",\n    value: function () {\n      var _getDocumentActionsByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee41(partyId) {\n        return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                return _context41.abrupt(\"return\", this.documentActionGateway.getByPartyId(partyId));\n\n              case 1:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41, this);\n      }));\n\n      function getDocumentActionsByPartyId(_x47) {\n        return _getDocumentActionsByPartyId.apply(this, arguments);\n      }\n\n      return getDocumentActionsByPartyId;\n    }()\n  }, {\n    key: \"countDocumentActionsByPartyId\",\n    value: function () {\n      var _countDocumentActionsByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee42(partyId) {\n        return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                return _context42.abrupt(\"return\", this.documentActionGateway.countDocumentActionsByPartyId(partyId));\n\n              case 1:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42, this);\n      }));\n\n      function countDocumentActionsByPartyId(_x48) {\n        return _countDocumentActionsByPartyId.apply(this, arguments);\n      }\n\n      return countDocumentActionsByPartyId;\n    }()\n  }, {\n    key: \"getDocumentActionsByDocumentId\",\n    value: function () {\n      var _getDocumentActionsByDocumentId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee43(documentId) {\n        return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                return _context43.abrupt(\"return\", this.documentActionGateway.getByDocumentId(documentId));\n\n              case 1:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43, this);\n      }));\n\n      function getDocumentActionsByDocumentId(_x49) {\n        return _getDocumentActionsByDocumentId.apply(this, arguments);\n      }\n\n      return getDocumentActionsByDocumentId;\n    }()\n  }, {\n    key: \"getTransactionPartyByUserId\",\n    value: function () {\n      var _getTransactionPartyByUserId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee44(transactionId, userId) {\n        return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                return _context44.abrupt(\"return\", this.transactionPartyGateway.getByTransactionIdAndUserId(transactionId, userId));\n\n              case 1:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44, this);\n      }));\n\n      function getTransactionPartyByUserId(_x50, _x51) {\n        return _getTransactionPartyByUserId.apply(this, arguments);\n      }\n\n      return getTransactionPartyByUserId;\n    }()\n  }, {\n    key: \"getPartiesForTransaction\",\n    value: function () {\n      var _getPartiesForTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee45(id) {\n        return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                return _context45.abrupt(\"return\", this.transactionGateway.findById(id, {\n                  include: 'parties'\n                }));\n\n              case 1:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45, this);\n      }));\n\n      function getPartiesForTransaction(_x52) {\n        return _getPartiesForTransaction.apply(this, arguments);\n      }\n\n      return getPartiesForTransaction;\n    }()\n  }, {\n    key: \"getAllTransaction\",\n    value: function () {\n      var _getAllTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee46() {\n        return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                return _context46.abrupt(\"return\", this.transactionGateway.getAllTransaction());\n\n              case 1:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46, this);\n      }));\n\n      function getAllTransaction() {\n        return _getAllTransaction.apply(this, arguments);\n      }\n\n      return getAllTransaction;\n    }()\n  }, {\n    key: \"deleteTransactionById\",\n    value: function () {\n      var _deleteTransactionById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee47(id) {\n        return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                return _context47.abrupt(\"return\", this.transactionGateway.deleteTransactionById(id));\n\n              case 1:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47, this);\n      }));\n\n      function deleteTransactionById(_x53) {\n        return _deleteTransactionById.apply(this, arguments);\n      }\n\n      return deleteTransactionById;\n    }()\n  }, {\n    key: \"updateSignDocumentById\",\n    value: function () {\n      var _updateSignDocumentById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee48(documentActionId, _ref15) {\n        var file;\n        return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                file = _ref15.file;\n                return _context48.abrupt(\"return\", this.documentActionGateway.updateSignDocumentById(documentActionId, {\n                  file: file\n                }));\n\n              case 2:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48, this);\n      }));\n\n      function updateSignDocumentById(_x54, _x55) {\n        return _updateSignDocumentById.apply(this, arguments);\n      }\n\n      return updateSignDocumentById;\n    }()\n  }, {\n    key: \"archiveTransaction\",\n    value: function () {\n      var _archiveTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee49(id) {\n        return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                return _context49.abrupt(\"return\", this.transactionGateway.archiveTransaction(id));\n\n              case 1:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49, this);\n      }));\n\n      function archiveTransaction(_x56) {\n        return _archiveTransaction.apply(this, arguments);\n      }\n\n      return archiveTransaction;\n    }()\n  }, {\n    key: \"closeTransaction\",\n    value: function () {\n      var _closeTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee50(id) {\n        return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n          while (1) {\n            switch (_context50.prev = _context50.next) {\n              case 0:\n                return _context50.abrupt(\"return\", this.transactionGateway.closeTransaction(id));\n\n              case 1:\n              case \"end\":\n                return _context50.stop();\n            }\n          }\n        }, _callee50, this);\n      }));\n\n      function closeTransaction(_x57) {\n        return _closeTransaction.apply(this, arguments);\n      }\n\n      return closeTransaction;\n    }()\n  }, {\n    key: \"getTransactionWithUserRoles\",\n    value: function () {\n      var _getTransactionWithUserRoles = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee51(id) {\n        return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n          while (1) {\n            switch (_context51.prev = _context51.next) {\n              case 0:\n                return _context51.abrupt(\"return\", this.transactionGateway.getTransactionWithUserRoles(id));\n\n              case 1:\n              case \"end\":\n                return _context51.stop();\n            }\n          }\n        }, _callee51, this);\n      }));\n\n      function getTransactionWithUserRoles(_x58) {\n        return _getTransactionWithUserRoles.apply(this, arguments);\n      }\n\n      return getTransactionWithUserRoles;\n    }()\n  }, {\n    key: \"getAllAgents\",\n    value: function () {\n      var _getAllAgents = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee52(id) {\n        return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n          while (1) {\n            switch (_context52.prev = _context52.next) {\n              case 0:\n                return _context52.abrupt(\"return\", this.transactionGateway.getAllAgentsInTransaction(id));\n\n              case 1:\n              case \"end\":\n                return _context52.stop();\n            }\n          }\n        }, _callee52, this);\n      }));\n\n      function getAllAgents(_x59) {\n        return _getAllAgents.apply(this, arguments);\n      }\n\n      return getAllAgents;\n    }()\n  }, {\n    key: \"getAgentTransaction\",\n    value: function () {\n      var _getAgentTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee53(userId, where, skip, order, limit) {\n        return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n          while (1) {\n            switch (_context53.prev = _context53.next) {\n              case 0:\n                return _context53.abrupt(\"return\", this.transactionPartyGateway.getAgentTransaction(userId, where, skip, order, limit));\n\n              case 1:\n              case \"end\":\n                return _context53.stop();\n            }\n          }\n        }, _callee53, this);\n      }));\n\n      function getAgentTransaction(_x60, _x61, _x62, _x63, _x64) {\n        return _getAgentTransaction.apply(this, arguments);\n      }\n\n      return getAgentTransaction;\n    }()\n  }, {\n    key: \"getUriToSignDocument\",\n    value: function () {\n      var _getUriToSignDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee54(id, _ref16) {\n        var signers, creatorId;\n        return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n          while (1) {\n            switch (_context54.prev = _context54.next) {\n              case 0:\n                signers = _ref16.signers, creatorId = _ref16.creatorId;\n                return _context54.abrupt(\"return\", this.documentGateway.getUriToSignDocument(id, {\n                  signers: signers,\n                  creatorId: creatorId\n                }));\n\n              case 2:\n              case \"end\":\n                return _context54.stop();\n            }\n          }\n        }, _callee54, this);\n      }));\n\n      function getUriToSignDocument(_x65, _x66) {\n        return _getUriToSignDocument.apply(this, arguments);\n      }\n\n      return getUriToSignDocument;\n    }()\n  }, {\n    key: \"getSignLink\",\n    value: function () {\n      var _getSignLink = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee55(documentId, envelopeId, party) {\n        var name, user;\n        return _regeneratorRuntime.wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                name = getFullName(party);\n\n                if (!isEmpty(name)) {\n                  _context55.next = 6;\n                  break;\n                }\n\n                _context55.next = 4;\n                return this.userGateway.findById(party.userId);\n\n              case 4:\n                user = _context55.sent;\n                name = user.name || getFullName(user);\n\n              case 6:\n                return _context55.abrupt(\"return\", this.documentGateway.getSignLink(documentId, {\n                  envelopeId: envelopeId,\n                  partyId: party.id,\n                  email: party.email,\n                  name: name\n                }));\n\n              case 7:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55, this);\n      }));\n\n      function getSignLink(_x67, _x68, _x69) {\n        return _getSignLink.apply(this, arguments);\n      }\n\n      return getSignLink;\n    }()\n  }, {\n    key: \"createTransactionParty\",\n    value: function () {\n      var _createTransactionParty = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee56(data) {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee56$(_context56) {\n          while (1) {\n            switch (_context56.prev = _context56.next) {\n              case 0:\n                _context56.next = 2;\n                return this.userGateway.findByEmail(data.email);\n\n              case 2:\n                user = _context56.sent;\n\n                if (user) {\n                  _context56.next = 5;\n                  break;\n                }\n\n                return _context56.abrupt(\"return\", this.transactionInvitationGateway.create(data));\n\n              case 5:\n                return _context56.abrupt(\"return\", this.transactionPartyGateway.create(_objectSpread({}, data, {\n                  userId: user.id\n                })));\n\n              case 6:\n              case \"end\":\n                return _context56.stop();\n            }\n          }\n        }, _callee56, this);\n      }));\n\n      function createTransactionParty(_x70) {\n        return _createTransactionParty.apply(this, arguments);\n      }\n\n      return createTransactionParty;\n    }()\n  }, {\n    key: \"getPartyByTransactionIdAndUserId\",\n    value: function () {\n      var _getPartyByTransactionIdAndUserId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee57(transactionId, userId) {\n        return _regeneratorRuntime.wrap(function _callee57$(_context57) {\n          while (1) {\n            switch (_context57.prev = _context57.next) {\n              case 0:\n                return _context57.abrupt(\"return\", this.transactionPartyGateway.getByTransactionIdAndUserId(transactionId, userId));\n\n              case 1:\n              case \"end\":\n                return _context57.stop();\n            }\n          }\n        }, _callee57, this);\n      }));\n\n      function getPartyByTransactionIdAndUserId(_x71, _x72) {\n        return _getPartyByTransactionIdAndUserId.apply(this, arguments);\n      }\n\n      return getPartyByTransactionIdAndUserId;\n    }()\n  }, {\n    key: \"getPartiesByTransactionId\",\n    value: function () {\n      var _getPartiesByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee59(transactionId) {\n        var _this3 = this;\n\n        var parties, promise;\n        return _regeneratorRuntime.wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                _context59.next = 2;\n                return this.transactionPartyGateway.findByTransactionId(transactionId);\n\n              case 2:\n                parties = _context59.sent;\n                promise = parties.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref17 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee58(party) {\n                    var name, user;\n                    return _regeneratorRuntime.wrap(function _callee58$(_context58) {\n                      while (1) {\n                        switch (_context58.prev = _context58.next) {\n                          case 0:\n                            name = getFullName(party);\n\n                            if (!isEmpty(name)) {\n                              _context58.next = 6;\n                              break;\n                            }\n\n                            _context58.next = 4;\n                            return _this3.userGateway.findById(party.userId);\n\n                          case 4:\n                            user = _context58.sent;\n                            name = user.name || getFullName(user);\n\n                          case 6:\n                            return _context58.abrupt(\"return\", _objectSpread({}, party, {\n                              name: name\n                            }));\n\n                          case 7:\n                          case \"end\":\n                            return _context58.stop();\n                        }\n                      }\n                    }, _callee58);\n                  }));\n\n                  return function (_x74) {\n                    return _ref17.apply(this, arguments);\n                  };\n                }());\n                return _context59.abrupt(\"return\", _Promise.all(promise));\n\n              case 5:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59, this);\n      }));\n\n      function getPartiesByTransactionId(_x73) {\n        return _getPartiesByTransactionId.apply(this, arguments);\n      }\n\n      return getPartiesByTransactionId;\n    }()\n  }, {\n    key: \"makeDoneDocumentAction\",\n    value: function () {\n      var _makeDoneDocumentAction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee60(actionId) {\n        return _regeneratorRuntime.wrap(function _callee60$(_context60) {\n          while (1) {\n            switch (_context60.prev = _context60.next) {\n              case 0:\n                return _context60.abrupt(\"return\", this.documentActionGateway.makeDone(actionId));\n\n              case 1:\n              case \"end\":\n                return _context60.stop();\n            }\n          }\n        }, _callee60, this);\n      }));\n\n      function makeDoneDocumentAction(_x75) {\n        return _makeDoneDocumentAction.apply(this, arguments);\n      }\n\n      return makeDoneDocumentAction;\n    }()\n  }, {\n    key: \"updateTransactionPercent\",\n    value: function () {\n      var _updateTransactionPercent = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee61(transactionId, percent) {\n        return _regeneratorRuntime.wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                return _context61.abrupt(\"return\", this.transactionGateway.updateTransactionPercent(transactionId, percent));\n\n              case 1:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61, this);\n      }));\n\n      function updateTransactionPercent(_x76, _x77) {\n        return _updateTransactionPercent.apply(this, arguments);\n      }\n\n      return updateTransactionPercent;\n    }()\n  }]);\n\n  return TransactionService;\n}();\n\nexport { TransactionService as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/services/TransactionService.js"],"names":["isEmpty","TransactionRole","getFullName","TransactionService","options","transactionGateway","transactionActivityGateway","transactionInvitationGateway","transactionPartyGateway","documentGateway","documentActionGateway","transactionDetailGateway","userGateway","ownerId","address","imageURL","url","description","closingDate","transactionType","transactionTypeStatus","status","create","id","updateById","userId","callback","listenToMyDocumentAction","listenToMyDocumentActionAdd","transactionId","file","createMainImageById","deleteImageById","detailId","yearBuilt","bedrooms","squareFootage","schoolDistrict","type","bathrooms","lotSize","country","streetNumber","streetName","unitNumber","city","state","postalCode","county","mlsNumber","taxId","updateDetail","createNewTransactionDetail","findByOwnerId","include","parties","documents","findByTransactionId","getByTransactionId","findById","transaction","activitiesFull","getById","detail","getTransactionVendor","getMyTransactions","transactions","getByActorId","activities","role","firstName","lastName","email","phoneNumber","access","company","licenseNumber","getByTransactionIdAndUserId","transactionParty","where","skip","order","limit","findByData","idParty","getByPartyId","result","doc","partyDetail","creatorId","temp","uri","split","length","party","user","name","avatar","push","partyId","findByPartyId","promise","map","all","checkDocumentExistEnvelope","isExist","VENDORS","title","documentType","action","documentId","assignedPartyId","arrayAction","bulkCreate","actorId","getByDocumentId","getAllDocumentVendor","getAllAgentParty","countDocumentActionsByPartyId","getAllTransaction","deleteTransactionById","documentActionId","updateSignDocumentById","archiveTransaction","closeTransaction","getTransactionWithUserRoles","getAllAgentsInTransaction","getAgentTransaction","signers","getUriToSignDocument","envelopeId","getSignLink","data","findByEmail","actionId","makeDone","percent","updateTransactionPercent"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash'\nimport { TransactionRole } from '../../common/models/Transaction'\nimport { getFullName } from '../../common/view-models/TransactionParty'\n\nexport interface TransactionGateway {\n  create(transaction: {\n    address: string,\n    imageURL: string,\n    url: string,\n    description: string,\n    closingDate: Date,\n    transactionType: string,\n    transactionTypeStatus: string,\n    status: string\n  }): Promise<Object>;\n\n  findById(id: string): Promise<Object>;\n  updateById(id: string, data: Object): Promise<Object>;\n  findByOwnerId(userId: string): Promise<Object>;\n  createMainImage(id: string, file: Object): Promise<Object>;\n  deleteImage(id: string): Promise<Object>;\n  findByTransactionId(id: string): Promise<Object>;\n  getTransactionVendor(id: string): Promise<Object>;\n}\n\nexport interface TransactionDetailGateway {\n  updateDetail(id: string, data: Object): Promise<Object>;\n  createNewTransactionDetail(id: string, data: Object): Promise<Object>;\n}\n\nexport interface TransactionActivityGateway {\n  create(data: {\n    actorId: string,\n    type: string\n  }): Promise<Object>;\n\n  findAll(): Promise<Object>;\n}\n\nexport interface TransactionInvitationGateway {\n  create(data: {\n    transactionId: string,\n    role: string,\n    firstName: string,\n    lastName: string,\n    email: string,\n    phoneNumber: string,\n    access: string\n  }): Promise<Object>;\n}\n\nexport interface TransactionPartyGateway {\n  updateById(id: string, data: Object): Promise<Object>;\n  findByData(where: Object, data: Object): Promise<Object>;\n  findMemberByTransactionId(id: string): Promise<Object>;\n  getAllAgentParty(userId: string): Promise<Object>;\n}\n\nexport interface DocumentGateway {\n  create(data: {\n    title: string,\n    creatorId: string,\n    documentUrl: string\n  }): Promise<Object>;\n  getByTransactionId(id: string): Promise<Object>;\n  getAllDocumentVendor(transactionId: string): Promise<Object>;\n}\n\nexport interface DocumentActionGateway {\n  create(data: {\n    action: string,\n    documentId: string,\n    assignedPartyId: string,\n    creatorId: string\n  }): Promise<Object>;\n}\n\nexport interface UserGateway {}\n// export default class UserService {\n//   constructor(options :{\n//     userGateway : UserGateway\n//   })\n// }\n\nexport default class TransactionService {\n  constructor (options: {\n    transactionGateway: TransactionGateway,\n    transactionActivityGateway: TransactionActivityGateway,\n    transactionInvitationGateway: TransactionInvitationGateway,\n    transactionPartyGateway: TransactionPartyGateway,\n    documentGateway: DocumentGateway,\n    documentActionGateway: DocumentActionGateway,\n    transactionDetailGateway: TransactionDetailGateway,\n    userGateway: UserGateway\n  }) {\n    const {\n      transactionGateway,\n      transactionActivityGateway,\n      transactionInvitationGateway,\n      transactionPartyGateway,\n      documentGateway,\n      documentActionGateway,\n      transactionDetailGateway,\n      userGateway\n    } = options\n    this.transactionGateway = transactionGateway\n    this.transactionDetailGateway = transactionDetailGateway\n    this.transactionActivityGateway = transactionActivityGateway\n    this.transactionInvitationGateway = transactionInvitationGateway\n    this.transactionPartyGateway = transactionPartyGateway\n    this.documentGateway = documentGateway\n    this.documentActionGateway = documentActionGateway\n    this.userGateway = userGateway\n  }\n\n  async createTransaction ({\n    ownerId,\n    address,\n    imageURL,\n    url,\n    description,\n    closingDate,\n    transactionType,\n    transactionTypeStatus,\n    status\n  }) {\n    return this.transactionGateway.create({\n      ownerId,\n      address,\n      imageURL,\n      url,\n      description,\n      closingDate,\n      transactionType,\n      transactionTypeStatus,\n      status\n    })\n  }\n  async updateTransactionById (\n    id,\n    {\n      address,\n      transactionType,\n      transactionTypeStatus,\n      url,\n      description,\n      closingDate,\n      status\n    }\n  ) {\n    return this.transactionGateway.updateById(id, {\n      address,\n      transactionType,\n      transactionTypeStatus,\n      url,\n      description,\n      closingDate,\n      status\n    })\n  }\n\n  listenToMyDocumentAction (userId, callback) {\n    this.documentActionGateway.listenToMyDocumentAction(userId, callback)\n  }\n\n  listenToMyDocumentActionAdd (userId, callback) {\n    this.documentActionGateway.listenToMyDocumentActionAdd(userId, callback)\n  }\n\n  async createMainImage (transactionId, file) {\n    return this.transactionGateway.createMainImageById(transactionId, file)\n  }\n  async deleteImage (transactionId) {\n    return this.transactionGateway.deleteImageById(transactionId)\n  }\n  async createTransactionDetail (\n    detailId,\n    {\n      yearBuilt,\n      bedrooms,\n      squareFootage,\n      schoolDistrict,\n      type,\n      bathrooms,\n      lotSize,\n      country,\n      streetNumber,\n      streetName,\n      unitNumber,\n      city,\n      state,\n      postalCode,\n      county,\n      mlsNumber,\n      taxId\n    }\n  ) {\n    return this.transactionDetailGateway.updateDetail(detailId, {\n      yearBuilt,\n      bedrooms,\n      squareFootage,\n      schoolDistrict,\n      type,\n      bathrooms,\n      lotSize,\n      country,\n      streetNumber,\n      streetName,\n      unitNumber,\n      city,\n      state,\n      postalCode,\n      county,\n      mlsNumber,\n      taxId\n    })\n  }\n  async createNewTransactionDetail ({\n    yearBuilt,\n    bedrooms,\n    squareFootage,\n    schoolDistrict,\n    type,\n    bathrooms,\n    lotSize,\n    country,\n    streetNumber,\n    streetName,\n    unitNumber,\n    city,\n    state,\n    postalCode,\n    county,\n    mlsNumber,\n    taxId\n  }) {\n    return this.transactionDetailGateway.createNewTransactionDetail({\n      yearBuilt,\n      bedrooms,\n      squareFootage,\n      schoolDistrict,\n      type,\n      bathrooms,\n      lotSize,\n      country,\n      streetNumber,\n      streetName,\n      unitNumber,\n      city,\n      state,\n      postalCode,\n      county,\n      mlsNumber,\n      taxId\n    })\n  }\n\n  async getTransactionsForUser () {\n    return this.transactionGateway.findByOwnerId({\n      include: [\n        {\n          parties: [{ documents: 'actions' }, 'assignedActions', 'user']\n        },\n        'invitations'\n      ]\n    })\n  }\n\n  async getTransactionsDetailByTransactionId (id) {\n    return this.transactionGateway.findByTransactionId(id)\n  }\n\n  async getMemberPartiesByTransaction (id) {\n    return this.transactionPartyGateway.getByTransactionId(id, {\n      include: ['user', { documents: 'actions' }]\n    })\n  }\n\n  async getDetailedTransactionAndActivityById (id) {\n    const transaction = await this.transactionGateway.findById(id, {\n      include: [\n        {\n          parties: [{ documents: 'actions' }, 'assignedActions', 'user']\n        },\n        'invitations'\n      ]\n    })\n    const activitiesFull = await this.transactionActivityGateway.getByTransactionId(\n      id\n    )\n    const detail = await this.transactionDetailGateway.getById(id)\n    return { transaction, activitiesFull, detail }\n  }\n  async getTransactionVendor (id) {\n    return this.transactionGateway.getTransactionVendor(id)\n  }\n\n  async getAllTransactionVer2 (userId) {\n    return this.transactionGateway.findById(userId, {\n      include: [\n        {\n          parties: [{ documents: 'actions' }, 'assignedActions', 'user']\n        },\n        'invitations'\n      ]\n    })\n  }\n\n  async getMyTransactionsAndActivitiesForUser (userId) {\n    const transactions = await this.transactionGateway.getMyTransactions()\n    const activities = await this.transactionActivityGateway.getByActorId(\n      userId\n    )\n    return { transactions, activities }\n  }\n\n  async inviteParty ({\n    transactionId,\n    role,\n    firstName,\n    lastName,\n    email,\n    phoneNumber,\n    access\n  }) {\n    return this.transactionInvitationGateway.create({\n      transactionId,\n      role,\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      access\n    })\n  }\n\n  async getInvitationById (id) {\n    return this.transactionInvitationGateway.findById(id)\n  }\n\n  async getDetailedTransactionInvitationById (id) {\n    return this.transactionInvitationGateway.findById(id, {\n      include: 'transaction'\n    })\n  }\n\n  async updateTransactionPartyInfo (\n    { userId, transactionId },\n    { firstName, lastName, email, phoneNumber, company, licenseNumber }\n  ) {\n    const transactionParty = await this.transactionPartyGateway.getByTransactionIdAndUserId(\n      transactionId,\n      userId\n    )\n\n    if (transactionParty) {\n      return this.transactionPartyGateway.updateById(transactionParty.id, {\n        firstName,\n        lastName,\n        email,\n        phoneNumber,\n        company,\n        licenseNumber\n      })\n    }\n  }\n\n  async updateTransactionPartyById (\n    id,\n    {\n      firstName,\n      lastName,\n      email,\n      role,\n      phoneNumber,\n      company,\n      licenseNumber,\n      access\n    }\n  ) {\n    return this.transactionPartyGateway.updateById(id, {\n      firstName,\n      lastName,\n      role,\n      email,\n      phoneNumber,\n      company,\n      licenseNumber,\n      access\n    })\n  }\n\n  // async getTransactionParty ({findTransactionParties, where, skip, order, limit}) {\n  //   const arrayTransactionParties = await this.transactionPartyGateway.findByData(\n  //     findTransactionParties\n  //   )\n  //   let arrayTransaction =[]\n  //   arrayTransactionParties.map( async transaction => {\n  //     where.id = transaction.transactionId\n  //     const dataTransaction = await this.transactionGateway.findByData({where, skip, order, limit})\n  //     if (dataTransaction !== null) {\n  //       arrayTransaction.push(dataTransaction)\n  //     }\n  //   })\n  //   // const temp = await Promise.all(arrayTransaction)\n  //   console.log('arrayTransaction',arrayTransaction);\n\n  //   return arrayTransaction\n  // }\n\n  async getTransactions ({ where, skip, order, limit, include }) {\n    return this.transactionGateway.findByData({\n      where,\n      skip,\n      order,\n      limit,\n      include\n    })\n  }\n\n  async getDetailedDocumentByPartyId (idParty) {\n    return this.documentGateway.getByPartyId(idParty, {\n      include: 'actions'\n    })\n  }\n\n  async getDocumentsAndPartyByTransactionId (transactionId) {\n    const documents = await this.documentGateway.getByTransactionId(\n      transactionId\n    )\n\n    const result = []\n    for (const doc of documents) {\n      let partyDetail = null\n\n      // Vendor: not have creatorId\n      if (doc.creatorId) {\n        // Normal document: Save in 'documents' folder\n        const temp = doc.uri.split('/')\n        if (temp[temp.length - 2] === 'documents') {\n          const party = await this.transactionPartyGateway.findById(\n            doc.creatorId\n          )\n          const user = await this.userGateway.findById(party.userId)\n\n          let name = getFullName(party)\n          if (isEmpty(name)) {\n            name = user.name || getFullName(user)\n          }\n\n          partyDetail = {\n            name,\n            email: party.email,\n            avatar: user.avatar\n          }\n\n          result.push({ ...doc, party: partyDetail })\n        }\n      }\n    }\n\n    return result\n  }\n\n  async getEnvelopeDocumentsAndPartyByTransactionId (transactionId) {\n    const documents = await this.documentGateway.getByTransactionId(\n      transactionId\n    )\n\n    const result = []\n\n    for (const doc of documents) {\n      let partyDetail = null\n\n      // Vendor: not have creatorId\n      if (doc.creatorId) {\n        // Envelope document: Save in 'documents' folder\n        const temp = doc.uri.split('/')\n        if (temp[temp.length - 2] === 'envelopes') {\n          const party = await this.transactionPartyGateway.findById(\n            doc.creatorId\n          )\n          const user = await this.userGateway.findById(party.userId)\n\n          let name = getFullName(party)\n          if (isEmpty(name)) {\n            name = user.name || getFullName(user)\n          }\n\n          partyDetail = {\n            name,\n            email: party.email,\n            avatar: user.avatar\n          }\n\n          result.push({ ...doc, party: partyDetail })\n        }\n      }\n    }\n    return result\n  }\n\n  async getDocumentsAndPartyByPartyId (partyId) {\n    const documents = await this.documentGateway.findByPartyId(partyId)\n    const promise = documents.map(async doc => {\n      const party = await this.transactionPartyGateway.findById(doc.creatorId)\n      const user = await this.userGateway.findById(party.userId)\n\n      let name = getFullName(party)\n      if (isEmpty(name)) {\n        name = user.name || getFullName(user)\n      }\n\n      return {\n        ...doc,\n        party: {\n          name,\n          email: party.email,\n          avatar: user.avatar\n        }\n      }\n    })\n    return Promise.all(promise)\n  }\n\n  async getDocumentsByPartyId (partyId) {\n    return this.documentGateway.findByPartyId(partyId)\n  }\n\n  async getDocumentsByTransactionId (transactionId) {\n    const documents = await this.documentGateway.getByTransactionId(\n      transactionId\n    )\n\n    let result = []\n    for (const doc of documents) {\n      const isExist = await this.documentActionGateway.checkDocumentExistEnvelope(\n        doc.id\n      )\n\n      // Cannot create envelop with document of vendors\n      if (!isExist && doc.role !== TransactionRole.VENDORS) {\n        result.push(doc)\n      }\n    }\n\n    return result\n  }\n\n  async createFileDocument ({\n    file,\n    title,\n    role,\n    creatorId,\n    partyId,\n    transactionId,\n    url,\n    documentType\n  }) {\n    return this.documentGateway.create({\n      file,\n      title,\n      role,\n      creatorId,\n      partyId,\n      transactionId,\n      url,\n      documentType\n    })\n  }\n\n  async createDocumentAction ({\n    action,\n    documentId,\n    assignedPartyId,\n    creatorId\n  }) {\n    return this.documentActionGateway.create({\n      action,\n      documentId,\n      assignedPartyId,\n      creatorId\n    })\n  }\n\n  async createDocumentsAction (arrayAction) {\n    return this.documentActionGateway.bulkCreate(arrayAction)\n  }\n\n  async getActivitiesByActorId (actorId) {\n    return this.transactionActivityGateway.getByActorId(actorId)\n  }\n\n  async getActivitiesByPartyId (partyId) {\n    return this.transactionActivityGateway.getByPartyId(partyId)\n  }\n  async getDocumentActionByDocumentId (documentId) {\n    return this.documentActionGateway.getByDocumentId(documentId)\n  }\n  async getAllDocumentVendorByTransactionId (transactionId) {\n    return this.documentGateway.getAllDocumentVendor(transactionId)\n  }\n\n  async updateDocumentActionById (\n    id,\n    { action, status, documentId, assignedPartyId, creatorId }\n  ) {\n    return this.documentActionGateway.updateById(id, {\n      action,\n      status,\n      documentId,\n      assignedPartyId,\n      creatorId\n    })\n  }\n\n  async getDocumentByTransactionId (id) {\n    return this.documentGateway.getByTransactionId(id)\n  }\n\n  async getAllAgentParty (userId) {\n    return this.transactionPartyGateway.getAllAgentParty(userId)\n  }\n\n  async getDocumentById (id) {\n    return this.documentGateway.getById(id, {\n      include: 'actions'\n    })\n  }\n\n  async getDetailedDocumentsForParties (parties) {\n    const documents = parties.map(async party => {\n      return this.documentGateway.getByPartyId(party.id, {\n        include: 'actions'\n      })\n    })\n    return Promise.all(documents)\n  }\n\n  async getDocumentActionsAssignedToParty (partyId, where) {\n    return this.documentActionGateway.findByPartyId(partyId, where)\n  }\n\n  async getDocumentActionsByPartyId (partyId) {\n    return this.documentActionGateway.getByPartyId(partyId)\n  }\n\n  async countDocumentActionsByPartyId (partyId) {\n    return this.documentActionGateway.countDocumentActionsByPartyId(partyId)\n  }\n\n  async getDocumentActionsByDocumentId (documentId) {\n    return this.documentActionGateway.getByDocumentId(documentId)\n  }\n\n  async getTransactionPartyByUserId (transactionId, userId) {\n    return this.transactionPartyGateway.getByTransactionIdAndUserId(\n      transactionId,\n      userId\n    )\n  }\n\n  async getPartiesForTransaction (id) {\n    return this.transactionGateway.findById(id, {\n      include: 'parties'\n    })\n  }\n\n  async getAllTransaction () {\n    return this.transactionGateway.getAllTransaction()\n  }\n\n  async deleteTransactionById (id) {\n    return this.transactionGateway.deleteTransactionById(id)\n  }\n\n  async updateSignDocumentById (documentActionId, { file }) {\n    return this.documentActionGateway.updateSignDocumentById(documentActionId, {\n      file\n    })\n  }\n\n  async archiveTransaction (id) {\n    return this.transactionGateway.archiveTransaction(id)\n  }\n\n  async closeTransaction (id) {\n    return this.transactionGateway.closeTransaction(id)\n  }\n\n  async getTransactionWithUserRoles (id) {\n    return this.transactionGateway.getTransactionWithUserRoles(id)\n  }\n\n  async getAllAgents (id) {\n    return this.transactionGateway.getAllAgentsInTransaction(id)\n  }\n\n  async getAgentTransaction (userId, where, skip, order, limit) {\n    return this.transactionPartyGateway.getAgentTransaction(\n      userId,\n      where,\n      skip,\n      order,\n      limit\n    )\n  }\n\n  async getUriToSignDocument (id, { signers, creatorId }) {\n    return this.documentGateway.getUriToSignDocument(id, { signers, creatorId })\n  }\n\n  async getSignLink (documentId, envelopeId, party) {\n    let name = getFullName(party)\n    if (isEmpty(name)) {\n      const user = await this.userGateway.findById(party.userId)\n      name = user.name || getFullName(user)\n    }\n    return this.documentGateway.getSignLink(documentId, {\n      envelopeId,\n      partyId: party.id,\n      email: party.email,\n      name\n    })\n  }\n\n  async createTransactionParty (data) {\n    const user = await this.userGateway.findByEmail(data.email)\n    // 1. email(not user) -> invite\n    if (!user) {\n      return this.transactionInvitationGateway.create(data)\n    }\n    // 2. email: (user) -> transaction party\n    return this.transactionPartyGateway.create({ ...data, userId: user.id })\n  }\n\n  async getPartyByTransactionIdAndUserId (transactionId, userId) {\n    return this.transactionPartyGateway.getByTransactionIdAndUserId(\n      transactionId,\n      userId\n    )\n  }\n\n  async getPartiesByTransactionId (transactionId) {\n    const parties = await this.transactionPartyGateway.findByTransactionId(\n      transactionId\n    )\n    const promise = parties.map(async party => {\n      let name = getFullName(party)\n      if (isEmpty(name)) {\n        const user = await this.userGateway.findById(party.userId)\n        name = user.name || getFullName(user)\n      }\n      return {\n        ...party,\n        name\n      }\n    })\n    return Promise.all(promise)\n  }\n\n  async makeDoneDocumentAction (actionId) {\n    return this.documentActionGateway.makeDone(actionId)\n  }\n\n  async updateTransactionPercent (transactionId, percent) {\n    return this.transactionGateway.updateTransactionPercent(\n      transactionId,\n      percent\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}