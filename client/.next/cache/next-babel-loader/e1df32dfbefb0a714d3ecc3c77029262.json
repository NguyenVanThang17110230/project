{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar TransactionCommissionGateway =\n/*#__PURE__*/\nfunction () {\n  function TransactionCommissionGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, TransactionCommissionGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(TransactionCommissionGateway, [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restConnector.post(\"/transactionCommissions\", data);\n\n              case 2:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"deleteById\",\n    value: function () {\n      var _deleteById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.restConnector[\"delete\"](\"/transactionCommissions/\".concat(id));\n\n              case 2:\n                _ref2 = _context2.sent;\n                data = _ref2.data;\n                return _context2.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function deleteById(_x2) {\n        return _deleteById.apply(this, arguments);\n      }\n\n      return deleteById;\n    }()\n  }, {\n    key: \"findByTransactionId\",\n    value: function () {\n      var _findByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(transactionId) {\n        var filter, resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                filter = {\n                  where: {\n                    transactionId: transactionId\n                  }\n                };\n                _context3.next = 3;\n                return this.restConnector.get(\"/transactionCommissions?filter=\".concat(_JSON$stringify(filter)));\n\n              case 3:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data[0]);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function findByTransactionId(_x3) {\n        return _findByTransactionId.apply(this, arguments);\n      }\n\n      return findByTransactionId;\n    }()\n  }, {\n    key: \"getAllTransactionCommission\",\n    value: function () {\n      var _getAllTransactionCommission = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.restConnector.get(\"/transactionCommissions\");\n\n              case 2:\n                resp = _context4.sent;\n                return _context4.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getAllTransactionCommission() {\n        return _getAllTransactionCommission.apply(this, arguments);\n      }\n\n      return getAllTransactionCommission;\n    }()\n  }, {\n    key: \"findByCoordinator\",\n    value: function () {\n      var _findByCoordinator = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(coordinatorId) {\n        var filter, currentYear, resp;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                currentYear = new Date().getFullYear();\n                filter = {\n                  where: {\n                    coordinatorId: coordinatorId\n                  },\n                  include: 'transaction',\n                  and: [{\n                    updatedAt: {\n                      lte: new Date(currentYear, 11, 31)\n                    }\n                  }, {\n                    updatedAt: {\n                      gte: new Date(currentYear, 0, 1)\n                    }\n                  }]\n                };\n                _context5.next = 4;\n                return this.restConnector.get(\"/transactionCommissions?filter=\".concat(_JSON$stringify(filter)));\n\n              case 4:\n                resp = _context5.sent;\n                return _context5.abrupt(\"return\", resp.data);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function findByCoordinator(_x4) {\n        return _findByCoordinator.apply(this, arguments);\n      }\n\n      return findByCoordinator;\n    }()\n  }, {\n    key: \"updateById\",\n    value: function () {\n      var _updateById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id, data) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.restConnector.patch(\"/transactionCommissions/\".concat(id), data);\n\n              case 2:\n                resp = _context6.sent;\n                return _context6.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function updateById(_x5, _x6) {\n        return _updateById.apply(this, arguments);\n      }\n\n      return updateById;\n    }()\n  }]);\n\n  return TransactionCommissionGateway;\n}();\n\nexport { TransactionCommissionGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/TransactionCommissionGateway.js"],"names":["TransactionCommissionGateway","restConnector","data","post","resp","id","transactionId","filter","where","get","coordinatorId","currentYear","Date","getFullYear","include","and","updatedAt","lte","gte","patch"],"mappings":";;;;;;IAAqBA,4B;;;AACnB,8CAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD;;;;;;;gDAEaC,I;;;;;;;uBAMO,KAAKD,aAAL,CAAmBE,IAAnB,4BAAmDD,IAAnD,C;;;AAAbE,gBAAAA,I;iDACCA,IAAI,CAACF,I;;;;;;;;;;;;;;;;;;;;;iDAGIG,E;;;;;;;;uBACO,KAAKJ,aAAL,6CACMI,EADN,E;;;;AAAfH,gBAAAA,I,SAAAA,I;kDAGDA,I;;;;;;;;;;;;;;;;;;;;;iDAGkBI,a;;;;;;AACnBC,gBAAAA,M,GAAS;AACbC,kBAAAA,KAAK,EAAE;AACLF,oBAAAA,aAAa,EAAbA;AADK;AADM,iB;;uBAKI,KAAKL,aAAL,CAAmBQ,GAAnB,0CACiB,gBAAeF,MAAf,CADjB,E;;;AAAbH,gBAAAA,I;kDAGCA,IAAI,CAACF,IAAL,CAAU,CAAV,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIY,KAAKD,aAAL,CAAmBQ,GAAnB,2B;;;AAAbL,gBAAAA,I;kDACCA,IAAI,CAACF,I;;;;;;;;;;;;;;;;;;;;;iDAGWQ,a;;;;;;AAGjBC,gBAAAA,W,GAAc,IAAIC,IAAJ,GAAWC,WAAX,E;AACpBN,gBAAAA,MAAM,GAAG;AACPC,kBAAAA,KAAK,EAAE;AAAEE,oBAAAA,aAAa,EAAbA;AAAF,mBADA;AAEPI,kBAAAA,OAAO,EAAE,aAFF;AAGPC,kBAAAA,GAAG,EAAE,CACH;AACEC,oBAAAA,SAAS,EAAE;AACTC,sBAAAA,GAAG,EAAE,IAAIL,IAAJ,CAASD,WAAT,EAAsB,EAAtB,EAA0B,EAA1B;AADI;AADb,mBADG,EAMH;AACEK,oBAAAA,SAAS,EAAE;AACTE,sBAAAA,GAAG,EAAE,IAAIN,IAAJ,CAASD,WAAT,EAAsB,CAAtB,EAAyB,CAAzB;AADI;AADb,mBANG;AAHE,iBAAT;;uBAiBmB,KAAKV,aAAL,CAAmBQ,GAAnB,0CACiB,gBAAeF,MAAf,CADjB,E;;;AAAbH,gBAAAA,I;kDAGCA,IAAI,CAACF,I;;;;;;;;;;;;;;;;;;;;;iDAGIG,E,EAAIH,I;;;;;;;uBACD,KAAKD,aAAL,CAAmBkB,KAAnB,mCACUd,EADV,GAEjBH,IAFiB,C;;;AAAbE,gBAAAA,I;kDAICA,IAAI,CAACF,I;;;;;;;;;;;;;;;;;;;;;SAvEKF,4B","sourcesContent":["export default class TransactionCommissionGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async create (data: {\n    totalCommission: number,\n    regionalSplit: number,\n    transactionId: string,\n    coordinatorId: string\n  }) {\n    const resp = await this.restConnector.post(`/transactionCommissions`, data)\n    return resp.data\n  }\n\n  async deleteById (id) {\n    const { data } = await this.restConnector.delete(\n      `/transactionCommissions/${id}`\n    )\n    return data\n  }\n\n  async findByTransactionId (transactionId) {\n    const filter = {\n      where: {\n        transactionId\n      }\n    }\n    const resp = await this.restConnector.get(\n      `/transactionCommissions?filter=${JSON.stringify(filter)}`\n    )\n    return resp.data[0]\n  }\n\n  async getAllTransactionCommission () {\n    const resp = await this.restConnector.get(`/transactionCommissions`)\n    return resp.data\n  }\n\n  async findByCoordinator (coordinatorId) {\n    let filter\n\n    const currentYear = new Date().getFullYear()\n    filter = {\n      where: { coordinatorId },\n      include: 'transaction',\n      and: [\n        {\n          updatedAt: {\n            lte: new Date(currentYear, 11, 31)\n          }\n        },\n        {\n          updatedAt: {\n            gte: new Date(currentYear, 0, 1)\n          }\n        }\n      ]\n    }\n\n    const resp = await this.restConnector.get(\n      `/transactionCommissions?filter=${JSON.stringify(filter)}`\n    )\n    return resp.data\n  }\n\n  async updateById (id, data) {\n    const resp = await this.restConnector.patch(\n      `/transactionCommissions/${id}`,\n      data\n    )\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}