{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar TransactionDetailGateway =\n/*#__PURE__*/\nfunction () {\n  function TransactionDetailGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, TransactionDetailGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(TransactionDetailGateway, [{\n    key: \"updateDetail\",\n    value: function () {\n      var _updateDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id, _ref2) {\n        var yearBuilt, bedrooms, squareFootage, schoolDistrict, type, bathrooms, lotSize, country, streetNumber, streetName, unitNumber, city, state, postalCode, county, mlsNumber, taxId, resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                yearBuilt = _ref2.yearBuilt, bedrooms = _ref2.bedrooms, squareFootage = _ref2.squareFootage, schoolDistrict = _ref2.schoolDistrict, type = _ref2.type, bathrooms = _ref2.bathrooms, lotSize = _ref2.lotSize, country = _ref2.country, streetNumber = _ref2.streetNumber, streetName = _ref2.streetName, unitNumber = _ref2.unitNumber, city = _ref2.city, state = _ref2.state, postalCode = _ref2.postalCode, county = _ref2.county, mlsNumber = _ref2.mlsNumber, taxId = _ref2.taxId;\n                _context.next = 3;\n                return this.restConnector.patch(\"/transactionDetails/\".concat(id), {\n                  yearBuilt: yearBuilt,\n                  bedrooms: bedrooms,\n                  squareFootage: squareFootage,\n                  schoolDistrict: schoolDistrict,\n                  type: type,\n                  bathrooms: bathrooms,\n                  lotSize: lotSize,\n                  country: country,\n                  streetNumber: streetNumber,\n                  streetName: streetName,\n                  unitNumber: unitNumber,\n                  city: city,\n                  state: state,\n                  postalCode: postalCode,\n                  county: county,\n                  mlsNumber: mlsNumber,\n                  taxId: taxId\n                });\n\n              case 3:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateDetail(_x, _x2) {\n        return _updateDetail.apply(this, arguments);\n      }\n\n      return updateDetail;\n    }()\n  }, {\n    key: \"createNewTransactionDetail\",\n    value: function () {\n      var _createNewTransactionDetail = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref3) {\n        var yearBuilt, bedrooms, squareFootage, schoolDistrict, type, bathrooms, lotSize, country, streetNumber, streetName, unitNumber, city, state, postalCode, county, mlsNumber, taxId, resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                yearBuilt = _ref3.yearBuilt, bedrooms = _ref3.bedrooms, squareFootage = _ref3.squareFootage, schoolDistrict = _ref3.schoolDistrict, type = _ref3.type, bathrooms = _ref3.bathrooms, lotSize = _ref3.lotSize, country = _ref3.country, streetNumber = _ref3.streetNumber, streetName = _ref3.streetName, unitNumber = _ref3.unitNumber, city = _ref3.city, state = _ref3.state, postalCode = _ref3.postalCode, county = _ref3.county, mlsNumber = _ref3.mlsNumber, taxId = _ref3.taxId;\n                _context2.next = 3;\n                return this.restConnector.post(\"/transactionDetails\", {\n                  yearBuilt: yearBuilt,\n                  bedrooms: bedrooms,\n                  squareFootage: squareFootage,\n                  schoolDistrict: schoolDistrict,\n                  type: type,\n                  bathrooms: bathrooms,\n                  lotSize: lotSize,\n                  country: country,\n                  streetNumber: streetNumber,\n                  streetName: streetName,\n                  unitNumber: unitNumber,\n                  city: city,\n                  state: state,\n                  postalCode: postalCode,\n                  county: county,\n                  mlsNumber: mlsNumber,\n                  taxId: taxId\n                });\n\n              case 3:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createNewTransactionDetail(_x3) {\n        return _createNewTransactionDetail.apply(this, arguments);\n      }\n\n      return createNewTransactionDetail;\n    }()\n  }, {\n    key: \"getById\",\n    value: function () {\n      var _getById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(transactionId) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.restConnector.get(\"/transactionDetails?filter={\\\"where\\\":{\\\"transactionId\\\":\\\"\".concat(transactionId, \"\\\"},\\\"order\\\":\\\"createdAt DESC\\\"}\"));\n\n              case 2:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getById(_x4) {\n        return _getById.apply(this, arguments);\n      }\n\n      return getById;\n    }()\n  }]);\n\n  return TransactionDetailGateway;\n}();\n\nexport { TransactionDetailGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/TransactionDetailGateway.js"],"names":["TransactionDetailGateway","restConnector","id","yearBuilt","bedrooms","squareFootage","schoolDistrict","type","bathrooms","lotSize","country","streetNumber","streetName","unitNumber","city","state","postalCode","county","mlsNumber","taxId","patch","resp","data","post","transactionId","get"],"mappings":"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","sourcesContent":["export default class TransactionDetailGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async updateDetail (\n    id,\n    {\n      yearBuilt,\n      bedrooms,\n      squareFootage,\n      schoolDistrict,\n      type,\n      bathrooms,\n      lotSize,\n      country,\n      streetNumber,\n      streetName,\n      unitNumber,\n      city,\n      state,\n      postalCode,\n      county,\n      mlsNumber,\n      taxId\n    }\n  ) {\n    const resp = await this.restConnector.patch(`/transactionDetails/${id}`, {\n      yearBuilt,\n      bedrooms,\n      squareFootage,\n      schoolDistrict,\n      type,\n      bathrooms,\n      lotSize,\n      country,\n      streetNumber,\n      streetName,\n      unitNumber,\n      city,\n      state,\n      postalCode,\n      county,\n      mlsNumber,\n      taxId\n    })\n    return resp.data\n  }\n\n  async createNewTransactionDetail ({\n    yearBuilt,\n    bedrooms,\n    squareFootage,\n    schoolDistrict,\n    type,\n    bathrooms,\n    lotSize,\n    country,\n    streetNumber,\n    streetName,\n    unitNumber,\n    city,\n    state,\n    postalCode,\n    county,\n    mlsNumber,\n    taxId\n  }) {\n    const resp = await this.restConnector.post(`/transactionDetails`, {\n      yearBuilt,\n      bedrooms,\n      squareFootage,\n      schoolDistrict,\n      type,\n      bathrooms,\n      lotSize,\n      country,\n      streetNumber,\n      streetName,\n      unitNumber,\n      city,\n      state,\n      postalCode,\n      county,\n      mlsNumber,\n      taxId\n    })\n    return resp.data\n  }\n\n  async getById (transactionId) {\n    const resp = await this.restConnector.get(\n      `/transactionDetails?filter={\"where\":{\"transactionId\":\"${transactionId}\"},\"order\":\"createdAt DESC\"}`\n    )\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}