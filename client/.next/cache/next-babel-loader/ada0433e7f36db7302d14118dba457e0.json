{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport { TransactionStatus, TransactionTypeStatus } from '../../common/models/Transaction';\n\nvar TransactionGateway =\n/*#__PURE__*/\nfunction () {\n  function TransactionGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, TransactionGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(TransactionGateway, [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restConnector.post(\"/transactions\", data);\n\n              case 2:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"findById\",\n    value: function () {\n      var _findById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id, options) {\n        var url, resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                url = options ? \"/transactions/\".concat(id, \"?filter={\\\"include\\\":\").concat(_JSON$stringify(options.include), \"}\") : \"/transactions/\".concat(id);\n                _context2.next = 4;\n                return this.restConnector.get(url);\n\n              case 4:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", null);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      function findById(_x2, _x3) {\n        return _findById.apply(this, arguments);\n      }\n\n      return findById;\n    }()\n  }, {\n    key: \"updateById\",\n    value: function () {\n      var _updateById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id, _ref2) {\n        var address, transactionType, transactionTypeStatus, url, description, closingDate, status, resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                address = _ref2.address, transactionType = _ref2.transactionType, transactionTypeStatus = _ref2.transactionTypeStatus, url = _ref2.url, description = _ref2.description, closingDate = _ref2.closingDate, status = _ref2.status;\n                _context3.next = 3;\n                return this.restConnector.patch(\"/transactions/\".concat(id), {\n                  address: address,\n                  transactionType: transactionType,\n                  transactionTypeStatus: transactionTypeStatus,\n                  url: url,\n                  description: description,\n                  closingDate: closingDate,\n                  status: status\n                });\n\n              case 3:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateById(_x4, _x5) {\n        return _updateById.apply(this, arguments);\n      }\n\n      return updateById;\n    }()\n  }, {\n    key: \"deleteImageById\",\n    value: function () {\n      var _deleteImageById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(transactionId) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.restConnector.patch(\"/transactions/\".concat(transactionId), {\n                  imageURL: ''\n                });\n\n              case 2:\n                resp = _context4.sent;\n                return _context4.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function deleteImageById(_x6) {\n        return _deleteImageById.apply(this, arguments);\n      }\n\n      return deleteImageById;\n    }()\n  }, {\n    key: \"findByOwnerId\",\n    value: function () {\n      var _findByOwnerId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(options) {\n        var url, resp;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                url = options ? \"/users/me/joinedTransactions?filter={\\\"order\\\":\\\"createdAt DESC\\\",\\\"include\\\":\".concat(_JSON$stringify(options.include), \"}\") : \"/users/me/joinedTransactions?filter={\\\"order\\\":\\\"createdAt DESC\\\",\\\"include\\\":\\\"parties\\\"}\";\n                _context5.next = 3;\n                return this.restConnector.get(url);\n\n              case 3:\n                resp = _context5.sent;\n                return _context5.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function findByOwnerId(_x7) {\n        return _findByOwnerId.apply(this, arguments);\n      }\n\n      return findByOwnerId;\n    }()\n  }, {\n    key: \"findByTransactionId\",\n    value: function () {\n      var _findByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.restConnector.get(\"/transactions/\".concat(id));\n\n              case 2:\n                resp = _context6.sent;\n                return _context6.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function findByTransactionId(_x8) {\n        return _findByTransactionId.apply(this, arguments);\n      }\n\n      return findByTransactionId;\n    }()\n  }, {\n    key: \"findByData\",\n    value: function () {\n      var _findByData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(_ref3) {\n        var where, skip, order, limit, include, filter, url, _ref4, data, res;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                where = _ref3.where, skip = _ref3.skip, order = _ref3.order, limit = _ref3.limit, include = _ref3.include;\n                filter = {\n                  where: where,\n                  skip: skip,\n                  order: order,\n                  limit: limit,\n                  include: include\n                };\n                url = \"/transactions?filter=\".concat(_JSON$stringify(filter));\n                _context7.next = 5;\n                return this.restConnector.get(url);\n\n              case 5:\n                _ref4 = _context7.sent;\n                data = _ref4.data;\n                res = data.filter(function (i) {\n                  return i.parties.length > 0;\n                });\n                return _context7.abrupt(\"return\", res);\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function findByData(_x9) {\n        return _findByData.apply(this, arguments);\n      }\n\n      return findByData;\n    }()\n  }, {\n    key: \"createMainImageById\",\n    value: function () {\n      var _createMainImageById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(transactionId, file) {\n        var bodyFormData;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                bodyFormData = new FormData();\n                bodyFormData.append('file', file);\n                return _context8.abrupt(\"return\", this.restConnector({\n                  url: \"/transactions/\".concat(transactionId, \"/upload-main-image\"),\n                  method: 'patch',\n                  data: bodyFormData,\n                  config: {\n                    Headers: {\n                      'Content-Type': 'multipart/form-data'\n                    }\n                  }\n                }).then(function (resp) {\n                  return resp.data;\n                }));\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function createMainImageById(_x10, _x11) {\n        return _createMainImageById.apply(this, arguments);\n      }\n\n      return createMainImageById;\n    }()\n  }, {\n    key: \"getMyTransactions\",\n    value: function () {\n      var _getMyTransactions = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.restConnector.get(\"/users/me/joinedTransactions?filter={\\\"include\\\":\\\"parties\\\", \\\"order\\\":\\\"createdAt DESC\\\"}\");\n\n              case 2:\n                resp = _context9.sent;\n                return _context9.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getMyTransactions() {\n        return _getMyTransactions.apply(this, arguments);\n      }\n\n      return getMyTransactions;\n    }()\n  }, {\n    key: \"getAllTransaction\",\n    value: function () {\n      var _getAllTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.restConnector.get(\"/transactions\");\n\n              case 2:\n                resp = _context10.sent;\n                return _context10.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getAllTransaction() {\n        return _getAllTransaction.apply(this, arguments);\n      }\n\n      return getAllTransaction;\n    }()\n  }, {\n    key: \"archiveTransaction\",\n    value: function () {\n      var _archiveTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.restConnector.patch(\"/transactions/\".concat(id), {\n                  transactionTypeStatus: TransactionTypeStatus.TTS_ARCHIVED,\n                  status: TransactionStatus.ARCHIVED\n                });\n\n              case 2:\n                resp = _context11.sent;\n                return _context11.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function archiveTransaction(_x12) {\n        return _archiveTransaction.apply(this, arguments);\n      }\n\n      return archiveTransaction;\n    }()\n  }, {\n    key: \"closeTransaction\",\n    value: function () {\n      var _closeTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.restConnector.patch(\"/transactions/\".concat(id), {\n                  transactionTypeStatus: TransactionTypeStatus.TTS_CLOSE,\n                  status: TransactionStatus.CLOSED\n                });\n\n              case 2:\n                resp = _context12.sent;\n                return _context12.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function closeTransaction(_x13) {\n        return _closeTransaction.apply(this, arguments);\n      }\n\n      return closeTransaction;\n    }()\n  }, {\n    key: \"deleteTransactionById\",\n    value: function () {\n      var _deleteTransactionById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.restConnector[\"delete\"](\"/transactions/\".concat(id));\n\n              case 2:\n                resp = _context13.sent;\n                return _context13.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function deleteTransactionById(_x14) {\n        return _deleteTransactionById.apply(this, arguments);\n      }\n\n      return deleteTransactionById;\n    }()\n  }, {\n    key: \"getAllAgentsInTransaction\",\n    value: function () {\n      var _getAllAgentsInTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this.restConnector.get(\"/transactions/\".concat(id, \"/agents\"));\n\n              case 2:\n                resp = _context14.sent;\n                return _context14.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function getAllAgentsInTransaction(_x15) {\n        return _getAllAgentsInTransaction.apply(this, arguments);\n      }\n\n      return getAllAgentsInTransaction;\n    }()\n  }, {\n    key: \"updateTransactionPercent\",\n    value: function () {\n      var _updateTransactionPercent = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(id, percent) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.restConnector.patch(\"/transactions/\".concat(id), {\n                  percentComplete: percent\n                });\n\n              case 2:\n                resp = _context15.sent;\n                return _context15.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function updateTransactionPercent(_x16, _x17) {\n        return _updateTransactionPercent.apply(this, arguments);\n      }\n\n      return updateTransactionPercent;\n    }()\n  }]);\n\n  return TransactionGateway;\n}();\n\nexport { TransactionGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/TransactionGateway.js"],"names":["TransactionStatus","TransactionTypeStatus","TransactionGateway","restConnector","data","post","resp","id","options","url","include","get","address","transactionType","transactionTypeStatus","description","closingDate","status","patch","transactionId","imageURL","where","skip","order","limit","filter","res","i","parties","length","file","bodyFormData","FormData","append","method","config","Headers","then","TTS_ARCHIVED","ARCHIVED","TTS_CLOSE","CLOSED","percent","percentComplete"],"mappings":"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","sourcesContent":["import {\n  TransactionStatus,\n  TransactionTypeStatus\n} from '../../common/models/Transaction'\n\nexport default class TransactionGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async create (data: {\n    ownerId: string,\n    address: string,\n    imageURL: string,\n    url: string,\n    description: string,\n    closingDate: Date,\n    transactionType: string,\n    transactionTypeStatus: string,\n    status: string\n  }) {\n    const resp = await this.restConnector.post(`/transactions`, data)\n    return resp.data\n  }\n\n  async findById (id, options) {\n    try {\n      const url = options\n        ? `/transactions/${id}?filter={\"include\":${JSON.stringify(\n          options.include\n        )}}`\n        : `/transactions/${id}`\n      const resp = await this.restConnector.get(url)\n      return resp.data\n    } catch (e) {\n      return null\n    }\n  }\n  async updateById (\n    id,\n    {\n      address,\n      transactionType,\n      transactionTypeStatus,\n      url,\n      description,\n      closingDate,\n      status\n    }\n  ) {\n    const resp = await this.restConnector.patch(`/transactions/${id}`, {\n      address,\n      transactionType,\n      transactionTypeStatus,\n      url,\n      description,\n      closingDate,\n      status\n    })\n    return resp.data\n  }\n  async deleteImageById (transactionId) {\n    const resp = await this.restConnector.patch(\n      `/transactions/${transactionId}`,\n      {\n        imageURL: ''\n      }\n    )\n    return resp.data\n  }\n\n  async findByOwnerId (options) {\n    const url = options\n      ? `/users/me/joinedTransactions?filter={\"order\":\"createdAt DESC\",\"include\":${JSON.stringify(\n        options.include\n      )}}`\n      : `/users/me/joinedTransactions?filter={\"order\":\"createdAt DESC\",\"include\":\"parties\"}`\n    const resp = await this.restConnector.get(url)\n    return resp.data\n  }\n  async findByTransactionId (id) {\n    const resp = await this.restConnector.get(`/transactions/${id}`)\n    return resp.data\n  }\n\n  async findByData ({ where, skip, order, limit, include }) {\n    const filter = { where, skip, order, limit, include }\n    const url = `/transactions?filter=${JSON.stringify(filter)}`\n    const { data } = await this.restConnector.get(url)\n    let res = data.filter(i => i.parties.length > 0)\n    return res\n  }\n\n  async createMainImageById (transactionId, file) {\n    const bodyFormData = new FormData()\n    bodyFormData.append('file', file)\n    return this.restConnector({\n      url: `/transactions/${transactionId}/upload-main-image`,\n      method: 'patch',\n      data: bodyFormData,\n      config: { Headers: { 'Content-Type': 'multipart/form-data' } }\n    }).then(resp => resp.data)\n    // const url = `/transactions/${transactionId}/upload-main-image`\n    // const resp = await this.restConnector.patch(url, file)\n    // return resp.data\n  }\n\n  async getMyTransactions () {\n    const resp = await this.restConnector.get(\n      `/users/me/joinedTransactions?filter={\"include\":\"parties\", \"order\":\"createdAt DESC\"}`\n    )\n    return resp.data\n  }\n\n  async getAllTransaction () {\n    const resp = await this.restConnector.get(`/transactions`)\n    return resp.data\n  }\n\n  async archiveTransaction (id) {\n    const resp = await this.restConnector.patch(`/transactions/${id}`, {\n      transactionTypeStatus: TransactionTypeStatus.TTS_ARCHIVED,\n      status: TransactionStatus.ARCHIVED\n    })\n    return resp.data\n  }\n\n  async closeTransaction (id) {\n    const resp = await this.restConnector.patch(`/transactions/${id}`, {\n      transactionTypeStatus: TransactionTypeStatus.TTS_CLOSE,\n      status: TransactionStatus.CLOSED\n    })\n    return resp.data\n  }\n\n  async deleteTransactionById (id) {\n    const resp = await this.restConnector.delete(`/transactions/${id}`)\n    return resp.data\n  }\n\n  async getAllAgentsInTransaction (id) {\n    const resp = await this.restConnector.get(`/transactions/${id}/agents`)\n    return resp.data\n  }\n\n  async updateTransactionPercent (id, percent) {\n    const resp = await this.restConnector.patch(`/transactions/${id}`, {\n      percentComplete: percent\n    })\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}