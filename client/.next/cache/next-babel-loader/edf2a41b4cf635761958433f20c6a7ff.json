{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar RoleGateway =\n/*#__PURE__*/\nfunction () {\n  function RoleGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, RoleGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(RoleGateway, [{\n    key: \"find\",\n    value: function () {\n      var _find = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref2) {\n        var where, skip, order, limit, resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                where = _ref2.where, skip = _ref2.skip, order = _ref2.order, limit = _ref2.limit;\n                _context.next = 3;\n                return this.restConnector.get(\"/roles\", {\n                  params: {\n                    filter: {\n                      where: where,\n                      skip: skip,\n                      order: order,\n                      limit: limit\n                    }\n                  }\n                });\n\n              case 3:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function find(_x) {\n        return _find.apply(this, arguments);\n      }\n\n      return find;\n    }()\n  }, {\n    key: \"findOne\",\n    value: function () {\n      var _findOne = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref3) {\n        var where, skip, order, limit, resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                where = _ref3.where, skip = _ref3.skip, order = _ref3.order, limit = _ref3.limit;\n                _context2.next = 3;\n                return this.restConnector.get(\"/Roles/findOne\", {\n                  params: {\n                    filter: {\n                      where: where,\n                      skip: skip,\n                      order: order,\n                      limit: limit\n                    }\n                  }\n                });\n\n              case 3:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function findOne(_x2) {\n        return _findOne.apply(this, arguments);\n      }\n\n      return findOne;\n    }()\n  }, {\n    key: \"findPrincipals\",\n    value: function () {\n      var _findPrincipals = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(roleId, _ref4) {\n        var where, skip, order, limit, resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                where = _ref4.where, skip = _ref4.skip, order = _ref4.order, limit = _ref4.limit;\n                _context3.next = 3;\n                return this.restConnector.get(\"/Roles/\".concat(roleId, \"/principals\"), {\n                  params: {\n                    filter: {\n                      where: where,\n                      skip: skip,\n                      order: order,\n                      limit: limit\n                    }\n                  }\n                });\n\n              case 3:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function findPrincipals(_x3, _x4) {\n        return _findPrincipals.apply(this, arguments);\n      }\n\n      return findPrincipals;\n    }()\n  }, {\n    key: \"createPrincipal\",\n    value: function () {\n      var _createPrincipal = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_ref5) {\n        var roleId, principalId, _ref5$principalType, principalType, resp;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                roleId = _ref5.roleId, principalId = _ref5.principalId, _ref5$principalType = _ref5.principalType, principalType = _ref5$principalType === void 0 ? 'USER' : _ref5$principalType;\n                _context4.next = 3;\n                return this.restConnector.post(\"/Roles/\".concat(roleId, \"/principals\"), {\n                  roleId: roleId,\n                  principalId: principalId,\n                  principalType: principalType\n                });\n\n              case 3:\n                resp = _context4.sent;\n                return _context4.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function createPrincipal(_x5) {\n        return _createPrincipal.apply(this, arguments);\n      }\n\n      return createPrincipal;\n    }()\n  }, {\n    key: \"deletePrincipal\",\n    value: function () {\n      var _deletePrincipal = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(_ref6) {\n        var roleId, id, resp;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                roleId = _ref6.roleId, id = _ref6.id;\n                _context5.next = 3;\n                return this.restConnector[\"delete\"](\"/Roles/\".concat(roleId, \"/principals/\").concat(id));\n\n              case 3:\n                resp = _context5.sent;\n                return _context5.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deletePrincipal(_x6) {\n        return _deletePrincipal.apply(this, arguments);\n      }\n\n      return deletePrincipal;\n    }()\n  }]);\n\n  return RoleGateway;\n}();\n\nexport { RoleGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/RoleGateway.js"],"names":["RoleGateway","restConnector","where","skip","order","limit","get","params","filter","resp","data","roleId","principalId","principalType","post","id"],"mappings":";;;;;IAAqBA,W;;;AACnB,6BAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD;;;;;;;;;;;;;AAEaC,gBAAAA,K,SAAAA,K,EAAOC,I,SAAAA,I,EAAMC,K,SAAAA,K,EAAOC,K,SAAAA,K;;uBACb,KAAKJ,aAAL,CAAmBK,GAAnB,WAAiC;AAClDC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,MAAM,EAAE;AAAEN,sBAAAA,KAAK,EAALA,KAAF;AAASC,sBAAAA,IAAI,EAAJA,IAAT;AAAeC,sBAAAA,KAAK,EAALA,KAAf;AAAsBC,sBAAAA,KAAK,EAALA;AAAtB;AADF;AAD0C,iBAAjC,C;;;AAAbI,gBAAAA,I;iDAMCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGGR,gBAAAA,K,SAAAA,K,EAAOC,I,SAAAA,I,EAAMC,K,SAAAA,K,EAAOC,K,SAAAA,K;;uBAChB,KAAKJ,aAAL,CAAmBK,GAAnB,mBAAyC;AAC1DC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,MAAM,EAAE;AAAEN,sBAAAA,KAAK,EAALA,KAAF;AAASC,sBAAAA,IAAI,EAAJA,IAAT;AAAeC,sBAAAA,KAAK,EAALA,KAAf;AAAsBC,sBAAAA,KAAK,EAALA;AAAtB;AADF;AADkD,iBAAzC,C;;;AAAbI,gBAAAA,I;kDAMCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;iDAGQC,M;;;;;;AAAUT,gBAAAA,K,SAAAA,K,EAAOC,I,SAAAA,I,EAAMC,K,SAAAA,K,EAAOC,K,SAAAA,K;;uBAC/B,KAAKJ,aAAL,CAAmBK,GAAnB,kBAAiCK,MAAjC,kBAAsD;AACvEJ,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,MAAM,EAAE;AAAEN,sBAAAA,KAAK,EAALA,KAAF;AAASC,sBAAAA,IAAI,EAAJA,IAAT;AAAeC,sBAAAA,KAAK,EAALA,KAAf;AAAsBC,sBAAAA,KAAK,EAALA;AAAtB;AADF;AAD+D,iBAAtD,C;;;AAAbI,gBAAAA,I;kDAKCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGWC,gBAAAA,M,SAAAA,M,EAAQC,W,SAAAA,W,8BAAaC,a,EAAAA,a,oCAAgB,M;;uBACzC,KAAKZ,aAAL,CAAmBa,IAAnB,kBAAkCH,MAAlC,kBAAuD;AACxEA,kBAAAA,MAAM,EAANA,MADwE;AAExEC,kBAAAA,WAAW,EAAXA,WAFwE;AAGxEC,kBAAAA,aAAa,EAAbA;AAHwE,iBAAvD,C;;;AAAbJ,gBAAAA,I;kDAKCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGWC,gBAAAA,M,SAAAA,M,EAAQI,E,SAAAA,E;;uBACZ,KAAKd,aAAL,4BACPU,MADO,yBACcI,EADd,E;;;AAAbN,gBAAAA,I;kDAGCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;SA/CKV,W","sourcesContent":["export default class RoleGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async find ({ where, skip, order, limit }) {\n    const resp = await this.restConnector.get(`/roles`, {\n      params: {\n        filter: { where, skip, order, limit }\n      }\n    })\n\n    return resp.data\n  }\n\n  async findOne ({ where, skip, order, limit }) {\n    const resp = await this.restConnector.get(`/Roles/findOne`, {\n      params: {\n        filter: { where, skip, order, limit }\n      }\n    })\n\n    return resp.data\n  }\n\n  async findPrincipals (roleId, { where, skip, order, limit }) {\n    const resp = await this.restConnector.get(`/Roles/${roleId}/principals`, {\n      params: {\n        filter: { where, skip, order, limit }\n      }\n    })\n    return resp.data\n  }\n\n  async createPrincipal ({ roleId, principalId, principalType = 'USER' }) {\n    const resp = await this.restConnector.post(`/Roles/${roleId}/principals`, {\n      roleId,\n      principalId,\n      principalType\n    })\n    return resp.data\n  }\n\n  async deletePrincipal ({ roleId, id }) {\n    const resp = await this.restConnector.delete(\n      `/Roles/${roleId}/principals/${id}`\n    )\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}