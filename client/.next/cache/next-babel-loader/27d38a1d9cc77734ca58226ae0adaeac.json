{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport toastr from 'toastr';\nimport { Link, Router } from '../../common/routes';\nimport authRedux from '../redux/authRedux';\nimport { isAdmin, isUser } from '../../common/models/User';\nimport guestOnly from '../hocs/guestOnly';\nimport AuthService from '../services/AuthService';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      password: '',\n      isChecked: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loginSubmit\", function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          isChecked = _this$state.isChecked;\n\n      if (isChecked && email !== '') {\n        localStorage.username = email;\n        localStorage.password = password;\n        localStorage.checkbox = isChecked;\n      } // here call the API to signup/login\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateFormField\", function (field) {\n      return function (e) {\n        return _this.setState(_defineProperty({}, field, e.target.value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$props, dispatch, i18n, _this$state2, email, password, user, nextPage;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$props = _this.props, dispatch = _this$props.dispatch, i18n = _this$props.i18n;\n                _this$state2 = _this.state, email = _this$state2.email, password = _this$state2.password;\n                _context.prev = 3;\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context.next = 7;\n                return dispatch(authRedux.loginWithEmail({\n                  email: email,\n                  password: password\n                }));\n\n              case 7:\n                user = _context.sent;\n                i18n.changeLanguage(user.preferredLanguage || 'en');\n                nextPage = isAdmin(user) ? '/admin' : isUser(user) ? '/my-transactions' : '/';\n                _context.next = 12;\n                return Router.replaceRoute(nextPage);\n\n              case 12:\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](3);\n\n                _this.setState({\n                  loading: false\n                });\n\n                toastr.error(_this._getErrorMsg(_context.t0));\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_getErrorMsg\", function (e) {\n      var t = _this.props.t;\n\n      switch (e.name) {\n        case 'ApplicationError':\n          {\n            switch (e.code) {\n              case AuthService.Error.LOGIN_FAILED:\n                {\n                  return t('common:errInvalidEmailOrPassword');\n                }\n\n              case AuthService.Error.ACCOUNT_INACTIVATED:\n                {\n                  return 'This account has been deactivated. Please contact admin for further information.';\n                }\n            }\n          }\n      }\n\n      return e.message;\n    });\n\n    _this.state = {\n      email: '',\n      password: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          loading = _this$state3.loading; // const { loading } = this.state\n\n      var t = this.props.t;\n      return React.createElement(\"div\", null, React.createElement(Head, null, React.createElement(\"title\", null, t('common:signIn')), React.createElement(\"script\", {\n        src: \"../static/js/elite/custom.min.js\"\n      })), React.createElement(\"div\", {\n        className: \"row login-page\"\n      }, React.createElement(\"div\", {\n        className: \"login-page_left d-sm-none d-md-flex col-md-4 col-lg-4 d-flex justify-content-center align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"container w-75\"\n      }, React.createElement(\"img\", {\n        className: \"img-left mb-5 \",\n        src: \"../static/images/New/new-link-white.png\"\n      }), React.createElement(\"div\", {\n        className: \"link-welcome\"\n      }, React.createElement(\"div\", {\n        className: \"text-white\"\n      }, React.createElement(\"div\", {\n        className: \"form-group \"\n      }, React.createElement(\"h3\", {\n        className: \"th-font-w-5\"\n      }, \"Welcome to Link!\"), React.createElement(\"div\", {\n        className: \"paragraph-login\"\n      }, \"A cloud-based, full-service brokerage offering all the perks of a standard brokerage without the large splits or hidden fees.\")), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(Link, {\n        route: \"https://www.linkbrokerages.com/join-as-an-agent\"\n      }, React.createElement(\"a\", {\n        target: \"_blank\"\n      }, React.createElement(\"button\", {\n        className: \"btn btn--primary learn-more-btn\",\n        type: \"button\"\n      }, t(\"common:learnMore\"))))))))), React.createElement(\"div\", {\n        className: \"col-sm-12 col-md-8 col-lg-8 login-page_right d-flex flex-column justify-content-center align-items-center\"\n      }, React.createElement(\"img\", {\n        className: \"img-right mt-5\",\n        src: \"../static/images/New/new-link.png\",\n        alt: \"icon-link\"\n      }), React.createElement(\"p\", {\n        className: \"text-center text-login font-dmsans mb-5\"\n      }, t(\"common:signInToYourDashboard\")), React.createElement(\"form\", {\n        onSubmit: this._onSubmit,\n        className: \"w-100 d-flex justify-content-center\"\n      }, React.createElement(\"div\", {\n        className: \"login-page_right__container \"\n      }, React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: t(\"common:enterYourEmail\"),\n        className: \"input form-control input-right\",\n        onChange: this._updateFormField('email'),\n        value: email\n      })), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: t(\"common:enterYourPassword\"),\n        className: \"input form-control input-right\",\n        onChange: this._updateFormField('password'),\n        value: password\n      })), React.createElement(\"div\", {\n        className: \"form-check\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input \",\n        id: \"remember-me\",\n        onChange: this._updateFormField\n      }), React.createElement(\"label\", {\n        className: \"form-check-label check-box-login remember-input\",\n        htmlFor: \"remember-me\"\n      }, t(\"common:rememberMe\"))), React.createElement(\"div\", {\n        className: \"form-group mt-4\"\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn--primary form-control input-right-button text-white\",\n        disabled: loading,\n        onClick: this.loginSubmit\n      }, t('login'))), React.createElement(\"div\", {\n        className: \"form-group text-center text-forgot-pass\"\n      }, React.createElement(Link, {\n        route: \"/reset-password\"\n      }, React.createElement(\"a\", {\n        className: \"text--blue text-forgot-password text-bold-forget-pass\"\n      }, t(\"common:forgotYourPassword\"))))))))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $('.floating-labels .form-control').on('focus blur', function (e) {\n        $(this).parents('.form-group').toggleClass('focused', e.type === 'focus' || this.value.length > 0);\n      }).trigger('blur');\n\n      if (localStorage.checkbox && localStorage.checkbox !== '') {\n        this.setState({\n          isChecked: true,\n          email: localStorage.username,\n          password: localStorage.password\n        });\n      }\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\n_defineProperty(LoginPage, \"displayName\", 'RememberMe');\n\nexport default compose(guestOnly, connect())(LoginPage);","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/LoginPage.js"],"names":["React","Component","Head","compose","connect","toastr","Link","Router","authRedux","isAdmin","isUser","guestOnly","AuthService","LoginPage","props","email","password","isChecked","state","localStorage","username","checkbox","field","e","setState","target","value","preventDefault","dispatch","i18n","loading","loginWithEmail","user","changeLanguage","preferredLanguage","nextPage","replaceRoute","error","_getErrorMsg","t","name","code","Error","LOGIN_FAILED","ACCOUNT_INACTIVATED","message","_onSubmit","_updateFormField","loginSubmit","$","on","parents","toggleClass","type","length","trigger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Head from 'next/head'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport toastr from 'toastr'\nimport { Link, Router } from '../../common/routes'\nimport authRedux from '../redux/authRedux'\nimport { isAdmin, isUser } from '../../common/models/User'\nimport guestOnly from '../hocs/guestOnly'\nimport AuthService from '../services/AuthService'\n\nclass LoginPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { email: '', password: '', loading: false }\n  }\n\n  static displayName = 'RememberMe'\n\n  state = {\n    email: '',\n    password: '',\n    isChecked: false\n  }\n\n  render () {\n    const { email, password, loading } = this.state\n    // const { loading } = this.state\n    const { t } = this.props\n    return (\n      <div>\n        <Head>\n          <title>{t('common:signIn')}</title>\n          <script src='../static/js/elite/custom.min.js' />\n        </Head>\n        <div className='row login-page'>\n          <div className='login-page_left d-sm-none d-md-flex col-md-4 col-lg-4 d-flex justify-content-center align-items-center'>\n            <div className='container w-75'>\n              <img\n                className='img-left mb-5 '\n                src='../static/images/New/new-link-white.png'\n              />\n              <div className='link-welcome'>\n                <div className='text-white'>\n                  <div className='form-group '>\n                    <h3 className='th-font-w-5'>Welcome to Link!</h3>\n                    <div className='paragraph-login'>\n                      A cloud-based, full-service brokerage offering all the\n                      perks of a standard brokerage without the large splits or\n                      hidden fees.\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <Link route='https://www.linkbrokerages.com/join-as-an-agent'>\n                      <a target='_blank'>\n                        <button\n                          className='btn btn--primary learn-more-btn'\n                          type='button'\n                        >\n                          {t(`common:learnMore`)}\n                        </button>\n                      </a>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='col-sm-12 col-md-8 col-lg-8 login-page_right d-flex flex-column justify-content-center align-items-center'>\n            <img\n              className='img-right mt-5'\n              src='../static/images/New/new-link.png'\n              alt='icon-link'\n            />\n            <p className='text-center text-login font-dmsans mb-5'>\n              {t(`common:signInToYourDashboard`)}\n            </p>\n            <form\n              onSubmit={this._onSubmit}\n              className='w-100 d-flex justify-content-center'\n            >\n              <div className='login-page_right__container '>\n                <div>\n                  <div className='form-group'>\n                    <input\n                      type='text'\n                      placeholder={t(`common:enterYourEmail`)}\n                      className='input form-control input-right'\n                      onChange={this._updateFormField('email')}\n                      value={email}\n                    />\n                  </div>\n                  <div className='form-group'>\n                    <input\n                      type='password'\n                      placeholder={t(`common:enterYourPassword`)}\n                      className='input form-control input-right'\n                      onChange={this._updateFormField('password')}\n                      value={password}\n                    />\n                  </div>\n                  <div className='form-check'>\n                    <input\n                      type='checkbox'\n                      className='form-check-input '\n                      id='remember-me'\n                      onChange={this._updateFormField}\n                    />\n                    <label\n                      className='form-check-label check-box-login remember-input'\n                      htmlFor='remember-me'\n                    >\n                      {t(`common:rememberMe`)}\n                    </label>\n                  </div>\n                  <div className='form-group mt-4'>\n                    <button\n                      type='submit'\n                      className='btn btn--primary form-control input-right-button text-white'\n                      disabled={loading}\n                      onClick={this.loginSubmit}\n                    >\n                      {t('login')}\n                    </button>\n                  </div>\n                  <div className='form-group text-center text-forgot-pass'>\n                    <Link route='/reset-password'>\n                      <a className='text--blue text-forgot-password text-bold-forget-pass'>\n                        {t(`common:forgotYourPassword`)}\n                      </a>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </form>\n\n            {/* <div className='login-page_right__container '>\n              <div>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder={t(`common:enterYourEmail`)}\n                    className='input form-control input-right'\n                    onChange={this._updateFormField('email')}\n                    value={email}\n                  />\n                </div>\n                <div className='form-group'>\n                  <input\n                    type='password'\n                    placeholder={t(`common:enterYourPassword`)}\n                    className='input form-control input-right'\n                    onChange={this._updateFormField('password')}\n                    value={password}\n                  />\n                </div>\n                <div className='form-check'>\n                  <input\n                    type='checkbox'\n                    className='form-check-input '\n                    id='remember-me'\n                    onChange={this._updateFormField}\n                  />\n                  <label\n                    className='form-check-label check-box-login remember-input'\n                    htmlFor='remember-me'\n                  >\n                    {t(`common:rememberMe`)}\n                  </label>\n                </div>\n                <div className='form-group mt-4'>\n                  <button\n                    type='submit'\n                    className='btn btn--primary form-control input-right-button'\n                    disabled={loading}\n                  >\n                    {t('login')}\n                  </button>\n                </div>\n                <div className='form-group text-center text-forgot-pass'>\n                  <Link route='/reset-password'>\n                    <a className='text--blue text-forgot-password text-bold-forget-pass'>\n                      {t(`common:forgotYourPassword`)}\n                    </a>\n                  </Link>\n                </div>\n              </div>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount () {\n    $('.floating-labels .form-control')\n      .on('focus blur', function (e) {\n        $(this)\n          .parents('.form-group')\n          .toggleClass('focused', e.type === 'focus' || this.value.length > 0)\n      })\n      .trigger('blur')\n\n    if (localStorage.checkbox && localStorage.checkbox !== '') {\n      this.setState({\n        isChecked: true,\n        email: localStorage.username,\n        password: localStorage.password\n      })\n    }\n  }\n\n  loginSubmit = () => {\n    const { email, password, isChecked } = this.state\n    if (isChecked && email !== '') {\n      localStorage.username = email\n      localStorage.password = password\n      localStorage.checkbox = isChecked\n    }\n\n    // here call the API to signup/login\n  }\n\n  _updateFormField = field => e => this.setState({ [field]: e.target.value })\n\n  _onSubmit = async e => {\n    e.preventDefault()\n\n    const { dispatch, i18n } = this.props\n    const { email, password } = this.state\n\n    try {\n      this.setState({ loading: true })\n      const user = await dispatch(authRedux.loginWithEmail({ email, password }))\n      i18n.changeLanguage(user.preferredLanguage || 'en')\n      const nextPage = isAdmin(user)\n        ? '/admin'\n        : isUser(user)\n          ? '/my-transactions'\n          : '/'\n      await Router.replaceRoute(nextPage)\n      // await location.reload()\n    } catch (e) {\n      this.setState({ loading: false })\n      toastr.error(this._getErrorMsg(e))\n    }\n  }\n\n  _getErrorMsg = e => {\n    const { t } = this.props\n    switch (e.name) {\n      case 'ApplicationError': {\n        switch (e.code) {\n          case AuthService.Error.LOGIN_FAILED: {\n            return t('common:errInvalidEmailOrPassword')\n          }\n          case AuthService.Error.ACCOUNT_INACTIVATED: {\n            return 'This account has been deactivated. Please contact admin for further information.'\n          }\n        }\n      }\n    }\n    return e.message\n  }\n}\n\nexport default compose(\n  guestOnly,\n  connect()\n)(LoginPage)\n"]},"metadata":{},"sourceType":"module"}