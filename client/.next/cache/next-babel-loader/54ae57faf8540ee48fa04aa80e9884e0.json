{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar TransactionInvitationGateway =\n/*#__PURE__*/\nfunction () {\n  function TransactionInvitationGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, TransactionInvitationGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(TransactionInvitationGateway, [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restConnector.post(\"/transactionInvitations\", data);\n\n              case 2:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"findById\",\n    value: function () {\n      var _findById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id, options) {\n        var url, resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                url = options ? \"/transactionInvitations/\".concat(id, \"?filter={\\\"include\\\":\\\"\").concat(options.include, \"\\\"}\") : \"/transactionInvitations/\".concat(id);\n                _context2.next = 4;\n                return this.restConnector.get(url);\n\n              case 4:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                return _context2.abrupt(\"return\", null);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      function findById(_x2, _x3) {\n        return _findById.apply(this, arguments);\n      }\n\n      return findById;\n    }()\n  }, {\n    key: \"getByTransactionId\",\n    value: function () {\n      var _getByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(transactionId) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.restConnector.get(\"/transactionInvitations?filter={\\\"where\\\":{\\\"transactionId\\\":\\\"\".concat(transactionId, \"\\\"}}\"));\n\n              case 2:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getByTransactionId(_x4) {\n        return _getByTransactionId.apply(this, arguments);\n      }\n\n      return getByTransactionId;\n    }()\n  }]);\n\n  return TransactionInvitationGateway;\n}();\n\nexport { TransactionInvitationGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/TransactionInvitationGateway.js"],"names":["TransactionInvitationGateway","restConnector","data","post","resp","id","options","url","include","get","transactionId"],"mappings":";;;;;IAAqBA,4B;;;AACnB,8CAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD;;;;;;;gDAEaC,I;;;;;;;uBASO,KAAKD,aAAL,CAAmBE,IAAnB,4BAAmDD,IAAnD,C;;;AAAbE,gBAAAA,I;iDACCA,IAAI,CAACF,I;;;;;;;;;;;;;;;;;;;;;iDAGEG,E,EAAIC,O;;;;;;;AAEVC,gBAAAA,G,GAAMD,OAAO,qCACYD,EADZ,oCAEfC,OAAO,CAACE,OAFO,6CAIYH,EAJZ,C;;uBAKA,KAAKJ,aAAL,CAAmBQ,GAAnB,CAAuBF,GAAvB,C;;;AAAbH,gBAAAA,I;kDACCA,IAAI,CAACF,I;;;;;kDAEL,I;;;;;;;;;;;;;;;;;;;;;iDAIeQ,a;;;;;;;uBACL,KAAKT,aAAL,CAAmBQ,GAAnB,0EAC4CC,aAD5C,U;;;AAAbN,gBAAAA,I;kDAGCA,IAAI,CAACF,I;;;;;;;;;;;;;;;;;;;;;SApCKF,4B","sourcesContent":["export default class TransactionInvitationGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async create (data: {\n    transactionId: string,\n    role: string,\n    firstName: string,\n    lastName: string,\n    email: string,\n    phoneNumber: string,\n    access: string\n  }) {\n    const resp = await this.restConnector.post(`/transactionInvitations`, data)\n    return resp.data\n  }\n\n  async findById (id, options) {\n    try {\n      const url = options\n        ? `/transactionInvitations/${id}?filter={\"include\":\"${\n          options.include\n        }\"}`\n        : `/transactionInvitations/${id}`\n      const resp = await this.restConnector.get(url)\n      return resp.data\n    } catch (e) {\n      return null\n    }\n  }\n\n  async getByTransactionId (transactionId) {\n    const resp = await this.restConnector.get(\n      `/transactionInvitations?filter={\"where\":{\"transactionId\":\"${transactionId}\"}}`\n    )\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}