{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/toConsumableArray\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport Chart from 'chart.js/auto';\nimport { commissionService, userService, transactionService } from '../../services';\nimport { commissionType } from '../../../common/models/CashBalance';\nimport { isCoordinator, isUser, Rank, Levels, CapLimit } from '../../../common/models/User';\nimport userOnly from '../../hocs/userOnly';\nimport { TransactionStatus } from '../../../common/models/Transaction';\nvar MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  _createClass(Dashboard, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(ctx) {\n        var user, _isCoordinator, cashType, commissionThisYear, commissionTotal, commissionPrevYear, allCommission, transactions, dataTran, tcCommission, agentCommission, referral, profitShare, referredList, promise, referredListInfo, managedTransaction, allAgents;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                user = ctx.store.getState().global.loginUser.data;\n\n                if (!isUser(user)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                ctx.res.redirect('/my-transactions');\n                ctx.res.end();\n                return _context2.abrupt(\"return\", {});\n\n              case 5:\n                _isCoordinator = isCoordinator(user);\n                cashType = _isCoordinator ? commissionType.TC_COMMISSION : commissionType.AGENT_COMMISSION;\n                _context2.next = 9;\n                return commissionService.countCommission({\n                  userId: user.id,\n                  type: cashType,\n                  isForThisYear: true\n                });\n\n              case 9:\n                commissionThisYear = _context2.sent;\n                _context2.next = 12;\n                return commissionService.countCommission({\n                  userId: user.id,\n                  type: cashType,\n                  isForThisYear: false\n                });\n\n              case 12:\n                commissionTotal = _context2.sent;\n                _context2.next = 15;\n                return commissionService.countCommissionPrevYear({\n                  userId: user.id,\n                  type: cashType\n                });\n\n              case 15:\n                commissionPrevYear = _context2.sent;\n                _context2.next = 18;\n                return commissionService.getUserCommissionThisYear(user.id);\n\n              case 18:\n                allCommission = _context2.sent;\n                _context2.next = 21;\n                return transactionService.getTransactionsForUser();\n\n              case 21:\n                transactions = _context2.sent;\n                dataTran = transactions.slice(0, 10); // Classify commission by cash type\n\n                tcCommission = allCommission.filter(function (commission) {\n                  return commission.cashType === commissionType.TC_COMMISSION;\n                });\n                agentCommission = allCommission.filter(function (commission) {\n                  return commission.cashType === commissionType.AGENT_COMMISSION;\n                });\n                referral = allCommission.filter(function (commission) {\n                  return commission.cashType === commissionType.REFERRAL;\n                });\n                profitShare = allCommission.filter(function (commission) {\n                  return commission.cashType === commissionType.PROFIT_SHARE;\n                }); // Get referred agents who current user refer\n\n                _context2.next = 29;\n                return userService.getReferredList(user.id);\n\n              case 29:\n                referredList = _context2.sent;\n                // Get information for each referred agent\n                promise = referredList.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(item) {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            return _context.abrupt(\"return\", userService.findUserByEmail(item.email));\n\n                          case 1:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                _context2.next = 33;\n                return _Promise.all(promise);\n\n              case 33:\n                referredListInfo = _context2.sent;\n                _context2.t0 = _isCoordinator;\n\n                if (!_context2.t0) {\n                  _context2.next = 39;\n                  break;\n                }\n\n                _context2.next = 38;\n                return commissionService.getTransactionByCoordinator(user.id);\n\n              case 38:\n                _context2.t0 = _context2.sent;\n\n              case 39:\n                managedTransaction = _context2.t0;\n                _context2.next = 42;\n                return commissionService.getAllAgentCommission();\n\n              case 42:\n                allAgents = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  isCoordinator: _isCoordinator,\n                  commissionThisYear: commissionThisYear.count,\n                  commissionTotal: commissionTotal.count,\n                  commissionPrevYear: commissionPrevYear.count,\n                  allCommission: allCommission,\n                  tcCommission: tcCommission,\n                  agentCommission: agentCommission,\n                  referral: referral,\n                  profitShare: profitShare,\n                  referredListInfo: referredListInfo,\n                  managedTransaction: managedTransaction,\n                  allAgents: allAgents,\n                  headerText: 'Dashboard',\n                  dataTran: dataTran\n                });\n\n              case 44:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewRank\", function () {\n      var _this$props = _this.props,\n          isCoordinator = _this$props.isCoordinator,\n          currentUser = _this$props.currentUser;\n      return React.createElement(\"div\", {\n        className: \"view-rank-db\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex  align-items-center view-rank-db\"\n      }, React.createElement(\"div\", null, isCoordinator ? React.createElement(\"img\", {\n        style: {\n          maxWidth: '80px',\n          maxHeight: '100px'\n        },\n        src: \"static/images/rank/tc.png\"\n      }) : React.createElement(\"img\", {\n        className: \"image-rank\",\n        src: \"/static/images/rank/\".concat(currentUser.rank, \".png\")\n      })), React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: \"text-muted\"\n      }, \"RANK\"), isCoordinator ? React.createElement(\"h3\", null, \"LINK TC\") : React.createElement(\"h3\", null, \"LINK\\xA0\", _this._toUppercase(currentUser.rank, ' ')))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewRankUp\", function () {\n      var currentUser = _this.props.currentUser;\n      return React.createElement(\"div\", {\n        className: \"col-md-3 view-rank-up-db\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex flex-column\"\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"th-square-2\"\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/chevron-up.png\"\n      })), React.createElement(\"h6\", {\n        className: \"text-dark text-uppercase th-font-weight mb-0\"\n      }, _this._findNextLevel() ? \"RANK UP - \".concat(_this._findNextLevel().replace(/-/g, ' ')) : 'MAX LEVEL'))), React.createElement(\"div\", {\n        className: \"col-md-12 mb-1\"\n      }, React.createElement(\"div\", {\n        className: \"ml-auto\"\n      }, React.createElement(\"div\", {\n        className: \"counter th-color-link th-font-weight th-size-2 text-right\"\n      }, \"$\", currentUser.cash.toLocaleString()))), React.createElement(\"div\", {\n        className: \"col-md-12\"\n      }, React.createElement(\"div\", {\n        className: \"progress\"\n      }, React.createElement(\"div\", {\n        className: \"progress-bar th-bg-link\",\n        role: \"progressbar\",\n        style: {\n          width: \"\".concat(_this._getPercentage(), \"%\"),\n          // width:'10px',\n          height: '6px'\n        }\n      })))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewSoleYear\", function () {\n      var _this$props2 = _this.props,\n          isCoordinator = _this$props2.isCoordinator,\n          commissionThisYear = _this$props2.commissionThisYear;\n      return React.createElement(\"div\", {\n        className: \"view-sold-year-db\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex flex-column\"\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"th-square-2\"\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/home.png\"\n      })), React.createElement(\"h6\", {\n        className: \"text-dark th-font-weight mb-0\"\n      }, isCoordinator ? 'PROPERTIES MANAGED THIS YEAR' : 'PROPERTIES SOLD THIS YEAR'))), React.createElement(\"div\", {\n        className: \"col-md-12 mb-1\"\n      }, React.createElement(\"div\", {\n        className: \"ml-auto\"\n      }, React.createElement(\"div\", {\n        className: \"counter th-color-link th-font-weight th-size-2 text-right\"\n      }, commissionThisYear)))), React.createElement(\"div\", {\n        className: \"col-md-12\"\n      }, React.createElement(\"div\", {\n        className: \"progress\"\n      }, React.createElement(\"div\", {\n        className: \"progress-bar th-bg-link\",\n        role: \"progressbar\",\n        style: {\n          height: '6px'\n        }\n      }))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewSoldTotal\", function () {\n      var _this$props3 = _this.props,\n          isCoordinator = _this$props3.isCoordinator,\n          commissionTotal = _this$props3.commissionTotal;\n      return React.createElement(\"div\", {\n        className: \"view-sold-total-db\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex flex-column view-sold-total-db\"\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"th-square-2\"\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/home.png\"\n      })), React.createElement(\"h6\", {\n        className: \"text-dark th-font-weight mb-0\"\n      }, isCoordinator ? 'PROPERTIES MANAGED TOTAL' : 'PROPERTIES SOLD TOTAL'))), React.createElement(\"div\", {\n        className: \"col-md-12 mb-1\"\n      }, React.createElement(\"div\", {\n        className: \"ml-auto\"\n      }, React.createElement(\"div\", {\n        className: \"counter th-color-link th-font-weight th-size-2 text-right\"\n      }, commissionTotal))), React.createElement(\"div\", {\n        className: \"col-md-12\"\n      }, React.createElement(\"div\", {\n        className: \"progress\"\n      }, React.createElement(\"div\", {\n        className: \"progress-bar th-bg-link\",\n        role: \"progressbar\",\n        style: {\n          height: '6px'\n        }\n      })))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewBarChar\", function () {\n      return React.createElement(\"div\", {\n        className: \"col-lg-8 col-md-8 col-xs-12 mt-4 pl-0 bar-char-db\"\n      }, React.createElement(\"div\", {\n        className: \"card h-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex m-b-40 align-items-center no-block\"\n      }, React.createElement(\"h5\", {\n        className: \"card-title\"\n      }, \"Total Commission\")), React.createElement(\"canvas\", {\n        id: \"myChart\"\n      }))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewPercent\", function () {\n      var isCoordinator = _this.props.isCoordinator;\n\n      var _this$_calculateCommi = _this._calculateCommissionPerType(),\n          totalTcCommission = _this$_calculateCommi.totalTcCommission,\n          totalAgentCommission = _this$_calculateCommi.totalAgentCommission,\n          totalReferalCost = _this$_calculateCommi.totalReferalCost,\n          totalProfitShare = _this$_calculateCommi.totalProfitShare;\n\n      var total;\n\n      if (isCoordinator) {\n        total = totalTcCommission + totalReferalCost + totalProfitShare;\n        var perTc = totalTcCommission / total * 100;\n        var perRe = totalReferalCost / total * 100;\n        var perSh = totalProfitShare / total * 100;\n        return [perTc, perRe, perSh];\n      } else {\n        total = totalAgentCommission + totalReferalCost + totalProfitShare;\n        var perAg = totalAgentCommission / total * 100;\n\n        var _perRe = totalReferalCost / total * 100;\n\n        var _perSh = totalProfitShare / total * 100;\n\n        return [perAg, _perRe, _perSh];\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewDonutChar\", function () {\n      var currentYear = _this.state.currentYear;\n      var isCoordinator = _this.props.isCoordinator;\n\n      var data = _this._viewPercent();\n\n      var _this$_calculateCommi2 = _this._calculateCommissionPerType(),\n          totalTcCommission = _this$_calculateCommi2.totalTcCommission,\n          totalAgentCommission = _this$_calculateCommi2.totalAgentCommission,\n          totalReferalCost = _this$_calculateCommi2.totalReferalCost,\n          totalProfitShare = _this$_calculateCommi2.totalProfitShare;\n\n      return React.createElement(\"div\", {\n        className: \"col-lg-4 col-md-4 col-xs-12 mt-4 pr-0 donut-chart-db\"\n      }, React.createElement(\"div\", {\n        className: \"card w-auto shadow-sm rounded h-100\"\n      }, React.createElement(\"div\", {\n        className: \"card-body h-100\"\n      }, React.createElement(\"div\", {\n        className: \"h-100 d-flex justify-content-between flex-column\"\n      }, React.createElement(\"h4\", {\n        className: \"th-font-weight th-size-3\"\n      }, currentYear, \" Income\"), React.createElement(\"div\", {\n        className: \"th-chart\"\n      }, isCoordinator ? totalTcCommission === 0 && totalProfitShare === 0 && totalReferalCost === 0 ? React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          position: 'absolute',\n          top: '40%',\n          left: '50%',\n          transform: 'translate(-50%,-50%)',\n          fontSize: '15px'\n        }\n      }, \"No data\") : null : totalAgentCommission === 0 && totalProfitShare === 0 && totalReferalCost === 0 ? React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          position: 'absolute',\n          top: '40%',\n          left: '50%',\n          transform: 'translate(-50%,-50%)',\n          fontSize: '15px'\n        }\n      }, \"No data\") : null, React.createElement(\"canvas\", {\n        id: \"incomeChart\"\n      })), React.createElement(\"ul\", {\n        className: \"list-inline flex-column d-flex justify-content-around w-100 mt-0 mb-0 list-donut-chart\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between pt-1 pb-1 mb-1\"\n      }, React.createElement(\"h5\", {\n        className: \"th-title-char\"\n      }, React.createElement(\"i\", {\n        className: \"fa fa-circle mr-2\",\n        style: {\n          color: '#325ae7'\n        }\n      }), \"Properties\"), React.createElement(\"span\", {\n        className: \"th-title-char text-right\"\n      }, data[0] ? data[0].toFixed(2) : 0, \"%\"))), React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between pt-1 pb-1 mb-1\"\n      }, React.createElement(\"h5\", {\n        className: \"th-title-char\"\n      }, React.createElement(\"i\", {\n        className: \"fa fa-circle mr-2\",\n        style: {\n          color: '#5dd2c1'\n        }\n      }), \"Referrals\"), React.createElement(\"span\", {\n        className: \"th-title-char text-right\"\n      }, data[1] ? data[1].toFixed(2) : 0, \"%\"))), React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between pt-1 pb-1 mb-1\"\n      }, React.createElement(\"h5\", {\n        className: \"th-title-char\"\n      }, React.createElement(\"i\", {\n        className: \"fa fa-circle mr-2\",\n        style: {\n          color: '#f6f7f9'\n        }\n      }), \"Revenue Share\"), React.createElement(\"span\", {\n        className: \"th-title-char text-right\"\n      }, data[2] ? data[2].toFixed(2) : 0, \"%\"))))))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewCurrentTransaction\", function () {\n      return React.createElement(\"div\", {\n        className: \"row mt-4 table-current\"\n      }, React.createElement(\"div\", {\n        className: \"col-12\"\n      }, React.createElement(\"div\", {\n        className: \"card shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"h4\", {\n        className: \"th-font-w-5 th-size-3 mb-5\"\n      }, \"Current / Recent Transactions\"), React.createElement(\"div\", {\n        className: \"table-responsive\"\n      }, React.createElement(\"table\", {\n        className: \"table\"\n      }, React.createElement(\"thead\", {\n        className: \"thead-light\"\n      }, React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Property\"), React.createElement(\"th\", null, \"Client\"), React.createElement(\"th\", null, \"Expected Completion Date\"), React.createElement(\"th\", null, \"Status\"), React.createElement(\"th\", null, \"Progress\"))), React.createElement(\"tbody\", {\n        className: \"body-half-screen\"\n      }, _this._renderAllSaleSection())))))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewLineCharRealEstate\", function () {\n      return React.createElement(\"div\", {\n        className: \"col-12 pl-0 pr-0\"\n      }, React.createElement(\"div\", {\n        className: \"card w-auto shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex m-b-40 align-items-center no-block\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-weight th-size-3\"\n      }, \"Property Commission\")), React.createElement(\"div\", {\n        id: \"realEstate\",\n        className: \"w-100\"\n      }))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewMidReal\", function () {\n      var _this$props4 = _this.props,\n          isCoordinator = _this$props4.isCoordinator,\n          commissionThisYear = _this$props4.commissionThisYear,\n          commissionTotal = _this$props4.commissionTotal;\n      var _this$state = _this.state,\n          perCentMonth = _this$state.perCentMonth,\n          percentYear = _this$state.percentYear;\n      return React.createElement(\"div\", {\n        className: \"row ml-0 mr-0 d-flex h-100 p-0 w-100\",\n        style: {\n          marginBottom: '20px'\n        }\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-lg-4 pl-0 card-first\"\n      }, React.createElement(\"div\", {\n        className: \"card w-100 h-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-weight\",\n        style: {\n          fontSize: '18px'\n        }\n      }, isCoordinator ? 'Properties Managed Total' : 'Total Properties Sold'), React.createElement(\"div\", {\n        style: {\n          height: '30px',\n          width: '30px'\n        }\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/sold.png\"\n      }))), React.createElement(\"div\", {\n        className: \"d-flex mt-3 mb-4\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-w-5 th-size-3\"\n      }, commissionTotal), React.createElement(\"div\", {\n        style: {\n          width: '20px',\n          height: '20px'\n        }\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/up.png\"\n      })))))), React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-lg-4 card-mid\"\n      }, React.createElement(\"div\", {\n        className: \"card w-100 h-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-weight\",\n        style: {\n          fontSize: '18px'\n        }\n      }, isCoordinator ? 'Properties Managed This Year' : 'Properties Sold This Year'), React.createElement(\"div\", {\n        style: {\n          height: '30px',\n          width: '30px'\n        }\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/sold.png\"\n      }))), React.createElement(\"div\", {\n        className: \"d-flex mt-3 mb-1\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-w-5 th-size-3\"\n      }, commissionThisYear), percentYear !== 0 && React.createElement(\"div\", {\n        style: {\n          width: '20px',\n          height: '20px'\n        }\n      }, React.createElement(\"img\", {\n        src: percentYear > 0 ? \"/static/images/New/up.png\" : \"/static/images/New/down.png\"\n      }))), percentYear !== 0 && React.createElement(\"div\", {\n        className: \"text-left\"\n      }, React.createElement(\"span\", {\n        style: {\n          color: perCentMonth > 0 ? '#31ba7e' : '#f64f59'\n        }\n      }, percentYear, \"%\", ' ', React.createElement(\"span\", {\n        style: {\n          color: '#808292'\n        }\n      }, \"From Last Year\")))))), React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-lg-4 pr-0 card-last\"\n      }, React.createElement(\"div\", {\n        className: \"card w-100 h-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-weight\",\n        style: {\n          fontSize: '18px'\n        }\n      }, isCoordinator ? 'Total Commission' : 'Total Commission Earned'), React.createElement(\"div\", {\n        style: {\n          height: '30px',\n          width: '30px'\n        }\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/Total-Commission.png\"\n      }))), React.createElement(\"div\", {\n        className: \"d-flex mt-3\"\n      }, React.createElement(\"h5\", {\n        className: \"counter th-font-w-5 th-size-3\"\n      }, \"$\", _this._getTotalMoneyMonth().toLocaleString()), perCentMonth !== 0 && React.createElement(\"div\", {\n        style: {\n          width: '20px',\n          height: '20px'\n        }\n      }, React.createElement(\"img\", {\n        src: perCentMonth > 0 ? \"/static/images/New/up.png\" : \"/static/images/New/down.png\"\n      }))), perCentMonth !== 0 && React.createElement(\"div\", {\n        className: \"text-left\"\n      }, React.createElement(\"span\", {\n        style: {\n          color: perCentMonth > 0 ? '#31ba7e' : '#f64f59'\n        }\n      }, perCentMonth.toFixed(2), \"%\", ' ', React.createElement(\"span\", {\n        style: {\n          color: '#808292'\n        }\n      }, \"From Last Month\")))))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewTableReal\", function () {\n      return React.createElement(\"div\", {\n        className: \"col-12 table-current pl-0 pr-0\"\n      }, React.createElement(\"div\", {\n        className: \"card w-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"h4\", {\n        className: \"th-font-w-5 th-size-3 mb-4\"\n      }, \"Expected Commission\"), React.createElement(\"div\", {\n        className: \"table-responsive\"\n      }, React.createElement(\"table\", {\n        className: \"table\"\n      }, React.createElement(\"thead\", null, React.createElement(\"th\", null, \"Property Name\"), React.createElement(\"th\", null, \"Client\"), React.createElement(\"th\", null, \"Completion Date\"), React.createElement(\"th\", null, \"Commission\")), React.createElement(\"tbody\", null, _this._viewDataReal()))))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewLineCharReferral\", function () {\n      return React.createElement(\"div\", {\n        className: \"col-12 pl-0 pr-0\"\n      }, React.createElement(\"div\", {\n        className: \"card w-auto shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex m-b-40 align-items-center no-block\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-weight th-size-3\"\n      }, \"Referral Commission\")), React.createElement(\"div\", {\n        id: \"referral\",\n        className: \"w-100\"\n      }))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewMidReferral\", function () {\n      return React.createElement(\"div\", {\n        className: \"row d-flex h-100 ml-0 mr-0\",\n        style: {\n          padding: '0',\n          marginBottom: '20px'\n        }\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-lg-4 pl-0 card-first\"\n      }, React.createElement(\"div\", {\n        className: \"card w-100 h-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-weight\",\n        style: {\n          fontSize: '18px'\n        }\n      }, \"Total Agents Referred\"), React.createElement(\"div\", {\n        style: {\n          height: '30px',\n          width: '30px'\n        }\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/Total Commission from Referrals.png\"\n      }))), React.createElement(\"div\", {\n        className: \"d-flex mt-3 mb-4\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-w-5 th-size-3\"\n      }, \"0\"))))), React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-lg-4 card-mid\"\n      }, React.createElement(\"div\", {\n        className: \"card w-100 h-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-weight\",\n        style: {\n          fontSize: '18px'\n        }\n      }, \"Agents Referred This Year\"), React.createElement(\"div\", {\n        style: {\n          height: '30px',\n          width: '30px'\n        }\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/Total Commission from Referrals.png\"\n      }))), React.createElement(\"div\", {\n        className: \"d-flex mt-3 mb-1\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-w-5 th-size-3\"\n      }, \"0\")), React.createElement(\"div\", {\n        className: \"text-left\"\n      })))), React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-lg-4 pr-0 card-last\"\n      }, React.createElement(\"div\", {\n        className: \"card w-100 h-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-weight\",\n        style: {\n          fontSize: '18px'\n        }\n      }, \"Total Commission Earned\"), React.createElement(\"div\", {\n        style: {\n          height: '30px',\n          width: '30px'\n        }\n      }, React.createElement(\"img\", {\n        src: \"/static/images/New/Total-Commission.png\"\n      }))), React.createElement(\"div\", {\n        className: \"d-flex mt-3\"\n      }, React.createElement(\"h5\", {\n        className: \"th-font-w-5 th-size-3\"\n      }, \"$0\")), React.createElement(\"div\", {\n        className: \"text-left\"\n      })))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewTableReferral\", function () {\n      return React.createElement(\"div\", {\n        className: \"col-12 pr-0 pl-0 table-current\"\n      }, React.createElement(\"div\", {\n        className: \"card w-100 shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"h4\", {\n        className: \"th-font-w-5 th-size-3 mb-4\"\n      }, \"Expected Referral Commission\"), React.createElement(\"div\", {\n        className: \"table-responsive\"\n      }, React.createElement(\"table\", {\n        className: \"table\"\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Name\"), React.createElement(\"th\", null, \"Properties\"), React.createElement(\"th\", null, \"Expected Closing Date\"), React.createElement(\"th\", null, \"Commission\"))), React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        colSpan: \"4\",\n        className: \"text-center\"\n      }, \"No data\"))))))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewMain\", function () {\n      var isCoordinator = _this.props.isCoordinator;\n\n      if (_this.state.view === 'Main') {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"card-group mb-0\"\n        }, React.createElement(\"div\", {\n          className: \"card shadow-sm rounded\"\n        }, React.createElement(\"div\", {\n          className: \"card-body\"\n        }, React.createElement(\"div\", {\n          className: \"row p-2\"\n        }, isCoordinator ? React.createElement(\"div\", {\n          className: \"col-md-4\"\n        }, _this._viewRank()) : React.createElement(\"div\", {\n          className: \"col-md-3\"\n        }, _this._viewRank()), isCoordinator ? React.createElement(React.Fragment, null) : _this._viewRankUp(), isCoordinator ? React.createElement(\"div\", {\n          className: \"col-md-4\"\n        }, _this._viewSoleYear()) : React.createElement(\"div\", {\n          className: \"col-md-3\"\n        }, _this._viewSoleYear()), isCoordinator ? React.createElement(\"div\", {\n          className: \"col-md-4\"\n        }, _this._viewSoldTotal()) : React.createElement(\"div\", {\n          className: \"col-md-3\"\n        }, _this._viewSoldTotal()))))), React.createElement(\"div\", {\n          className: \"row w-100 ml-0 mr-0\"\n        }, _this._viewBarChar(), _this._viewDonutChar()), _this._viewCurrentTransaction());\n      }\n\n      if (_this.state.view === 'Real Estate') {\n        return React.createElement(\"div\", {\n          className: \"w-100\"\n        }, React.createElement(\"div\", {\n          className: \"row w-100 ml-0 mr-0\"\n        }, _this._viewLineCharRealEstate(), _this._viewMidReal(), _this._viewTableReal()));\n      }\n\n      if (_this.state.view === 'Closed Transactions') {\n        return React.createElement(\"div\", {\n          className: \"w-100\"\n        }, React.createElement(\"div\", {\n          className: \"row w-100 ml-0 mr-0\"\n        }, _this._viewLineCharRealEstate(), _this._viewMidReal(), _this._viewTableReal()));\n      }\n\n      if (_this.state.view === 'Referrals') {\n        return React.createElement(\"section\", null, React.createElement(\"div\", {\n          className: \"abc\"\n        }, _this._viewLineCharReferral(), _this._viewMidReferral(), _this._viewTableReferral()));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderCommissionPerMonth\", function () {\n      var allCommission = _this.props.allCommission;\n      var _this$state2 = _this.state,\n          currentYear = _this$state2.currentYear,\n          selectedMonth = _this$state2.selectedMonth;\n      var commissionPerMonth = allCommission.filter(function (commission) {\n        return new Date(commission.updatedAt) >= new Date(currentYear, selectedMonth, 1) && new Date(commission.updatedAt) <= new Date(currentYear, selectedMonth + 1, 0);\n      }).map(function (commission, index) {\n        var styledBadge = '';\n\n        switch (commission.cashType) {\n          case commissionType.AGENT_COMMISSION:\n            styledBadge = 'danger';\n            break;\n\n          case commissionType.REFERRAL:\n            styledBadge = 'warning';\n            break;\n\n          case commissionType.PROFIT_SHARE:\n            styledBadge = 'info';\n            break;\n\n          case commissionType.TC_COMMISSION:\n            styledBadge = 'danger';\n            break;\n        }\n\n        return React.createElement(\"tr\", {\n          className: \"text-center\",\n          key: index\n        }, React.createElement(\"td\", null, index + 1), React.createElement(\"td\", null, moment(commission.updatedAt).format('MMM DD YYYY')), React.createElement(\"td\", null, React.createElement(\"span\", {\n          className: \"badge badge-\".concat(styledBadge, \" badge-pill text-uppercase\")\n        }, commission.cashType.replace(/-/g, ' '))), React.createElement(\"td\", null, React.createElement(\"span\", {\n          className: \"text-\".concat(styledBadge)\n        }, \"$\", commission.value.toLocaleString())));\n      });\n\n      if (commissionPerMonth.length === 0) {\n        return React.createElement(\"tr\", null, React.createElement(\"td\", {\n          colSpan: \"4\",\n          className: \"text-center\"\n        }, \"No data\"));\n      } else return commissionPerMonth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderPercent\", function (transaction) {\n      if (transaction && transaction.parties && transaction.invitations) {\n        var data = transaction.percentComplete || 0;\n        return React.createElement(\"div\", {\n          className: \"d-flex align-items-center justify-content-center flex-column\",\n          style: {\n            width: '200px'\n          }\n        }, React.createElement(\"span\", null, data, \"%\"), React.createElement(\"div\", {\n          className: \"w-100\"\n        }, React.createElement(\"div\", {\n          className: \"progress\"\n        }, React.createElement(\"div\", {\n          className: \"progress-bar th-bg-link\",\n          role: \"progressbar\",\n          style: {\n            width: \"\".concat(data, \"%\"),\n            // width:'10px',\n            height: '6px'\n          }\n        }))));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderAllSaleSection\", function () {\n      var _this$props5 = _this.props,\n          dataTran = _this$props5.dataTran,\n          currentUser = _this$props5.currentUser; // const data = allAgents.filter(x => x.userId === currentUser.id)\n\n      if (dataTran.length === 0) {\n        return React.createElement(\"tr\", null, React.createElement(\"td\", {\n          colSpan: \"4\",\n          className: \"text-center\"\n        }, \"No data\"));\n      } else {\n        return dataTran.map(function (transaction, index) {\n          var user = transaction.parties.find(function (x) {\n            return x.userId === currentUser.id;\n          });\n\n          if (user) {\n            return React.createElement(\"tr\", {\n              key: index\n            }, React.createElement(\"td\", null, transaction.city && transaction.state && transaction.apn ? \"\".concat(transaction.address, \", \").concat(transaction.city, \", \").concat(transaction.state, \", \").concat(transaction.apn) : transaction.address), React.createElement(\"td\", null, user.firstName ? user.lastName ? user.firstName.concat(' ', user.lastName) : user.firstName : user.user.name), React.createElement(\"td\", null, moment(transaction.closingDate).format('ll') === 'Jan 1, 1970' ? 'None' : moment(transaction.closingDate).format('ll')), React.createElement(\"td\", null, _this.viewStatus(transaction.status)), React.createElement(\"td\", null, _this._renderPercent(transaction)));\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewDataReal\", function () {\n      var _this$props6 = _this.props,\n          allAgents = _this$props6.allAgents,\n          currentUser = _this$props6.currentUser;\n      var data = allAgents.filter(function (x) {\n        return x.userId === currentUser.id;\n      });\n\n      if (data.length === 0) {\n        return React.createElement(\"tr\", null, React.createElement(\"td\", {\n          colSpan: \"4\",\n          className: \"text-center\"\n        }, \"No data\"));\n      } else {\n        return data.reverse().map(function (item, index) {\n          var user = item.user,\n              transaction = item.transaction;\n\n          if (user) {\n            return React.createElement(\"tr\", {\n              key: index\n            }, React.createElement(\"td\", null, transaction.city && transaction.state && transaction.apn ? \"\".concat(transaction.address, \", \").concat(transaction.city, \", \").concat(transaction.state, \", \").concat(transaction.apn) : transaction.address), React.createElement(\"td\", null, user.firstName ? user.lastName ? user.firstName.concat(' ', user.lastName) : user.firstName : user.name), React.createElement(\"td\", null, moment(item.updatedAt).format('ll')), React.createElement(\"td\", null, \"$\", item.value));\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"viewStatus\", function (status) {\n      switch (status) {\n        case TransactionStatus.ARCHIVED:\n          return React.createElement(\"div\", {\n            className: \"th-status th-status--th-archived\"\n          }, \"Archived\");\n\n        case TransactionStatus.CLOSED:\n          return React.createElement(\"div\", {\n            className: \"th-status th-status--th-close\"\n          }, \"Complete\");\n\n        case TransactionStatus.ACTIVE:\n          return React.createElement(\"div\", {\n            className: \"th-status th-status--th-active\"\n          }, \"Active\");\n\n        case '':\n          return React.createElement(\"div\", {\n            className: \"th-status th-status--th-none\"\n          }, \"None\");\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateMonthlyCommission\", function () {\n      var _this$state3 = _this.state,\n          selectedMonth = _this$state3.selectedMonth,\n          currentYear = _this$state3.currentYear;\n      var _this$props7 = _this.props,\n          agentCommission = _this$props7.agentCommission,\n          referral = _this$props7.referral,\n          tcCommission = _this$props7.tcCommission,\n          isCoordinator = _this$props7.isCoordinator;\n      var commission = isCoordinator ? tcCommission : agentCommission;\n      return [].concat(_toConsumableArray(commission), _toConsumableArray(referral)).reduce(function (result, current) {\n        if (new Date(current.updatedAt) >= new Date(currentYear, selectedMonth, 1) && new Date(current.updatedAt) <= new Date(currentYear, selectedMonth + 1, 0)) {\n          result = result + current.value;\n        }\n\n        return _parseFloat(result.toFixed(2));\n      }, 0);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_toUppercase\", function (str, replaceChar) {\n      return str.replace(/-/g, replaceChar).toUpperCase();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_findNextLevel\", function () {\n      var currentUser = _this.props.currentUser;\n      var indexOfNextLevel = Levels.indexOf(_this._toUppercase(currentUser.rank, '_')) + 1;\n      return Rank[Levels[indexOfNextLevel]];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getPercentage\", function () {\n      var currentUser = _this.props.currentUser;\n\n      if (currentUser.rank === Rank.EXECUTIVE_AGENT) {\n        return 100;\n      } else {\n        return currentUser.cash / CapLimit[_this._toUppercase(currentUser.rank, '_')] * 100;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getTotalMoneyMonth\", function () {\n      var allCommission = _this.props.allCommission;\n\n      if (allCommission && allCommission.length > 0) {\n        var day = new Date();\n        var month = day.getMonth();\n        var total = allCommission.filter(function (commission) {\n          return new Date(commission.updatedAt).getMonth() === month;\n        }).map(function (commission) {\n          return commission.value;\n        }).reduce(function (result, current) {\n          return result + current;\n        }, 0);\n        return total;\n      } else {\n        return 0;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_checkPercent\", function () {\n      var allCommission = _this.props.allCommission;\n\n      if (allCommission && allCommission.length > 0) {\n        var day = new Date();\n        var month = day.getMonth();\n        var year = day.getFullYear();\n        var prevMonth = month - 1;\n\n        if (prevMonth < 0) {\n          prevMonth = 11;\n          year = year - 1;\n        }\n\n        var total = allCommission.filter(function (commission) {\n          return new Date(commission.updatedAt).getMonth() === month;\n        }).map(function (commission) {\n          return commission.value;\n        }).reduce(function (result, current) {\n          return result + current;\n        }, 0);\n        var totalPrev = allCommission.filter(function (commission) {\n          return new Date(commission.updatedAt).getMonth() === prevMonth && new Date(commission.updatedAt).getFullYear() === year;\n        }).map(function (commission) {\n          return commission.value;\n        }).reduce(function (result, current) {\n          return result + current;\n        }, 0);\n\n        if (total > 0 && totalPrev > 0) {\n          var percent = (total - totalPrev) / totalPrev * 100;\n\n          _this.setState({\n            perCentMonth: percent\n          });\n        } else {\n          _this.setState({\n            perCentMonth: 0\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_checkPercentYear\", function () {\n      var _this$props8 = _this.props,\n          commissionThisYear = _this$props8.commissionThisYear,\n          commissionPrevYear = _this$props8.commissionPrevYear;\n\n      if (commissionThisYear > 0, commissionPrevYear > 0) {\n        var data = (commissionThisYear - commissionPrevYear) / commissionPrevYear * 100;\n\n        _this.setState({\n          percentYear: data\n        });\n      } else {\n        _this.setState({\n          percentYear: 0\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateCommissionPerMonth\", function () {\n      var _this$props9 = _this.props,\n          allAgents = _this$props9.allAgents,\n          currentUser = _this$props9.currentUser;\n      return MONTHS.map(function (month, index) {\n        var ret = allAgents.filter(function (commission) {\n          return (commission.cashType === commissionType.AGENT_COMMISSION || commission.cashType === commissionType.TC_COMMISSION) && new Date(commission.updatedAt).getMonth() === index;\n        }).map(function (commission) {\n          if (commission.userId === currentUser.id) {\n            return {\n              month: MONTHS[index],\n              total: commission.value,\n              unique: commission.value\n            };\n          } else {\n            return {\n              month: MONTHS[index],\n              total: commission.value,\n              unique: 0\n            };\n          }\n        }).reduce(function (result, current) {\n          result.month = current.month;\n          result.total = (result.total || 0) + current.total;\n          result.unique = (result.unique || 0) + current.unique;\n          return result;\n        }, {});\n\n        if (_.isEmpty(ret)) {\n          return {\n            month: MONTHS[index],\n            total: 0,\n            unique: 0\n          };\n        } else {\n          return ret;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateCountTransactionCommission\", function () {\n      var allCommission = _this.props.allCommission;\n      return MONTHS.map(function (month, index) {\n        var ret = allCommission.filter(function (commission) {\n          return (commission.cashType === commissionType.AGENT_COMMISSION || commission.cashType === commissionType.TC_COMMISSION) && new Date(commission.updatedAt).getMonth() === index;\n        }).map(function (commission) {\n          return {\n            month: MONTHS[index],\n            total: commission.value\n          };\n        }).reduce(function (result, current) {\n          result.month = current.month;\n          result.total = (result.total || 0) + current.total;\n          return result;\n        }, {});\n\n        if (_.isEmpty(ret)) {\n          return {\n            month: MONTHS[index],\n            total: 0\n          };\n        } else {\n          return ret;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateRegionalSpitPerMonth\", function () {\n      var managedTransaction = _this.props.managedTransaction;\n      return MONTHS.map(function (month, index) {\n        var ret = managedTransaction.filter(function (commission) {\n          return new Date(commission.updatedAt).getMonth() === index;\n        }).map(function (commission) {\n          return {\n            month: MONTHS[index],\n            total: commission.regionalSplit\n          };\n        }).reduce(function (result, current) {\n          result.month = current.month;\n          result.total = _parseFloat(((result.total || 0) + current.total).toFixed(3));\n          return result;\n        }, {});\n\n        if (_.isEmpty(ret)) {\n          return {\n            month: MONTHS[index],\n            total: 0\n          };\n        } else {\n          return ret;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateCommissionPerType\", function () {\n      var _this$props10 = _this.props,\n          tcCommission = _this$props10.tcCommission,\n          agentCommission = _this$props10.agentCommission,\n          referral = _this$props10.referral,\n          profitShare = _this$props10.profitShare;\n      return {\n        totalTcCommission: _this._sumCommissionPerType(tcCommission),\n        totalAgentCommission: _this._sumCommissionPerType(agentCommission),\n        totalReferalCost: _this._sumCommissionPerType(referral),\n        totalProfitShare: _this._sumCommissionPerType(profitShare)\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_sumCommissionPerType\", function (commissionType) {\n      return commissionType.reduce(function (result, current) {\n        result = result + current.value;\n        return result;\n      }, 0);\n    });\n\n    _this.state = {\n      currentYear: new Date().getFullYear(),\n      selectedMonth: 0,\n      view: props.selectedViewDashboard,\n      perCentMonth: 0,\n      percentYear: 0\n    };\n    return _this;\n  } // view rank\n\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"box-main\"\n      }, React.createElement(Head, null, React.createElement(\"title\", null, \"Dashboard\")), React.createElement(\"div\", {\n        className: \"mt-4\"\n      }, this._viewMain()), React.createElement(\"footer\", {\n        className: \"footer-card\",\n        style: {\n          padding: '2rem 0'\n        }\n      }, React.createElement(\"div\", {\n        className: \"footer-page\"\n      }, React.createElement(\"div\", {\n        className: \"footer-p1\"\n      }, \"\\xA9 Copyright Link Management Systems. All rights reserved\"), React.createElement(\"div\", {\n        className: \"footer-p2\"\n      }, \"Powered by Link Brokerages\"))));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (nextProps.selectedViewDashboard !== this.state.view) {\n        if (this.state.view === 'Main') {\n          // bar char\n          var ctx = document.getElementById('myChart').getContext('2d');\n          var donutChar = document.getElementById('incomeChart');\n          Chart.defaults.scale.ticks.beginAtZero = true;\n          var _isCoordinator2 = this.props.isCoordinator;\n\n          var commissionPerMonth = this._calculateCommissionPerMonth();\n\n          var total = commissionPerMonth.map(function (x) {\n            return x.total;\n          });\n          var unique = commissionPerMonth.map(function (x) {\n            return x.unique;\n          });\n\n          var _this$_calculateCommi3 = this._calculateCommissionPerType(),\n              totalTcCommission = _this$_calculateCommi3.totalTcCommission,\n              totalAgentCommission = _this$_calculateCommi3.totalAgentCommission,\n              totalReferalCost = _this$_calculateCommi3.totalReferalCost,\n              totalProfitShare = _this$_calculateCommi3.totalProfitShare;\n\n          var myChart = new Chart(ctx, {\n            type: 'bar',\n            data: {\n              labels: MONTHS,\n              datasets: [{\n                label: 'Your commission',\n                data: unique,\n                backgroundColor: '#c6d3f4'\n              }, {\n                label: 'Average commission',\n                data: total,\n                backgroundColor: '#325ae7'\n              }]\n            },\n            options: {\n              responsive: true,\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  grid: {\n                    display: true\n                  }\n                },\n                x: {\n                  grid: {\n                    display: false\n                  }\n                }\n              },\n              plugins: {\n                legend: {\n                  display: true,\n                  position: 'bottom',\n                  labels: {\n                    font: {\n                      size: 14\n                    }\n                  }\n                }\n              }\n            }\n          });\n          var newChar = new Chart(donutChar, {\n            type: 'doughnut',\n            data: {\n              labels: ['Revenue Share', 'Properties', 'Referrals'],\n              datasets: [{\n                label: 'Points',\n                backgroundColor: ['#f6f7f9', '#325ae7', '#5dd2c1'],\n                data: [totalProfitShare, _isCoordinator2 ? totalTcCommission : totalAgentCommission, totalReferalCost]\n              }]\n            },\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              cutout: '65%',\n              animation: {\n                animateScale: true\n              },\n              plugins: {\n                legend: {\n                  display: false,\n                  position: 'bottom',\n                  labels: {\n                    font: {\n                      size: 14\n                    }\n                  }\n                }\n              }\n            }\n          });\n        }\n\n        if (this.state.view === 'Real Estate') {\n          // tess line char\n          var data = this._calculateCountTransactionCommission();\n\n          Morris.Area({\n            element: 'realEstate',\n            data: data,\n            xkey: 'month',\n            ykeys: ['total'],\n            labels: ['Total'],\n            pointSize: 3,\n            pointFillColors: ['#fff'],\n            pointStrokeColors: ['#325ae7'],\n            fillOpacity: 0.2,\n            parseTime: false,\n            behaveLikeLine: true,\n            gridLineColor: ['#ecf0fd'],\n            lineWidth: 2,\n            smooth: false,\n            hideHover: 'auto',\n            lineColors: ['#325ae7'],\n            resize: true\n          });\n        }\n\n        if (this.state.view === 'Closed Transactions') {\n          var _data = this._calculateCountTransactionCommission();\n\n          Morris.Area({\n            element: 'realEstate',\n            data: _data,\n            xkey: 'month',\n            ykeys: ['total'],\n            labels: ['Total'],\n            pointSize: 3,\n            pointFillColors: ['#fff'],\n            pointStrokeColors: ['#325ae7'],\n            fillOpacity: 0.2,\n            parseTime: false,\n            behaveLikeLine: true,\n            gridLineColor: ['#ecf0fd'],\n            lineWidth: 2,\n            smooth: false,\n            hideHover: 'auto',\n            lineColors: ['#325ae7'],\n            resize: true\n          });\n        }\n\n        if (this.state.view === 'Referrals') {\n          Morris.Area({\n            element: 'referral',\n            data: [{\n              month: 'Jan',\n              total: 0\n            }, {\n              month: 'Feb',\n              total: 0\n            }, {\n              month: 'Mar',\n              total: 0\n            }, {\n              month: 'Apr',\n              total: 0\n            }, {\n              month: 'May',\n              total: 0\n            }, {\n              month: 'Jun',\n              total: 0\n            }, {\n              month: 'Jul',\n              total: 0\n            }, {\n              month: 'Aug',\n              total: 0\n            }, {\n              month: 'Sep',\n              total: 0\n            }, {\n              month: 'Oct',\n              total: 0\n            }, {\n              month: 'Nov',\n              total: 0\n            }, {\n              month: 'Dec',\n              total: 0\n            }],\n            xkey: 'month',\n            ykeys: ['total'],\n            labels: ['Total'],\n            pointSize: 3,\n            pointFillColors: ['#fff'],\n            pointStrokeColors: ['#325ae7'],\n            fillOpacity: 0.2,\n            parseTime: false,\n            behaveLikeLine: true,\n            gridLineColor: ['#ecf0fd'],\n            lineWidth: 2,\n            smooth: false,\n            hideHover: 'auto',\n            lineColors: ['#325ae7'],\n            resize: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.selectedViewDashboard !== this.state.view) {\n        this.setState({\n          view: nextProps.selectedViewDashboard\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkPercent();\n\n      var isCoordinator = this.props.isCoordinator;\n\n      var commissionPerMonth = this._calculateCommissionPerMonth();\n\n      var total = commissionPerMonth.map(function (x) {\n        return x.total;\n      });\n      var unique = commissionPerMonth.map(function (x) {\n        return x.unique;\n      });\n\n      var _this$_calculateCommi4 = this._calculateCommissionPerType(),\n          totalTcCommission = _this$_calculateCommi4.totalTcCommission,\n          totalAgentCommission = _this$_calculateCommi4.totalAgentCommission,\n          totalReferalCost = _this$_calculateCommi4.totalReferalCost,\n          totalProfitShare = _this$_calculateCommi4.totalProfitShare; // const regionalSplitPerMonth =\n      // isCoordinator && this._calculateRegionalSpitPerMonth()\n\n\n      if (this.state.view === 'Main') {\n        var ctx = document.getElementById('myChart').getContext('2d');\n        var donutChar = document.getElementById('incomeChart');\n        Chart.defaults.scale.ticks.beginAtZero = true;\n        var myChart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: MONTHS,\n            datasets: [{\n              label: 'Your commission',\n              data: unique,\n              backgroundColor: '#c6d3f4'\n            }, {\n              label: 'Average commission',\n              data: total,\n              backgroundColor: '#325ae7'\n            }]\n          },\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                beginAtZero: true,\n                grid: {\n                  display: true\n                }\n              },\n              x: {\n                beginAtZero: true,\n                grid: {\n                  display: false\n                }\n              }\n            },\n            plugins: {\n              legend: {\n                display: true,\n                position: 'bottom',\n                padding: '100px',\n                labels: {\n                  font: {\n                    size: 14\n                  }\n                }\n              }\n            }\n          }\n        });\n        var newChar = new Chart(donutChar, {\n          type: 'doughnut',\n          data: {\n            labels: ['Revenue Share', 'Properties', 'Referrals'],\n            datasets: [{\n              label: 'Points',\n              backgroundColor: ['#f6f7f9', '#325ae7', '#5dd2c1'],\n              data: [totalProfitShare, isCoordinator ? totalTcCommission : totalAgentCommission, totalReferalCost]\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            cutout: '65%',\n            animation: {\n              animateScale: true\n            },\n            plugins: {\n              legend: {\n                display: false,\n                position: 'bottom',\n                labels: {\n                  font: {\n                    size: 14\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default userOnly(Dashboard);","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/Dashboard/index.js"],"names":["React","Component","Head","_","moment","Chart","commissionService","userService","transactionService","commissionType","isCoordinator","isUser","Rank","Levels","CapLimit","userOnly","TransactionStatus","MONTHS","Dashboard","ctx","user","store","getState","global","loginUser","data","res","redirect","end","_isCoordinator","cashType","TC_COMMISSION","AGENT_COMMISSION","countCommission","userId","id","type","isForThisYear","commissionThisYear","commissionTotal","countCommissionPrevYear","commissionPrevYear","getUserCommissionThisYear","allCommission","getTransactionsForUser","transactions","dataTran","slice","tcCommission","filter","commission","agentCommission","referral","REFERRAL","profitShare","PROFIT_SHARE","getReferredList","referredList","promise","map","item","findUserByEmail","email","all","referredListInfo","getTransactionByCoordinator","managedTransaction","getAllAgentCommission","allAgents","count","headerText","props","currentUser","maxWidth","maxHeight","rank","_toUppercase","_findNextLevel","replace","cash","toLocaleString","width","_getPercentage","height","_calculateCommissionPerType","totalTcCommission","totalAgentCommission","totalReferalCost","totalProfitShare","total","perTc","perRe","perSh","perAg","currentYear","state","_viewPercent","position","top","left","transform","fontSize","color","toFixed","_renderAllSaleSection","perCentMonth","percentYear","marginBottom","_getTotalMoneyMonth","_viewDataReal","padding","view","_viewRank","_viewRankUp","_viewSoleYear","_viewSoldTotal","_viewBarChar","_viewDonutChar","_viewCurrentTransaction","_viewLineCharRealEstate","_viewMidReal","_viewTableReal","_viewLineCharReferral","_viewMidReferral","_viewTableReferral","selectedMonth","commissionPerMonth","Date","updatedAt","index","styledBadge","format","value","length","transaction","parties","invitations","percentComplete","find","x","city","apn","address","firstName","lastName","concat","name","closingDate","viewStatus","status","_renderPercent","reverse","ARCHIVED","CLOSED","ACTIVE","reduce","result","current","str","replaceChar","toUpperCase","indexOfNextLevel","indexOf","EXECUTIVE_AGENT","day","month","getMonth","year","getFullYear","prevMonth","totalPrev","percent","setState","ret","unique","isEmpty","regionalSplit","_sumCommissionPerType","selectedViewDashboard","_viewMain","nextProps","document","getElementById","getContext","donutChar","defaults","scale","ticks","beginAtZero","_calculateCommissionPerMonth","myChart","labels","datasets","label","backgroundColor","options","responsive","scales","y","grid","display","plugins","legend","font","size","newChar","maintainAspectRatio","cutout","animation","animateScale","_calculateCountTransactionCommission","Morris","Area","element","xkey","ykeys","pointSize","pointFillColors","pointStrokeColors","fillOpacity","parseTime","behaveLikeLine","gridLineColor","lineWidth","smooth","hideHover","lineColors","resize","_checkPercent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Head from 'next/head'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport Chart from 'chart.js/auto'\nimport {\n  commissionService,\n  userService,\n  transactionService\n} from '../../services'\nimport { commissionType } from '../../../common/models/CashBalance'\nimport {\n  isCoordinator,\n  isUser,\n  Rank,\n  Levels,\n  CapLimit\n} from '../../../common/models/User'\nimport userOnly from '../../hocs/userOnly'\nimport { TransactionStatus } from '../../../common/models/Transaction'\n\nconst MONTHS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n]\n\nclass Dashboard extends Component {\n  static async getInitialProps (ctx) {\n    const user = ctx.store.getState().global.loginUser.data\n\n    if (isUser(user)) {\n      ctx.res.redirect('/my-transactions')\n      ctx.res.end()\n      return {}\n    }\n\n    let _isCoordinator = isCoordinator(user)\n    const cashType = _isCoordinator\n      ? commissionType.TC_COMMISSION\n      : commissionType.AGENT_COMMISSION\n    const commissionThisYear = await commissionService.countCommission({\n      userId: user.id,\n      type: cashType,\n      isForThisYear: true\n    })\n\n    const commissionTotal = await commissionService.countCommission({\n      userId: user.id,\n      type: cashType,\n      isForThisYear: false\n    })\n\n    const commissionPrevYear = await commissionService.countCommissionPrevYear({\n      userId: user.id,\n      type: cashType\n    })\n\n    const allCommission = await commissionService.getUserCommissionThisYear(\n      user.id\n    )\n    const transactions = await transactionService.getTransactionsForUser()\n    const dataTran = transactions.slice(0, 10)\n    // Classify commission by cash type\n    const tcCommission = allCommission.filter(\n      commission => commission.cashType === commissionType.TC_COMMISSION\n    )\n    const agentCommission = allCommission.filter(\n      commission => commission.cashType === commissionType.AGENT_COMMISSION\n    )\n    const referral = allCommission.filter(\n      commission => commission.cashType === commissionType.REFERRAL\n    )\n    const profitShare = allCommission.filter(\n      commission => commission.cashType === commissionType.PROFIT_SHARE\n    )\n\n    // Get referred agents who current user refer\n    const referredList = await userService.getReferredList(user.id)\n\n    // Get information for each referred agent\n    const promise = referredList.map(async item =>\n      userService.findUserByEmail(item.email)\n    )\n    const referredListInfo = await Promise.all(promise)\n\n    // Managed transaction (TC only)\n    const managedTransaction =\n      _isCoordinator &&\n      (await commissionService.getTransactionByCoordinator(user.id))\n\n    // Get all agent with detail commission (show in Agent Dashboard)\n    const allAgents = await commissionService.getAllAgentCommission()\n\n    return {\n      isCoordinator: _isCoordinator,\n      commissionThisYear: commissionThisYear.count,\n      commissionTotal: commissionTotal.count,\n      commissionPrevYear: commissionPrevYear.count,\n      allCommission,\n      tcCommission,\n      agentCommission,\n      referral,\n      profitShare,\n      referredListInfo,\n      managedTransaction,\n      allAgents,\n      headerText: 'Dashboard',\n      dataTran\n    }\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentYear: new Date().getFullYear(),\n      selectedMonth: 0,\n      view: props.selectedViewDashboard,\n      perCentMonth: 0,\n      percentYear: 0\n    }\n  }\n\n  // view rank\n  _viewRank = () => {\n    const { isCoordinator, currentUser } = this.props\n    return (\n      <div className='view-rank-db'>\n        <div className='d-flex  align-items-center view-rank-db'>\n          <div>\n            {isCoordinator ? (\n              <img\n                style={{\n                  maxWidth: '80px',\n                  maxHeight: '100px'\n                }}\n                src='static/images/rank/tc.png'\n              />\n            ) : (\n              <img\n                className='image-rank'\n                src={`/static/images/rank/${currentUser.rank}.png`}\n              />\n            )}\n          </div>\n          <div>\n            <div className='text-muted'>RANK</div>\n            {isCoordinator ? (\n              <h3>LINK TC</h3>\n            ) : (\n              <h3>LINK&nbsp;{this._toUppercase(currentUser.rank, ' ')}</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view up rank\n  _viewRankUp = () => {\n    const { currentUser } = this.props\n    return (\n      <div className='col-md-3 view-rank-up-db'>\n        <div className='d-flex flex-column'>\n          <div className='col-md-12'>\n            <div className='d-flex align-items-center'>\n              <div className='th-square-2'>\n                <img src={`/static/images/New/chevron-up.png`} />\n              </div>\n\n              <h6 className='text-dark text-uppercase th-font-weight mb-0'>\n                {this._findNextLevel()\n                  ? `RANK UP - ${this._findNextLevel().replace(/-/g, ' ')}`\n                  : 'MAX LEVEL'}\n              </h6>\n            </div>\n          </div>\n          <div className='col-md-12 mb-1'>\n            <div className='ml-auto'>\n              <div className='counter th-color-link th-font-weight th-size-2 text-right'>\n                ${currentUser.cash.toLocaleString()}\n              </div>\n            </div>\n          </div>\n          <div className='col-md-12'>\n            <div className='progress'>\n              <div\n                className='progress-bar th-bg-link'\n                role='progressbar'\n                style={{\n                  width: `${this._getPercentage()}%`,\n                  // width:'10px',\n                  height: '6px'\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view sold year\n  _viewSoleYear = () => {\n    const { isCoordinator, commissionThisYear } = this.props\n    return (\n      <div className='view-sold-year-db'>\n        <div className='d-flex flex-column'>\n          <div className='col-md-12'>\n            <div className='d-flex align-items-center'>\n              <div className='th-square-2'>\n                <img src={`/static/images/New/home.png`} />\n              </div>\n              <h6 className='text-dark th-font-weight mb-0'>\n                {isCoordinator\n                  ? 'PROPERTIES MANAGED THIS YEAR'\n                  : 'PROPERTIES SOLD THIS YEAR'}\n              </h6>\n            </div>\n          </div>\n          <div className='col-md-12 mb-1'>\n            <div className='ml-auto'>\n              <div className='counter th-color-link th-font-weight th-size-2 text-right'>\n                {commissionThisYear}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='col-md-12'>\n          <div className='progress'>\n            <div\n              className='progress-bar th-bg-link'\n              role='progressbar'\n              style={{\n                height: '6px'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view sold total\n  _viewSoldTotal = () => {\n    const { isCoordinator, commissionTotal } = this.props\n    return (\n      <div className='view-sold-total-db'>\n        <div className='d-flex flex-column view-sold-total-db'>\n          <div className='col-md-12'>\n            <div className='d-flex align-items-center'>\n              <div className='th-square-2'>\n                <img src={`/static/images/New/home.png`} />\n              </div>\n              <h6 className='text-dark th-font-weight mb-0'>\n                {isCoordinator\n                  ? 'PROPERTIES MANAGED TOTAL'\n                  : 'PROPERTIES SOLD TOTAL'}\n              </h6>\n            </div>\n          </div>\n          <div className='col-md-12 mb-1'>\n            <div className='ml-auto'>\n              <div className='counter th-color-link th-font-weight th-size-2 text-right'>\n                {commissionTotal}\n              </div>\n            </div>\n          </div>\n          <div className='col-md-12'>\n            <div className='progress'>\n              <div\n                className='progress-bar th-bg-link'\n                role='progressbar'\n                style={{\n                  height: '6px'\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _viewBarChar = () => {\n    return (\n      <div className='col-lg-8 col-md-8 col-xs-12 mt-4 pl-0 bar-char-db'>\n        <div className='card h-100 shadow-sm rounded'>\n          <div className='card-body'>\n            <div className='d-flex m-b-40 align-items-center no-block'>\n              <h5 className='card-title'>Total Commission</h5>\n            </div>\n            <canvas id='myChart' />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // view percent\n  _viewPercent = () => {\n    const { isCoordinator } = this.props\n    const {\n      totalTcCommission,\n      totalAgentCommission,\n      totalReferalCost,\n      totalProfitShare\n    } = this._calculateCommissionPerType()\n    let total\n    if (isCoordinator) {\n      total = totalTcCommission + totalReferalCost + totalProfitShare\n      let perTc = (totalTcCommission / total) * 100\n      let perRe = (totalReferalCost / total) * 100\n      let perSh = (totalProfitShare / total) * 100\n      return [perTc, perRe, perSh]\n    } else {\n      total = totalAgentCommission + totalReferalCost + totalProfitShare\n      let perAg = (totalAgentCommission / total) * 100\n      let perRe = (totalReferalCost / total) * 100\n      let perSh = (totalProfitShare / total) * 100\n      return [perAg, perRe, perSh]\n    }\n  }\n  // view donut char\n  _viewDonutChar = () => {\n    const { currentYear } = this.state\n    const { isCoordinator } = this.props\n    const data = this._viewPercent()\n    const {\n      totalTcCommission,\n      totalAgentCommission,\n      totalReferalCost,\n      totalProfitShare\n    } = this._calculateCommissionPerType()\n    return (\n      <div className='col-lg-4 col-md-4 col-xs-12 mt-4 pr-0 donut-chart-db'>\n        <div className='card w-auto shadow-sm rounded h-100'>\n          <div className='card-body h-100'>\n            <div className='h-100 d-flex justify-content-between flex-column'>\n              <h4 className='th-font-weight th-size-3'>{currentYear} Income</h4>\n              <div className='th-chart'>\n                {isCoordinator ? (\n                  totalTcCommission === 0 &&\n                  totalProfitShare === 0 &&\n                  totalReferalCost === 0 ? (\n                    <div\n                        className='text-center'\n                        style={{\n                          position: 'absolute',\n                          top: '40%',\n                          left: '50%',\n                          transform: 'translate(-50%,-50%)',\n                          fontSize: '15px'\n                        }}\n                      >\n                      No data\n                      </div>\n                    ) : null\n                ) : totalAgentCommission === 0 &&\n                  totalProfitShare === 0 &&\n                  totalReferalCost === 0 ? (\n                    <div\n                      className='text-center'\n                      style={{\n                        position: 'absolute',\n                        top: '40%',\n                        left: '50%',\n                        transform: 'translate(-50%,-50%)',\n                        fontSize: '15px'\n                      }}\n                    >\n                    No data\n                    </div>\n                  ) : null}\n                <canvas id='incomeChart' />\n              </div>\n              <ul className='list-inline flex-column d-flex justify-content-around w-100 mt-0 mb-0 list-donut-chart'>\n                <li>\n                  <div className='d-flex justify-content-between pt-1 pb-1 mb-1'>\n                    <h5 className='th-title-char'>\n                      <i\n                        className='fa fa-circle mr-2'\n                        style={{ color: '#325ae7' }}\n                      />\n                      Properties\n                    </h5>\n                    <span className='th-title-char text-right'>\n                      {data[0] ? data[0].toFixed(2) : 0}%\n                    </span>\n                  </div>\n                </li>\n                <li>\n                  <div className='d-flex justify-content-between pt-1 pb-1 mb-1'>\n                    <h5 className='th-title-char'>\n                      <i\n                        className='fa fa-circle mr-2'\n                        style={{ color: '#5dd2c1' }}\n                      />\n                      Referrals\n                    </h5>\n                    <span className='th-title-char text-right'>\n                      {data[1] ? data[1].toFixed(2) : 0}%\n                    </span>\n                  </div>\n                </li>\n                <li>\n                  <div className='d-flex justify-content-between pt-1 pb-1 mb-1'>\n                    <h5 className='th-title-char'>\n                      <i\n                        className='fa fa-circle mr-2'\n                        style={{ color: '#f6f7f9' }}\n                      />\n                      Revenue Share\n                    </h5>\n                    <span className='th-title-char text-right'>\n                      {data[2] ? data[2].toFixed(2) : 0}%\n                    </span>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view current transaction\n  _viewCurrentTransaction = () => {\n    return (\n      <div className='row mt-4 table-current'>\n        <div className='col-12'>\n          <div className='card shadow-sm rounded'>\n            <div className='card-body'>\n              <h4 className='th-font-w-5 th-size-3 mb-5'>\n                Current / Recent Transactions\n              </h4>\n              <div className='table-responsive'>\n                <table className='table'>\n                  <thead className='thead-light'>\n                    <tr>\n                      <th>Property</th>\n                      <th>Client</th>\n                      <th>Expected Completion Date</th>\n                      <th>Status</th>\n                      <th>Progress</th>\n                    </tr>\n                  </thead>\n                  <tbody className='body-half-screen'>\n                    {this._renderAllSaleSection()}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view line char real estate\n  _viewLineCharRealEstate = () => {\n    return (\n      <div className='col-12 pl-0 pr-0'>\n        <div className='card w-auto shadow-sm rounded'>\n          <div className='card-body'>\n            <div className='d-flex m-b-40 align-items-center no-block'>\n              <h5 className='th-font-weight th-size-3'>Property Commission</h5>\n            </div>\n            <div id='realEstate' className='w-100' />\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view mid real\n  _viewMidReal = () => {\n    const { isCoordinator, commissionThisYear, commissionTotal } = this.props\n    const { perCentMonth, percentYear } = this.state\n    return (\n      <div\n        className='row ml-0 mr-0 d-flex h-100 p-0 w-100'\n        style={{ marginBottom: '20px' }}\n      >\n        <div className='col-12 col-md-4 col-lg-4 pl-0 card-first'>\n          <div className='card w-100 h-100 shadow-sm rounded'>\n            <div className='card-body'>\n              <div className='d-flex justify-content-between align-items-center'>\n                <h5 className='th-font-weight' style={{ fontSize: '18px' }}>\n                  {isCoordinator\n                    ? 'Properties Managed Total'\n                    : 'Total Properties Sold'}\n                </h5>\n                <div style={{ height: '30px', width: '30px' }}>\n                  <img src={`/static/images/New/sold.png`} />\n                </div>\n              </div>\n              <div className='d-flex mt-3 mb-4'>\n                <h5 className='th-font-w-5 th-size-3'>{commissionTotal}</h5>\n                <div style={{ width: '20px', height: '20px' }}>\n                  <img src={`/static/images/New/up.png`} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='col-12 col-md-4 col-lg-4 card-mid'>\n          <div className='card w-100 h-100 shadow-sm rounded'>\n            <div className='card-body'>\n              <div className='d-flex justify-content-between align-items-center'>\n                <h5 className='th-font-weight' style={{ fontSize: '18px' }}>\n                  {isCoordinator\n                    ? 'Properties Managed This Year'\n                    : 'Properties Sold This Year'}\n                </h5>\n                <div style={{ height: '30px', width: '30px' }}>\n                  <img src={`/static/images/New/sold.png`} />\n                </div>\n              </div>\n              <div className='d-flex mt-3 mb-1'>\n                <h5 className='th-font-w-5 th-size-3'>{commissionThisYear}</h5>\n                {percentYear !== 0 && (\n                  <div style={{ width: '20px', height: '20px' }}>\n                    <img\n                      src={\n                        percentYear > 0\n                          ? `/static/images/New/up.png`\n                          : `/static/images/New/down.png`\n                      }\n                    />\n                  </div>\n                )}\n              </div>\n              {percentYear !== 0 && (\n                <div className='text-left'>\n                  <span\n                    style={{ color: perCentMonth > 0 ? '#31ba7e' : '#f64f59' }}\n                  >\n                    {percentYear}%{' '}\n                    <span style={{ color: '#808292' }}>From Last Year</span>\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className='col-12 col-md-4 col-lg-4 pr-0 card-last'>\n          <div className='card w-100 h-100 shadow-sm rounded'>\n            <div className='card-body'>\n              <div className='d-flex justify-content-between align-items-center'>\n                <h5 className='th-font-weight' style={{ fontSize: '18px' }}>\n                  {isCoordinator\n                    ? 'Total Commission'\n                    : 'Total Commission Earned'}\n                </h5>\n                <div style={{ height: '30px', width: '30px' }}>\n                  <img src={`/static/images/New/Total-Commission.png`} />\n                </div>\n              </div>\n              <div className='d-flex mt-3'>\n                <h5 className='counter th-font-w-5 th-size-3'>\n                  ${this._getTotalMoneyMonth().toLocaleString()}\n                </h5>\n                {perCentMonth !== 0 && (\n                  <div style={{ width: '20px', height: '20px' }}>\n                    <img\n                      src={\n                        perCentMonth > 0\n                          ? `/static/images/New/up.png`\n                          : `/static/images/New/down.png`\n                      }\n                    />\n                  </div>\n                )}\n              </div>\n              {perCentMonth !== 0 && (\n                <div className='text-left'>\n                  <span\n                    style={{ color: perCentMonth > 0 ? '#31ba7e' : '#f64f59' }}\n                  >\n                    {perCentMonth.toFixed(2)}%{' '}\n                    <span style={{ color: '#808292' }}>From Last Month</span>\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view table real\n  _viewTableReal = () => {\n    return (\n      <div className='col-12 table-current pl-0 pr-0'>\n        <div className='card w-100 shadow-sm rounded'>\n          <div className='card-body'>\n            <h4 className='th-font-w-5 th-size-3 mb-4'>Expected Commission</h4>\n            <div className='table-responsive'>\n              <table className='table'>\n                <thead>\n                  <th>Property Name</th>\n                  <th>Client</th>\n                  <th>Completion Date</th>\n                  <th>Commission</th>\n                </thead>\n                <tbody>{this._viewDataReal()}</tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view line char referral\n  _viewLineCharReferral = () => {\n    return (\n      <div className='col-12 pl-0 pr-0'>\n        <div className='card w-auto shadow-sm rounded'>\n          <div className='card-body'>\n            <div className='d-flex m-b-40 align-items-center no-block'>\n              <h5 className='th-font-weight th-size-3'>Referral Commission</h5>\n            </div>\n            <div id='referral' className='w-100' />\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view mid referral\n  _viewMidReferral = () => {\n    return (\n      <div\n        className='row d-flex h-100 ml-0 mr-0'\n        style={{ padding: '0', marginBottom: '20px' }}\n      >\n        <div className='col-12 col-md-4 col-lg-4 pl-0 card-first'>\n          <div className='card w-100 h-100 shadow-sm rounded'>\n            <div className='card-body'>\n              <div className='d-flex justify-content-between align-items-center'>\n                <h5 className='th-font-weight' style={{ fontSize: '18px' }}>\n                  Total Agents Referred\n                </h5>\n                <div style={{ height: '30px', width: '30px' }}>\n                  <img\n                    src={`/static/images/New/Total Commission from Referrals.png`}\n                  />\n                </div>\n              </div>\n              <div className='d-flex mt-3 mb-4'>\n                <h5 className='th-font-w-5 th-size-3'>0</h5>\n                {/* <div style={{ width: '20px', height: '20px' }}>\n                  <img src={`/static/images/New/up.png`} />\n                </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='col-12 col-md-4 col-lg-4 card-mid'>\n          <div className='card w-100 h-100 shadow-sm rounded'>\n            <div className='card-body'>\n              <div className='d-flex justify-content-between align-items-center'>\n                <h5 className='th-font-weight' style={{ fontSize: '18px' }}>\n                  Agents Referred This Year\n                </h5>\n                <div style={{ height: '30px', width: '30px' }}>\n                  <img\n                    src={`/static/images/New/Total Commission from Referrals.png`}\n                  />\n                </div>\n              </div>\n              <div className='d-flex mt-3 mb-1'>\n                <h5 className='th-font-w-5 th-size-3'>0</h5>\n                {/* <div style={{ width: '20px', height: '20px' }}>\n                  <img src={`/static/images/New/down.png`} />\n                </div> */}\n              </div>\n              <div className='text-left'>\n                {/* <span style={{ color: '#f64f59' }}>\n                  -1.2% <span style={{ color: '#808292' }}>From last year</span>\n                </span> */}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='col-12 col-md-4 col-lg-4 pr-0 card-last'>\n          <div className='card w-100 h-100 shadow-sm rounded'>\n            <div className='card-body'>\n              <div className='d-flex justify-content-between align-items-center'>\n                <h5 className='th-font-weight' style={{ fontSize: '18px' }}>\n                  Total Commission Earned\n                </h5>\n                <div style={{ height: '30px', width: '30px' }}>\n                  <img src={`/static/images/New/Total-Commission.png`} />\n                </div>\n              </div>\n              <div className='d-flex mt-3'>\n                <h5 className='th-font-w-5 th-size-3'>$0</h5>\n                {/* <div style={{ width: '20px', height: '20px' }}>\n                  <img src={`/static/images/New/up.png`} />\n                </div> */}\n              </div>\n              <div className='text-left'>\n                {/* <span style={{ color: '#31ba7e' }}>\n                  +12.21%{' '}\n                  <span style={{ color: '#808292' }}>From Last Month</span>\n                </span> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view table referral\n  _viewTableReferral = () => {\n    return (\n      <div className='col-12 pr-0 pl-0 table-current'>\n        <div className='card w-100 shadow-sm rounded'>\n          <div className='card-body'>\n            <h4 className='th-font-w-5 th-size-3 mb-4'>\n              Expected Referral Commission\n            </h4>\n            <div className='table-responsive'>\n              <table className='table'>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Properties</th>\n                    <th>Expected Closing Date</th>\n                    <th>Commission</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td colSpan='4' className='text-center'>\n                      No data\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  // view main\n  _viewMain = () => {\n    const { isCoordinator } = this.props\n    if (this.state.view === 'Main') {\n      return (\n        <>\n          <div className='card-group mb-0'>\n            <div className='card shadow-sm rounded'>\n              <div className='card-body'>\n                <div className='row p-2'>\n                  {isCoordinator ? (\n                    <div className='col-md-4'>{this._viewRank()}</div>\n                  ) : (\n                    <div className='col-md-3'>{this._viewRank()}</div>\n                  )}\n                  {isCoordinator ? <></> : this._viewRankUp()}\n                  {isCoordinator ? (\n                    <div className='col-md-4'>{this._viewSoleYear()}</div>\n                  ) : (\n                    <div className='col-md-3'>{this._viewSoleYear()}</div>\n                  )}\n                  {isCoordinator ? (\n                    <div className='col-md-4'>{this._viewSoldTotal()}</div>\n                  ) : (\n                    <div className='col-md-3'>{this._viewSoldTotal()}</div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='row w-100 ml-0 mr-0'>\n            {this._viewBarChar()}\n            {this._viewDonutChar()}\n          </div>\n          {this._viewCurrentTransaction()}\n        </>\n      )\n    }\n    if (this.state.view === 'Real Estate') {\n      return (\n        <div className='w-100'>\n          <div className='row w-100 ml-0 mr-0'>\n            {this._viewLineCharRealEstate()}\n            {this._viewMidReal()}\n            {this._viewTableReal()}\n          </div>\n        </div>\n      )\n    }\n    if (this.state.view === 'Closed Transactions') {\n      return (\n        <div className='w-100'>\n          <div className='row w-100 ml-0 mr-0'>\n            {this._viewLineCharRealEstate()}\n            {this._viewMidReal()}\n            {this._viewTableReal()}\n          </div>\n        </div>\n      )\n    }\n    if (this.state.view === 'Referrals') {\n      return (\n        <section>\n          <div className='abc'>\n            {this._viewLineCharReferral()}\n            {this._viewMidReferral()}\n            {this._viewTableReferral()}\n          </div>\n        </section>\n      )\n    }\n  }\n  render () {\n    return (\n      <div className='box-main'>\n        <Head>\n          <title>Dashboard</title>\n        </Head>\n        <div className='mt-4'>{this._viewMain()}</div>\n        <footer className='footer-card' style={{ padding: '2rem 0' }}>\n          <div className='footer-page'>\n            <div className='footer-p1'>\n              © Copyright Link Management Systems. All rights reserved\n            </div>\n            <div className='footer-p2'>Powered by Link Brokerages</div>\n          </div>\n        </footer>\n      </div>\n    )\n  }\n\n  _renderCommissionPerMonth = () => {\n    const { allCommission } = this.props\n    const { currentYear, selectedMonth } = this.state\n\n    const commissionPerMonth = allCommission\n      .filter(\n        commission =>\n          new Date(commission.updatedAt) >=\n            new Date(currentYear, selectedMonth, 1) &&\n          new Date(commission.updatedAt) <=\n            new Date(currentYear, selectedMonth + 1, 0)\n      )\n      .map((commission, index) => {\n        let styledBadge = ''\n        switch (commission.cashType) {\n          case commissionType.AGENT_COMMISSION:\n            styledBadge = 'danger'\n            break\n          case commissionType.REFERRAL:\n            styledBadge = 'warning'\n            break\n          case commissionType.PROFIT_SHARE:\n            styledBadge = 'info'\n            break\n          case commissionType.TC_COMMISSION:\n            styledBadge = 'danger'\n            break\n        }\n        return (\n          <tr className='text-center' key={index}>\n            <td>{index + 1}</td>\n            <td>{moment(commission.updatedAt).format('MMM DD YYYY')}</td>\n            <td>\n              <span\n                className={`badge badge-${styledBadge} badge-pill text-uppercase`}\n              >\n                {commission.cashType.replace(/-/g, ' ')}\n              </span>\n            </td>\n\n            <td>\n              <span className={`text-${styledBadge}`}>\n                ${commission.value.toLocaleString()}\n              </span>\n            </td>\n          </tr>\n        )\n      })\n\n    if (commissionPerMonth.length === 0) {\n      return (\n        <tr>\n          <td colSpan='4' className='text-center'>\n            No data\n          </td>\n        </tr>\n      )\n    } else return commissionPerMonth\n  }\n\n  _renderPercent = transaction => {\n    if (transaction && transaction.parties && transaction.invitations) {\n      const data = transaction.percentComplete || 0\n      return (\n        <div\n          className='d-flex align-items-center justify-content-center flex-column'\n          style={{ width: '200px' }}\n        >\n          <span>{data}%</span>\n          <div className='w-100'>\n            <div className='progress'>\n              <div\n                className='progress-bar th-bg-link'\n                role='progressbar'\n                style={{\n                  width: `${data}%`,\n                  // width:'10px',\n                  height: '6px'\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  _renderAllSaleSection = () => {\n    const { dataTran, currentUser } = this.props\n    // const data = allAgents.filter(x => x.userId === currentUser.id)\n    if (dataTran.length === 0) {\n      return (\n        <tr>\n          <td colSpan='4' className='text-center'>\n            No data\n          </td>\n        </tr>\n      )\n    } else {\n      return dataTran.map((transaction, index) => {\n        const user = transaction.parties.find(x => x.userId === currentUser.id)\n        if (user) {\n          return (\n            <tr key={index}>\n              <td>\n                {transaction.city && transaction.state && transaction.apn\n                  ? `${transaction.address}, ${transaction.city}, ${\n                    transaction.state\n                  }, ${transaction.apn}`\n                  : transaction.address}\n              </td>\n              <td>\n                {user.firstName\n                  ? user.lastName\n                    ? user.firstName.concat(' ', user.lastName)\n                    : user.firstName\n                  : user.user.name}\n              </td>\n              <td>\n                {moment(transaction.closingDate).format('ll') === 'Jan 1, 1970'\n                  ? 'None'\n                  : moment(transaction.closingDate).format('ll')}\n              </td>\n              <td>{this.viewStatus(transaction.status)}</td>\n              <td>{this._renderPercent(transaction)}</td>\n            </tr>\n          )\n        }\n      })\n    }\n  }\n  _viewDataReal = () => {\n    const { allAgents, currentUser } = this.props\n    const data = allAgents.filter(x => x.userId === currentUser.id)\n    if (data.length === 0) {\n      return (\n        <tr>\n          <td colSpan='4' className='text-center'>\n            No data\n          </td>\n        </tr>\n      )\n    } else {\n      return data.reverse().map((item, index) => {\n        const { user, transaction } = item\n        if (user) {\n          return (\n            <tr key={index}>\n              <td>\n                {transaction.city && transaction.state && transaction.apn\n                  ? `${transaction.address}, ${transaction.city}, ${\n                    transaction.state\n                  }, ${transaction.apn}`\n                  : transaction.address}\n              </td>\n              <td>\n                {user.firstName\n                  ? user.lastName\n                    ? user.firstName.concat(' ', user.lastName)\n                    : user.firstName\n                  : user.name}\n              </td>\n              <td>{moment(item.updatedAt).format('ll')}</td>\n              <td>${item.value}</td>\n            </tr>\n          )\n        }\n      })\n    }\n  }\n\n  viewStatus = status => {\n    switch (status) {\n      case TransactionStatus.ARCHIVED:\n        return <div className='th-status th-status--th-archived'>Archived</div>\n      case TransactionStatus.CLOSED:\n        return <div className='th-status th-status--th-close'>Complete</div>\n      case TransactionStatus.ACTIVE:\n        return <div className='th-status th-status--th-active'>Active</div>\n      case '':\n        return <div className='th-status th-status--th-none'>None</div>\n      default:\n        break\n    }\n  }\n\n  _calculateMonthlyCommission = () => {\n    const { selectedMonth, currentYear } = this.state\n    const {\n      agentCommission,\n      referral,\n      tcCommission,\n      isCoordinator\n    } = this.props\n    const commission = isCoordinator ? tcCommission : agentCommission\n    return [...commission, ...referral].reduce((result, current) => {\n      if (\n        new Date(current.updatedAt) >=\n          new Date(currentYear, selectedMonth, 1) &&\n        new Date(current.updatedAt) <=\n          new Date(currentYear, selectedMonth + 1, 0)\n      ) {\n        result = result + current.value\n      }\n      return parseFloat(result.toFixed(2))\n    }, 0)\n  }\n\n  _toUppercase = (str, replaceChar) => {\n    return str.replace(/-/g, replaceChar).toUpperCase()\n  }\n\n  _findNextLevel = () => {\n    const { currentUser } = this.props\n    const indexOfNextLevel =\n      Levels.indexOf(this._toUppercase(currentUser.rank, '_')) + 1\n    return Rank[Levels[indexOfNextLevel]]\n  }\n\n  _getPercentage = () => {\n    const { currentUser } = this.props\n    if (currentUser.rank === Rank.EXECUTIVE_AGENT) {\n      return 100\n    } else {\n      return (\n        (currentUser.cash /\n          CapLimit[this._toUppercase(currentUser.rank, '_')]) *\n        100\n      )\n    }\n  }\n\n  _getTotalMoneyMonth = () => {\n    const { allCommission } = this.props\n    if (allCommission && allCommission.length > 0) {\n      const day = new Date()\n      const month = day.getMonth()\n      const total = allCommission\n        .filter(\n          commission => new Date(commission.updatedAt).getMonth() === month\n        )\n        .map(commission => commission.value)\n        .reduce((result, current) => result + current, 0)\n      return total\n    } else {\n      return 0\n    }\n  }\n\n  _checkPercent = () => {\n    const { allCommission } = this.props\n    if (allCommission && allCommission.length > 0) {\n      const day = new Date()\n      const month = day.getMonth()\n      let year = day.getFullYear()\n      let prevMonth = month - 1\n      if (prevMonth < 0) {\n        prevMonth = 11\n        year = year - 1\n      }\n      const total = allCommission\n        .filter(\n          commission => new Date(commission.updatedAt).getMonth() === month\n        )\n        .map(commission => commission.value)\n        .reduce((result, current) => result + current, 0)\n      const totalPrev = allCommission\n        .filter(\n          commission =>\n            new Date(commission.updatedAt).getMonth() === prevMonth &&\n            new Date(commission.updatedAt).getFullYear() === year\n        )\n        .map(commission => commission.value)\n        .reduce((result, current) => result + current, 0)\n      if (total > 0 && totalPrev > 0) {\n        let percent = ((total - totalPrev) / totalPrev) * 100\n        this.setState({\n          perCentMonth: percent\n        })\n      } else {\n        this.setState({\n          perCentMonth: 0\n        })\n      }\n    }\n  }\n\n  _checkPercentYear = () => {\n    const { commissionThisYear, commissionPrevYear } = this.props\n    if ((commissionThisYear > 0, commissionPrevYear > 0)) {\n      let data =\n        ((commissionThisYear - commissionPrevYear) / commissionPrevYear) * 100\n      this.setState({\n        percentYear: data\n      })\n    } else {\n      this.setState({\n        percentYear: 0\n      })\n    }\n  }\n\n  _calculateCommissionPerMonth = () => {\n    const { allAgents, currentUser } = this.props\n    return MONTHS.map((month, index) => {\n      let ret = allAgents\n        .filter(\n          commission =>\n            (commission.cashType === commissionType.AGENT_COMMISSION ||\n              commission.cashType === commissionType.TC_COMMISSION) &&\n            new Date(commission.updatedAt).getMonth() === index\n        )\n        .map(commission => {\n          if (commission.userId === currentUser.id) {\n            return {\n              month: MONTHS[index],\n              total: commission.value,\n              unique: commission.value\n            }\n          } else {\n            return {\n              month: MONTHS[index],\n              total: commission.value,\n              unique: 0\n            }\n          }\n        })\n        .reduce((result, current) => {\n          result.month = current.month\n          result.total = (result.total || 0) + current.total\n          result.unique = (result.unique || 0) + current.unique\n          return result\n        }, {})\n\n      if (_.isEmpty(ret)) {\n        return { month: MONTHS[index], total: 0, unique: 0 }\n      } else {\n        return ret\n      }\n    })\n  }\n\n  _calculateCountTransactionCommission = () => {\n    const { allCommission } = this.props\n    return MONTHS.map((month, index) => {\n      let ret = allCommission\n        .filter(\n          commission =>\n            (commission.cashType === commissionType.AGENT_COMMISSION ||\n              commission.cashType === commissionType.TC_COMMISSION) &&\n            new Date(commission.updatedAt).getMonth() === index\n        )\n        .map(commission => {\n          return {\n            month: MONTHS[index],\n            total: commission.value\n          }\n        })\n        .reduce((result, current) => {\n          result.month = current.month\n          result.total = (result.total || 0) + current.total\n          return result\n        }, {})\n\n      if (_.isEmpty(ret)) {\n        return { month: MONTHS[index], total: 0 }\n      } else {\n        return ret\n      }\n    })\n  }\n\n  _calculateRegionalSpitPerMonth = () => {\n    const { managedTransaction } = this.props\n    return MONTHS.map((month, index) => {\n      let ret = managedTransaction\n        .filter(\n          commission => new Date(commission.updatedAt).getMonth() === index\n        )\n        .map(commission => {\n          return {\n            month: MONTHS[index],\n            total: commission.regionalSplit\n          }\n        })\n        .reduce((result, current) => {\n          result.month = current.month\n          result.total = parseFloat(\n            ((result.total || 0) + current.total).toFixed(3)\n          )\n          return result\n        }, {})\n\n      if (_.isEmpty(ret)) {\n        return { month: MONTHS[index], total: 0 }\n      } else {\n        return ret\n      }\n    })\n  }\n\n  _calculateCommissionPerType = () => {\n    const { tcCommission, agentCommission, referral, profitShare } = this.props\n    return {\n      totalTcCommission: this._sumCommissionPerType(tcCommission),\n      totalAgentCommission: this._sumCommissionPerType(agentCommission),\n      totalReferalCost: this._sumCommissionPerType(referral),\n      totalProfitShare: this._sumCommissionPerType(profitShare)\n    }\n  }\n\n  _sumCommissionPerType = commissionType => {\n    return commissionType.reduce((result, current) => {\n      result = result + current.value\n      return result\n    }, 0)\n  }\n\n  componentDidUpdate (nextProps) {\n    if (nextProps.selectedViewDashboard !== this.state.view) {\n      if (this.state.view === 'Main') {\n        // bar char\n        const ctx = document.getElementById('myChart').getContext('2d')\n        const donutChar = document.getElementById('incomeChart')\n        Chart.defaults.scale.ticks.beginAtZero = true\n        const { isCoordinator } = this.props\n        const commissionPerMonth = this._calculateCommissionPerMonth()\n        const total = commissionPerMonth.map(x => {\n          return x.total\n        })\n        const unique = commissionPerMonth.map(x => {\n          return x.unique\n        })\n        const {\n          totalTcCommission,\n          totalAgentCommission,\n          totalReferalCost,\n          totalProfitShare\n        } = this._calculateCommissionPerType()\n        const myChart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: MONTHS,\n            datasets: [\n              {\n                label: 'Your commission',\n                data: unique,\n                backgroundColor: '#c6d3f4'\n              },\n              {\n                label: 'Average commission',\n                data: total,\n                backgroundColor: '#325ae7'\n              }\n            ]\n          },\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                beginAtZero: true,\n                grid: {\n                  display: true\n                }\n              },\n              x: {\n                grid: {\n                  display: false\n                }\n              }\n            },\n            plugins: {\n              legend: {\n                display: true,\n                position: 'bottom',\n                labels: {\n                  font: {\n                    size: 14\n                  }\n                }\n              }\n            }\n          }\n        })\n        const newChar = new Chart(donutChar, {\n          type: 'doughnut',\n          data: {\n            labels: ['Revenue Share', 'Properties', 'Referrals'],\n            datasets: [\n              {\n                label: 'Points',\n                backgroundColor: ['#f6f7f9', '#325ae7', '#5dd2c1'],\n                data: [\n                  totalProfitShare,\n                  isCoordinator ? totalTcCommission : totalAgentCommission,\n                  totalReferalCost\n                ]\n              }\n            ]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            cutout: '65%',\n            animation: {\n              animateScale: true\n            },\n            plugins: {\n              legend: {\n                display: false,\n                position: 'bottom',\n                labels: {\n                  font: {\n                    size: 14\n                  }\n                }\n              }\n            }\n          }\n        })\n      }\n      if (this.state.view === 'Real Estate') {\n        // tess line char\n        const data = this._calculateCountTransactionCommission()\n        Morris.Area({\n          element: 'realEstate',\n          data: data,\n          xkey: 'month',\n          ykeys: ['total'],\n          labels: ['Total'],\n          pointSize: 3,\n          pointFillColors: ['#fff'],\n          pointStrokeColors: ['#325ae7'],\n          fillOpacity: 0.2,\n          parseTime: false,\n          behaveLikeLine: true,\n          gridLineColor: ['#ecf0fd'],\n          lineWidth: 2,\n          smooth: false,\n          hideHover: 'auto',\n          lineColors: ['#325ae7'],\n          resize: true\n        })\n      }\n      if (this.state.view === 'Closed Transactions') {\n        const data = this._calculateCountTransactionCommission()\n        Morris.Area({\n          element: 'realEstate',\n          data: data,\n          xkey: 'month',\n          ykeys: ['total'],\n          labels: ['Total'],\n          pointSize: 3,\n          pointFillColors: ['#fff'],\n          pointStrokeColors: ['#325ae7'],\n          fillOpacity: 0.2,\n          parseTime: false,\n          behaveLikeLine: true,\n          gridLineColor: ['#ecf0fd'],\n          lineWidth: 2,\n          smooth: false,\n          hideHover: 'auto',\n          lineColors: ['#325ae7'],\n          resize: true\n        })\n      }\n      if (this.state.view === 'Referrals') {\n        Morris.Area({\n          element: 'referral',\n          data: [\n            { month: 'Jan', total: 0 },\n            { month: 'Feb', total: 0 },\n            { month: 'Mar', total: 0 },\n            { month: 'Apr', total: 0 },\n            { month: 'May', total: 0 },\n            { month: 'Jun', total: 0 },\n            { month: 'Jul', total: 0 },\n            { month: 'Aug', total: 0 },\n            { month: 'Sep', total: 0 },\n            { month: 'Oct', total: 0 },\n            { month: 'Nov', total: 0 },\n            { month: 'Dec', total: 0 }\n          ],\n          xkey: 'month',\n          ykeys: ['total'],\n          labels: ['Total'],\n          pointSize: 3,\n          pointFillColors: ['#fff'],\n          pointStrokeColors: ['#325ae7'],\n          fillOpacity: 0.2,\n          parseTime: false,\n          behaveLikeLine: true,\n          gridLineColor: ['#ecf0fd'],\n          lineWidth: 2,\n          smooth: false,\n          hideHover: 'auto',\n          lineColors: ['#325ae7'],\n          resize: true\n        })\n      }\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.selectedViewDashboard !== this.state.view) {\n      this.setState({\n        view: nextProps.selectedViewDashboard\n      })\n    }\n  }\n\n  componentDidMount () {\n    this._checkPercent()\n    const { isCoordinator } = this.props\n    const commissionPerMonth = this._calculateCommissionPerMonth()\n    const total = commissionPerMonth.map(x => {\n      return x.total\n    })\n    const unique = commissionPerMonth.map(x => {\n      return x.unique\n    })\n    const {\n      totalTcCommission,\n      totalAgentCommission,\n      totalReferalCost,\n      totalProfitShare\n    } = this._calculateCommissionPerType()\n    // const regionalSplitPerMonth =\n    // isCoordinator && this._calculateRegionalSpitPerMonth()\n    if (this.state.view === 'Main') {\n      const ctx = document.getElementById('myChart').getContext('2d')\n      const donutChar = document.getElementById('incomeChart')\n      Chart.defaults.scale.ticks.beginAtZero = true\n      const myChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: MONTHS,\n          datasets: [\n            {\n              label: 'Your commission',\n              data: unique,\n              backgroundColor: '#c6d3f4'\n            },\n            {\n              label: 'Average commission',\n              data: total,\n              backgroundColor: '#325ae7'\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n              grid: {\n                display: true\n              }\n            },\n            x: {\n              beginAtZero: true,\n              grid: {\n                display: false\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: true,\n              position: 'bottom',\n              padding: '100px',\n              labels: {\n                font: {\n                  size: 14\n                }\n              }\n            }\n          }\n        }\n      })\n      const newChar = new Chart(donutChar, {\n        type: 'doughnut',\n        data: {\n          labels: ['Revenue Share', 'Properties', 'Referrals'],\n          datasets: [\n            {\n              label: 'Points',\n              backgroundColor: ['#f6f7f9', '#325ae7', '#5dd2c1'],\n              data: [\n                totalProfitShare,\n                isCoordinator ? totalTcCommission : totalAgentCommission,\n                totalReferalCost\n              ]\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          cutout: '65%',\n          animation: {\n            animateScale: true\n          },\n          plugins: {\n            legend: {\n              display: false,\n              position: 'bottom',\n              labels: {\n                font: {\n                  size: 14\n                }\n              }\n            }\n          }\n        }\n      })\n    }\n  }\n}\nexport default userOnly(Dashboard)\n"]},"metadata":{},"sourceType":"module"}