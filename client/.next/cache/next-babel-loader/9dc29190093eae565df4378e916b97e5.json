{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _ from 'lodash';\nimport { IApplicationGateway } from '../services/ApplicationService';\nimport ResponseStatus from '../../common/application/ResponseStatus';\n\nvar ApplicationGateway =\n/*#__PURE__*/\nfunction () {\n  function ApplicationGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, ApplicationGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(ApplicationGateway, [{\n    key: \"getConfigurations\",\n    value: function () {\n      var _getConfigurations = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(keys) {\n        var filter, resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                filter = {\n                  where: {\n                    id: {\n                      inq: keys\n                    }\n                  }\n                };\n                _context.next = 4;\n                return this.restConnector.get(\"/configurations?filter=\".concat(_JSON$stringify(filter)));\n\n              case 4:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", []);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function getConfigurations(_x) {\n        return _getConfigurations.apply(this, arguments);\n      }\n\n      return getConfigurations;\n    }()\n  }, {\n    key: \"getConfiguration\",\n    value: function () {\n      var _getConfiguration = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(key) {\n        var resp, configNotFound;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.restConnector.get(\"/configurations/\".concat(key));\n\n              case 3:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                configNotFound = _.get(_context2.t0, 'response.status') === 404 && _.get(_context2.t0, 'response.data.error.code') === 'MODEL_NOT_FOUND'; // Return null instead of throwing 404 error if config not found.\n\n                if (!configNotFound) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", null);\n\n              case 12:\n                throw _context2.t0;\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function getConfiguration(_x2) {\n        return _getConfiguration.apply(this, arguments);\n      }\n\n      return getConfiguration;\n    }()\n  }, {\n    key: \"verifySmtpEmailSettings\",\n    value: function () {\n      var _verifySmtpEmailSettings = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(settings) {\n        var resp, errorCode;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.restConnector.post('/configurations/validate-smtp-settings', settings);\n\n              case 3:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data.isValid);\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                errorCode = _.get(_context3.t0, 'response.data.error.statusCode');\n\n                if (!(errorCode === 400)) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", false);\n\n              case 12:\n                throw _context3.t0;\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      function verifySmtpEmailSettings(_x3) {\n        return _verifySmtpEmailSettings.apply(this, arguments);\n      }\n\n      return verifySmtpEmailSettings;\n    }()\n  }, {\n    key: \"saveConfiguration\",\n    value: function () {\n      var _saveConfiguration = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_ref2) {\n        var id, data;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = _ref2.id, data = _ref2.data;\n                _context4.next = 3;\n                return this.restConnector.post(\"/configurations/replaceOrCreate\", {\n                  id: id,\n                  data: data\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function saveConfiguration(_x4) {\n        return _saveConfiguration.apply(this, arguments);\n      }\n\n      return saveConfiguration;\n    }()\n  }, {\n    key: \"validateInitSystemPassword\",\n    value: function () {\n      var _validateInitSystemPassword = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(password) {\n        var _ref3, data, msg;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return this.restConnector.post('/configurations/validate-init-system-password', {\n                  password: password\n                });\n\n              case 3:\n                _ref3 = _context5.sent;\n                data = _ref3.data;\n                return _context5.abrupt(\"return\", data.isValid);\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](0);\n                msg = _.get(_context5.t0, 'response.data.error.message');\n\n                if (!(msg === 'password is a required argument')) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", false);\n\n              case 13:\n                throw _context5.t0;\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 8]]);\n      }));\n\n      function validateInitSystemPassword(_x5) {\n        return _validateInitSystemPassword.apply(this, arguments);\n      }\n\n      return validateInitSystemPassword;\n    }()\n  }, {\n    key: \"initializeSystem\",\n    value: function () {\n      var _initializeSystem = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(_ref4) {\n        var password, admin, _ref5, data;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                password = _ref4.password, admin = _ref4.admin;\n                _context6.next = 3;\n                return this.restConnector.post('/configurations/initialize-system', {\n                  password: password,\n                  admin: admin\n                });\n\n              case 3:\n                _ref5 = _context6.sent;\n                data = _ref5.data;\n                return _context6.abrupt(\"return\", data.status === ResponseStatus.SUCCESS);\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function initializeSystem(_x6) {\n        return _initializeSystem.apply(this, arguments);\n      }\n\n      return initializeSystem;\n    }()\n  }]);\n\n  return ApplicationGateway;\n}();\n\nexport { ApplicationGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/ApplicationGateway.js"],"names":["_","IApplicationGateway","ResponseStatus","ApplicationGateway","restConnector","keys","filter","where","id","inq","get","resp","data","key","configNotFound","settings","post","isValid","errorCode","password","msg","admin","status","SUCCESS"],"mappings":";;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,OAAOC,cAAP,MAA2B,yCAA3B;;IAEqBC,kB;;;AACnB,oCAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD;;;;;;;gDAEwBC,I;;;;;;;AAEfC,gBAAAA,M,GAAS;AAAEC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,EAAE,EAAE;AAAEC,sBAAAA,GAAG,EAAEJ;AAAP;AAAN;AAAT,iB;;uBACI,KAAKD,aAAL,CAAmBM,GAAnB,kCACS,gBAAeJ,MAAf,CADT,E;;;AAAbK,gBAAAA,I;iDAGCA,IAAI,CAACC,I;;;;;iDAEL,E;;;;;;;;;;;;;;;;;;;;;iDAIaC,G;;;;;;;;uBAED,KAAKT,aAAL,CAAmBM,GAAnB,2BAA0CG,GAA1C,E;;;AAAbF,gBAAAA,I;kDACCA,IAAI,CAACC,I;;;;;AAENE,gBAAAA,c,GACJd,CAAC,CAACU,GAAF,eAAS,iBAAT,MAAgC,GAAhC,IACAV,CAAC,CAACU,GAAF,eAAS,0BAAT,MAAyC,iB,EAE3C;;qBACII,c;;;;;kDACK,I;;;;;;;;;;;;;;;;;;;;;;;;iDAOkBC,Q;;;;;;;;uBAER,KAAKX,aAAL,CAAmBY,IAAnB,CACjB,wCADiB,EAEjBD,QAFiB,C;;;AAAbJ,gBAAAA,I;kDAICA,IAAI,CAACC,IAAL,CAAUK,O;;;;;AAEXC,gBAAAA,S,GAAYlB,CAAC,CAACU,GAAF,eAAS,gCAAT,C;;sBACdQ,SAAS,KAAK,G;;;;;kDACT,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMcV,gBAAAA,E,SAAAA,E,EAAII,I,SAAAA,I;;uBACvB,KAAKR,aAAL,CAAmBY,IAAnB,oCAA2D;AAC/DR,kBAAAA,EAAE,EAAFA,EAD+D;AAE/DI,kBAAAA,IAAI,EAAJA;AAF+D,iBAA3D,C;;;;;;;;;;;;;;;;;;;;;iDAM0BO,Q;;;;;;;;;uBAEP,KAAKf,aAAL,CAAmBY,IAAnB,CACrB,+CADqB,EAErB;AAAEG,kBAAAA,QAAQ,EAARA;AAAF,iBAFqB,C;;;;AAAfP,gBAAAA,I,SAAAA,I;kDAIDA,IAAI,CAACK,O;;;;;AAENG,gBAAAA,G,GAAMpB,CAAC,CAACU,GAAF,eAAS,6BAAT,C;;sBACRU,GAAG,KAAK,iC;;;;;kDACH,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMaD,gBAAAA,Q,SAAAA,Q,EAAUE,K,SAAAA,K;;uBACX,KAAKjB,aAAL,CAAmBY,IAAnB,CACrB,mCADqB,EAErB;AAAEG,kBAAAA,QAAQ,EAARA,QAAF;AAAYE,kBAAAA,KAAK,EAALA;AAAZ,iBAFqB,C;;;;AAAfT,gBAAAA,I,SAAAA,I;kDAIDA,IAAI,CAACU,MAAL,KAAgBpB,cAAc,CAACqB,O;;;;;;;;;;;;;;;;;;;;;SA/ErBpB,kB","sourcesContent":["import _ from 'lodash'\nimport { IApplicationGateway } from '../services/ApplicationService'\nimport ResponseStatus from '../../common/application/ResponseStatus'\n\nexport default class ApplicationGateway implements IApplicationGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async getConfigurations (keys: [String]): Promise<[Object]> {\n    try {\n      const filter = { where: { id: { inq: keys } } }\n      const resp = await this.restConnector.get(\n        `/configurations?filter=${JSON.stringify(filter)}`\n      )\n      return resp.data\n    } catch (e) {\n      return []\n    }\n  }\n\n  async getConfiguration (key: String): Promise<Object> {\n    try {\n      const resp = await this.restConnector.get(`/configurations/${key}`)\n      return resp.data\n    } catch (e) {\n      const configNotFound =\n        _.get(e, 'response.status') === 404 &&\n        _.get(e, 'response.data.error.code') === 'MODEL_NOT_FOUND'\n\n      // Return null instead of throwing 404 error if config not found.\n      if (configNotFound) {\n        return null\n      }\n\n      throw e\n    }\n  }\n\n  async verifySmtpEmailSettings (settings: Object) {\n    try {\n      const resp = await this.restConnector.post(\n        '/configurations/validate-smtp-settings',\n        settings\n      )\n      return resp.data.isValid\n    } catch (e) {\n      const errorCode = _.get(e, 'response.data.error.statusCode')\n      if (errorCode === 400) {\n        return false\n      }\n      throw e\n    }\n  }\n\n  async saveConfiguration ({ id, data }) {\n    await this.restConnector.post(`/configurations/replaceOrCreate`, {\n      id,\n      data\n    })\n  }\n\n  async validateInitSystemPassword (password) {\n    try {\n      const { data } = await this.restConnector.post(\n        '/configurations/validate-init-system-password',\n        { password }\n      )\n      return data.isValid\n    } catch (e) {\n      const msg = _.get(e, 'response.data.error.message')\n      if (msg === 'password is a required argument') {\n        return false\n      }\n      throw e\n    }\n  }\n\n  async initializeSystem ({ password, admin }) {\n    const { data } = await this.restConnector.post(\n      '/configurations/initialize-system',\n      { password, admin }\n    )\n    return data.status === ResponseStatus.SUCCESS\n  }\n}\n"]},"metadata":{},"sourceType":"module"}