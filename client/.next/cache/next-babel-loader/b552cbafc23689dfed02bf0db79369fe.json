{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar TransactionActivityGateway =\n/*#__PURE__*/\nfunction () {\n  function TransactionActivityGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, TransactionActivityGateway);\n\n    this.restConnector = restConnector;\n  } // Get all activities of current user\n\n\n  _createClass(TransactionActivityGateway, [{\n    key: \"getByActorId\",\n    value: function () {\n      var _getByActorId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(actorId) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restConnector.get(\"/transactionActivities?filter={\\\"where\\\":{\\\"actorId\\\":{\\\"like\\\":\\\"\".concat(actorId, \"\\\"}},\\\"order\\\":\\\"createdAt DESC\\\"}\"));\n\n              case 2:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getByActorId(_x) {\n        return _getByActorId.apply(this, arguments);\n      }\n\n      return getByActorId;\n    }() // Get all activities of current transaction (full-access)\n\n  }, {\n    key: \"getByTransactionId\",\n    value: function () {\n      var _getByTransactionId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(transactionId) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.restConnector.get(\"/transactionActivities?filter={\\\"where\\\":{\\\"transactionId\\\":\\\"\".concat(transactionId, \"\\\"},\\\"order\\\":\\\"createdAt DESC\\\"}\"));\n\n              case 2:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getByTransactionId(_x2) {\n        return _getByTransactionId.apply(this, arguments);\n      }\n\n      return getByTransactionId;\n    }() // Get all activities of current party (upload-only)\n\n  }, {\n    key: \"getByPartyId\",\n    value: function () {\n      var _getByPartyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(partyId) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.restConnector.get(\"/transactionActivities?filter={\\\"where\\\":{\\\"partyId\\\":\\\"\".concat(partyId, \"\\\"},\\\"order\\\":\\\"createdAt DESC\\\"}\"));\n\n              case 2:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getByPartyId(_x3) {\n        return _getByPartyId.apply(this, arguments);\n      }\n\n      return getByPartyId;\n    }()\n  }]);\n\n  return TransactionActivityGateway;\n}();\n\nexport { TransactionActivityGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/TransactionActivityGateway.js"],"names":["TransactionActivityGateway","restConnector","actorId","get","resp","data","transactionId","partyId"],"mappings":";;;;;IAAqBA,0B;;;AACnB,4CAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD,G,CAED;;;;;;;;gDACoBC,O;;;;;;;uBACC,KAAKD,aAAL,CAAmBE,GAAnB,6EAC6CD,OAD7C,wC;;;AAAbE,gBAAAA,I;iDAGCA,IAAI,CAACC,I;;;;;;;;;;;;;;;QAGd;;;;;;;iDAC0BC,a;;;;;;;uBACL,KAAKL,aAAL,CAAmBE,GAAnB,yEAC2CG,aAD3C,uC;;;AAAbF,gBAAAA,I;kDAGCA,IAAI,CAACC,I;;;;;;;;;;;;;;;QAGd;;;;;;;iDACoBE,O;;;;;;;uBACC,KAAKN,aAAL,CAAmBE,GAAnB,mEACqCI,OADrC,uC;;;AAAbH,gBAAAA,I;kDAGCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;SA1BKL,0B","sourcesContent":["export default class TransactionActivityGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  // Get all activities of current user\n  async getByActorId (actorId) {\n    const resp = await this.restConnector.get(\n      `/transactionActivities?filter={\"where\":{\"actorId\":{\"like\":\"${actorId}\"}},\"order\":\"createdAt DESC\"}`\n    )\n    return resp.data\n  }\n\n  // Get all activities of current transaction (full-access)\n  async getByTransactionId (transactionId) {\n    const resp = await this.restConnector.get(\n      `/transactionActivities?filter={\"where\":{\"transactionId\":\"${transactionId}\"},\"order\":\"createdAt DESC\"}`\n    )\n    return resp.data\n  }\n\n  // Get all activities of current party (upload-only)\n  async getByPartyId (partyId) {\n    const resp = await this.restConnector.get(\n      `/transactionActivities?filter={\"where\":{\"partyId\":\"${partyId}\"},\"order\":\"createdAt DESC\"}`\n    )\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}