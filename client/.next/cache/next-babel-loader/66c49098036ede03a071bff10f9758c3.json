{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport { Modal } from 'reactstrap';\nimport { Formik } from 'formik';\nimport Cookies from 'js-cookie';\nimport toastr from 'toastr';\nimport { TransactionRole, TransactionAccessType } from '../../../common/models/Transaction';\nimport { transactionService } from '../../services';\nimport PhoneInput from 'react-phone-input-2';\n\nvar EditRoleAgentModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditRoleAgentModal, _Component);\n\n  function EditRoleAgentModal(props) {\n    var _this;\n\n    _classCallCheck(this, EditRoleAgentModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditRoleAgentModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(values, action) {\n        var setSubmitting, dataUser, firstName, lastName, role, phoneNumber, access, id, msg;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = action.setSubmitting;\n                dataUser = _this.props.dataUser; // const { transactionId } = this.props\n\n                _context.prev = 2;\n                firstName = values.firstName, lastName = values.lastName, role = values.role, phoneNumber = values.phoneNumber, access = values.access;\n                setSubmitting(true);\n                _context.next = 7;\n                return transactionService.updateTransactionPartyById(dataUser.id, {\n                  firstName: firstName,\n                  lastName: lastName,\n                  role: role,\n                  phoneNumber: phoneNumber,\n                  access: access\n                });\n\n              case 7:\n                setSubmitting(false);\n                toastr.success('Success');\n                id = Cookies.get('add_new_transaction');\n\n                if (id) {\n                  Cookies.remove('add_new_transaction');\n                }\n\n                _this.props.toggleMemberModal();\n\n                _this.props.realTimeEdit();\n\n                _context.next = 21;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](2);\n\n                switch (_context.t0.code) {\n                  default:\n                    {\n                      msg = _context.t0.message;\n                    }\n                }\n\n                toastr.error(msg);\n\n                _this.props.realTimeEdit();\n\n                setSubmitting(false);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 15]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      originalMember: null\n    };\n    return _this;\n  }\n\n  _createClass(EditRoleAgentModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isShowEditRoleAgent = _this$props.isShowEditRoleAgent,\n          toggleMemberModal = _this$props.toggleMemberModal,\n          dataUser = _this$props.dataUser;\n      return React.createElement(Modal, {\n        isOpen: isShowEditRoleAgent,\n        toggle: toggleMemberModal\n      }, React.createElement(\"div\", {\n        className: \"page-button-new\"\n      }, React.createElement(\"div\", {\n        className: \"form-add-member\" // style={{ display: 'none' }}\n\n      }, React.createElement(\"div\", {\n        className: \"modal-header modal-header--change\",\n        id: \"bg-gr\"\n      }, React.createElement(\"div\", {\n        className: \"text-center w-100\"\n      }, React.createElement(\"h5\", {\n        className: \"modal-title new-add\",\n        id: \"exampleModalLabel\"\n      }, \"Edit Member\")), React.createElement(\"div\", null, React.createElement(\"button\", {\n        id: \"close-modal\",\n        type: \"button\",\n        className: \"close bg-transparent \",\n        \"data-dismiss\": \"modal\",\n        onClick: function onClick() {\n          return toggleMemberModal();\n        }\n      }, \"\\xD7\"))), React.createElement(Formik, {\n        initialValues: {\n          firstName: dataUser.firstName,\n          lastName: dataUser.lastName,\n          email: dataUser.email,\n          role: TransactionRole.SELLER_AGENT,\n          phoneNumber: dataUser.phone,\n          access: dataUser.access\n        },\n        onSubmit: function onSubmit(values, action) {\n          return _this2.handleSubmit(values, action);\n        },\n        validate: function validate(values) {\n          var error = {};\n\n          if (values.firstName === '') {\n            error.firstName = 'First name is required';\n          } else if (values.lastName === '') {\n            error.lastName = 'Last name is required';\n          } else if (values.email === '') {\n            error.email = 'Email is required';\n          }\n\n          return error;\n        }\n      }, function (_ref2) {\n        var values = _ref2.values,\n            errors = _ref2.errors,\n            touched = _ref2.touched,\n            isValid = _ref2.isValid,\n            isSubmitting = _ref2.isSubmitting,\n            handleSubmit = _ref2.handleSubmit,\n            handleChange = _ref2.handleChange;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\"\n        }, React.createElement(\"div\", {\n          className: \"modal-body px-5 mx-2\",\n          id: \"main-body-add-member\"\n        }, React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"col\"\n        }, React.createElement(\"div\", {\n          className: \"form-group \"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"First Name\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Type here\",\n          onChange: handleChange,\n          value: values.firstName,\n          name: \"firstName\"\n        }), errors.firstName && React.createElement(\"small\", {\n          className: \"text-danger\"\n        }, errors.firstName))), React.createElement(\"div\", {\n          className: \"col\"\n        }, React.createElement(\"div\", {\n          className: \"form-group \"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Last Name\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Type here\",\n          name: \"lastName\",\n          onChange: handleChange,\n          value: values.lastName\n        }), errors.lastName && React.createElement(\"small\", {\n          className: \"text-danger\"\n        }, errors.lastName)))), React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Email \"), React.createElement(\"input\", {\n          type: \"mail\",\n          className: \"form-control\",\n          placeholder: \"Type here\",\n          name: \"email\",\n          onChange: handleChange,\n          value: values.email,\n          disabled: true\n        }), errors.email && React.createElement(\"small\", {\n          className: \"text-danger\"\n        }, errors.email))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Phone Number\", ' '), React.createElement(PhoneInput, {\n          country: 'us',\n          enableSearch: true,\n          onChange: function onChange(value) {\n            handleChange({\n              target: {\n                name: 'phoneNumber',\n                value: value\n              }\n            });\n          },\n          value: values.phoneNumber,\n          placeholder: \"Phone Number\",\n          className: \"form-control\"\n        }))), React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Role\"), React.createElement(\"select\", {\n          id: \"role\",\n          className: \"form-control\",\n          name: \"role\",\n          onChange: handleChange,\n          value: values.role\n        }, React.createElement(\"option\", {\n          value: TransactionRole.SELLER_AGENT\n        }, \"Seller\\u2019s Agent\"), React.createElement(\"option\", {\n          value: TransactionRole.BUYING_AGENT\n        }, \"Buyer\\u2019s Agent\"), React.createElement(\"option\", {\n          value: TransactionRole.BUYER\n        }, \"Buyer\"), React.createElement(\"option\", {\n          value: TransactionRole.SELLER\n        }, \"Seller\"), React.createElement(\"option\", {\n          value: TransactionRole.TRANSACTION_COORDINATOR\n        }, \"Transaction Coordinator\"), React.createElement(\"option\", {\n          value: TransactionRole.ESCROW\n        }, \"Escrow\"), React.createElement(\"option\", {\n          value: TransactionRole.TITLE\n        }, \"Title\"), React.createElement(\"option\", {\n          value: TransactionRole.LENDER\n        }, \"Lender\"), React.createElement(\"option\", {\n          value: TransactionRole.HOME_INSPECTOR\n        }, \"Home Inspector\"), React.createElement(\"option\", {\n          value: TransactionRole.TERMITE\n        }, \"Termite\"), React.createElement(\"option\", {\n          value: TransactionRole.VENDORS\n        }, \"Vendors\")))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Access\"), React.createElement(\"select\", {\n          id: \"access\",\n          className: \"form-control\",\n          name: \"access\",\n          onChange: handleChange,\n          value: values.access\n        }, React.createElement(\"option\", {\n          value: TransactionAccessType.FULL\n        }, \"Full Access\"), React.createElement(\"option\", {\n          value: TransactionAccessType.UPLOAD_ONLY\n        }, \"Upload Only\"))))))), React.createElement(\"div\", {\n          className: \"mt-5 text-center\"\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-add-new mb-5 text-white th-11\",\n          disabled: isSubmitting || !isValid\n        }, isSubmitting && React.createElement(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-2\"\n        }), \"Save\")));\n      }))));\n    }\n  }]);\n\n  return EditRoleAgentModal;\n}(Component);\n\nexport default EditRoleAgentModal;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/component/Transaction/EditRoleAgentModal.js"],"names":["React","Component","Modal","Formik","Cookies","toastr","TransactionRole","TransactionAccessType","transactionService","PhoneInput","EditRoleAgentModal","props","values","action","setSubmitting","dataUser","firstName","lastName","role","phoneNumber","access","updateTransactionPartyById","id","success","get","remove","toggleMemberModal","realTimeEdit","code","msg","message","error","state","originalMember","isShowEditRoleAgent","email","SELLER_AGENT","phone","handleSubmit","errors","touched","isValid","isSubmitting","handleChange","value","target","name","BUYING_AGENT","BUYER","SELLER","TRANSACTION_COORDINATOR","ESCROW","TITLE","LENDER","HOME_INSPECTOR","TERMITE","VENDORS","FULL","UPLOAD_ONLY"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal } from 'reactstrap'\nimport { Formik } from 'formik'\nimport Cookies from 'js-cookie'\nimport toastr from 'toastr'\nimport {\n  TransactionRole,\n  TransactionAccessType\n} from '../../../common/models/Transaction'\nimport { transactionService } from '../../services'\nimport PhoneInput from 'react-phone-input-2'\n\nclass EditRoleAgentModal extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      originalMember: null\n    }\n  }\n  handleSubmit = async (values, action) => {\n    const { setSubmitting } = action\n    const { dataUser } = this.props\n    // const { transactionId } = this.props\n    try {\n      const { firstName, lastName, role, phoneNumber, access } = values\n      setSubmitting(true)\n      await transactionService.updateTransactionPartyById(dataUser.id, {\n        firstName,\n        lastName,\n        role,\n        phoneNumber,\n        access\n      })\n      setSubmitting(false)\n      toastr.success('Success')\n      const id = Cookies.get('add_new_transaction')\n      if (id) {\n        Cookies.remove('add_new_transaction')\n      }\n\n      this.props.toggleMemberModal()\n      this.props.realTimeEdit()\n    } catch (e) {\n      let msg\n      switch (e.code) {\n        default: {\n          msg = e.message\n        }\n      }\n      toastr.error(msg)\n      this.props.realTimeEdit()\n      setSubmitting(false)\n    }\n  }\n\n  render () {\n    const { isShowEditRoleAgent, toggleMemberModal, dataUser } = this.props\n    return (\n      <Modal isOpen={isShowEditRoleAgent} toggle={toggleMemberModal}>\n        <div className='page-button-new'>\n          <div\n            className='form-add-member'\n            // style={{ display: 'none' }}\n          >\n            <div className='modal-header modal-header--change' id='bg-gr'>\n              <div className='text-center w-100'>\n                <h5 className='modal-title new-add' id='exampleModalLabel'>\n                  Edit Member\n                </h5>\n              </div>\n              <div>\n                <button\n                  id='close-modal'\n                  type='button'\n                  className='close bg-transparent '\n                  data-dismiss='modal'\n                  onClick={() => toggleMemberModal()}\n                >\n                  &times;\n                </button>\n              </div>\n            </div>\n            <Formik\n              initialValues={{\n                firstName: dataUser.firstName,\n                lastName: dataUser.lastName,\n                email: dataUser.email,\n                role: TransactionRole.SELLER_AGENT,\n                phoneNumber: dataUser.phone,\n                access: dataUser.access\n              }}\n              onSubmit={(values, action) => this.handleSubmit(values, action)}\n              validate={values => {\n                let error = {}\n                if (values.firstName === '') {\n                  error.firstName = 'First name is required'\n                } else if (values.lastName === '') {\n                  error.lastName = 'Last name is required'\n                } else if (values.email === '') {\n                  error.email = 'Email is required'\n                }\n                return error\n              }}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                isValid,\n                isSubmitting,\n                handleSubmit,\n                handleChange\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div className='d-flex justify-content-center'>\n                    <div\n                      className='modal-body px-5 mx-2'\n                      id='main-body-add-member'\n                    >\n                      <div className='row'>\n                        <div className='col'>\n                          <div className='form-group '>\n                            <label className='tittle-mini-ver'>\n                              First Name\n                            </label>\n                            <input\n                              type='text'\n                              className='form-control'\n                              placeholder='Type here'\n                              onChange={handleChange}\n                              value={values.firstName}\n                              name='firstName'\n                            />\n                            {errors.firstName && (\n                              <small className='text-danger'>\n                                {errors.firstName}\n                              </small>\n                            )}\n                          </div>\n                        </div>\n                        <div className='col'>\n                          <div className='form-group '>\n                            <label className='tittle-mini-ver'>Last Name</label>\n                            <input\n                              type='text'\n                              className='form-control'\n                              placeholder='Type here'\n                              name='lastName'\n                              onChange={handleChange}\n                              value={values.lastName}\n                            />\n                            {errors.lastName && (\n                              <small className='text-danger'>\n                                {errors.lastName}\n                              </small>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row'>\n                        <div className='col-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Email </label>\n                            <input\n                              type='mail'\n                              className='form-control'\n                              placeholder='Type here'\n                              name='email'\n                              onChange={handleChange}\n                              value={values.email}\n                              disabled\n                            />\n                            {errors.email && (\n                              <small className='text-danger'>\n                                {errors.email}\n                              </small>\n                            )}\n                          </div>\n                        </div>\n                        <div className='col-6'>\n                          <label className='tittle-mini-ver'>\n                            Phone Number{' '}\n                          </label>\n                          <PhoneInput\n                            country={'us'}\n                            enableSearch\n                            onChange={value => {\n                              handleChange({\n                                target: { name: 'phoneNumber', value }\n                              })\n                            }}\n                            value={values.phoneNumber}\n                            placeholder='Phone Number'\n                            className='form-control'\n                          />\n                        </div>\n                      </div>\n                      <div className='row'>\n                        <div className='col-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Role</label>\n                            <select\n                              id='role'\n                              className='form-control'\n                              name='role'\n                              onChange={handleChange}\n                              value={values.role}\n                            >\n                              <option value={TransactionRole.SELLER_AGENT}>\n                                Seller’s Agent\n                              </option>\n                              <option value={TransactionRole.BUYING_AGENT}>\n                                Buyer’s Agent\n                              </option>\n                              <option value={TransactionRole.BUYER}>\n                                Buyer\n                              </option>\n                              <option value={TransactionRole.SELLER}>\n                                Seller\n                              </option>\n                              <option\n                                value={TransactionRole.TRANSACTION_COORDINATOR}\n                              >\n                                Transaction Coordinator\n                              </option>\n                              <option value={TransactionRole.ESCROW}>\n                                Escrow\n                              </option>\n                              <option value={TransactionRole.TITLE}>\n                                Title\n                              </option>\n                              <option value={TransactionRole.LENDER}>\n                                Lender\n                              </option>\n                              <option value={TransactionRole.HOME_INSPECTOR}>\n                                Home Inspector\n                              </option>\n                              <option value={TransactionRole.TERMITE}>\n                                Termite\n                              </option>\n                              <option value={TransactionRole.VENDORS}>\n                                Vendors\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className='col-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Access</label>\n                            <select\n                              id='access'\n                              className='form-control'\n                              name='access'\n                              onChange={handleChange}\n                              value={values.access}\n                            >\n                              <option value={TransactionAccessType.FULL}>\n                                Full Access\n                              </option>\n                              <option value={TransactionAccessType.UPLOAD_ONLY}>\n                                Upload Only\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='mt-5 text-center'>\n                    <button\n                      type='submit'\n                      className='btn btn-add-new mb-5 text-white th-11'\n                      disabled={isSubmitting || !isValid}\n                    >\n                      {isSubmitting && (\n                        <span className='spinner-border spinner-border-sm mr-2' />\n                      )}\n                      Save\n                    </button>\n                  </div>\n                </form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nexport default EditRoleAgentModal\n"]},"metadata":{},"sourceType":"module"}