{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar NewsGateway =\n/*#__PURE__*/\nfunction () {\n  function NewsGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, NewsGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(NewsGateway, [{\n    key: \"getAllNew\",\n    value: function () {\n      var _getAllNew = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restConnector.get(\"/news\");\n\n              case 2:\n                resp = _context.sent;\n                return _context.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAllNew() {\n        return _getAllNew.apply(this, arguments);\n      }\n\n      return getAllNew;\n    }()\n  }, {\n    key: \"getViewNews\",\n    value: function () {\n      var _getViewNews = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.restConnector.get(\"/news?filter={\\\"where\\\":{\\\"status\\\":true},\\\"order\\\":\\\"createdAt DESC\\\"}\");\n\n              case 2:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getViewNews() {\n        return _getViewNews.apply(this, arguments);\n      }\n\n      return getViewNews;\n    }()\n  }, {\n    key: \"addNewNews\",\n    value: function () {\n      var _addNewNews = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_ref2) {\n        var title, content, newsType, status, creatorId, resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                title = _ref2.title, content = _ref2.content, newsType = _ref2.newsType, status = _ref2.status, creatorId = _ref2.creatorId;\n                _context3.next = 3;\n                return this.restConnector.post(\"/news\", {\n                  title: title,\n                  content: content,\n                  newsType: newsType,\n                  status: status,\n                  creatorId: creatorId\n                });\n\n              case 3:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function addNewNews(_x) {\n        return _addNewNews.apply(this, arguments);\n      }\n\n      return addNewNews;\n    }()\n  }, {\n    key: \"editNewNews\",\n    value: function () {\n      var _editNewNews = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id, _ref3) {\n        var title, content, newsType, status, resp;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                title = _ref3.title, content = _ref3.content, newsType = _ref3.newsType, status = _ref3.status;\n                _context4.next = 3;\n                return this.restConnector.patch(\"/news/\".concat(id), {\n                  title: title,\n                  content: content,\n                  newsType: newsType,\n                  status: status\n                });\n\n              case 3:\n                resp = _context4.sent;\n                return _context4.abrupt(\"return\", resp.data);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function editNewNews(_x2, _x3) {\n        return _editNewNews.apply(this, arguments);\n      }\n\n      return editNewNews;\n    }()\n  }, {\n    key: \"deleteNews\",\n    value: function () {\n      var _deleteNews = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.restConnector[\"delete\"](\"/news/\".concat(id));\n\n              case 2:\n                resp = _context5.sent;\n                return _context5.abrupt(\"return\", resp.data);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deleteNews(_x4) {\n        return _deleteNews.apply(this, arguments);\n      }\n\n      return deleteNews;\n    }()\n  }]);\n\n  return NewsGateway;\n}();\n\nexport { NewsGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/NewsGateway.js"],"names":["NewsGateway","restConnector","get","resp","data","title","content","newsType","status","creatorId","post","id","patch"],"mappings":";;;;;IAAqBA,W;;;AACnB,6BAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD;;;;;;;;;;;;;;uBAGoB,KAAKA,aAAL,CAAmBC,GAAnB,S;;;AAAbC,gBAAAA,I;iDACCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIO,KAAKH,aAAL,CAAmBC,GAAnB,2E;;;AAAbC,gBAAAA,I;kDAGCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGMC,gBAAAA,K,SAAAA,K,EAAOC,O,SAAAA,O,EAASC,Q,SAAAA,Q,EAAUC,M,SAAAA,M,EAAQC,S,SAAAA,S;;uBACjC,KAAKR,aAAL,CAAmBS,IAAnB,UAAiC;AAClDL,kBAAAA,KAAK,EAALA,KADkD;AAElDC,kBAAAA,OAAO,EAAPA,OAFkD;AAGlDC,kBAAAA,QAAQ,EAARA,QAHkD;AAIlDC,kBAAAA,MAAM,EAANA,MAJkD;AAKlDC,kBAAAA,SAAS,EAATA;AALkD,iBAAjC,C;;;AAAbN,gBAAAA,I;kDAOCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;iDAGKO,E;;;;;;AAAMN,gBAAAA,K,SAAAA,K,EAAOC,O,SAAAA,O,EAASC,Q,SAAAA,Q,EAAUC,M,SAAAA,M;;uBAC9B,KAAKP,aAAL,CAAmBW,KAAnB,iBAAkCD,EAAlC,GAAwC;AACzDN,kBAAAA,KAAK,EAALA,KADyD;AAEzDC,kBAAAA,OAAO,EAAPA,OAFyD;AAGzDC,kBAAAA,QAAQ,EAARA,QAHyD;AAIzDC,kBAAAA,MAAM,EAANA;AAJyD,iBAAxC,C;;;AAAbL,gBAAAA,I;kDAMCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;iDAGIO,E;;;;;;;uBACG,KAAKV,aAAL,2BAAmCU,EAAnC,E;;;AAAbR,gBAAAA,I;kDACCA,IAAI,CAACC,I;;;;;;;;;;;;;;;;;;;;;SAxCKJ,W","sourcesContent":["export default class NewsGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async getAllNew () {\n    const resp = await this.restConnector.get(`/news`)\n    return resp.data\n  }\n\n  async getViewNews () {\n    const resp = await this.restConnector.get(\n      `/news?filter={\"where\":{\"status\":true},\"order\":\"createdAt DESC\"}`\n    )\n    return resp.data\n  }\n\n  async addNewNews ({ title, content, newsType, status, creatorId }) {\n    const resp = await this.restConnector.post(`/news`, {\n      title,\n      content,\n      newsType,\n      status,\n      creatorId\n    })\n    return resp.data\n  }\n\n  async editNewNews (id, { title, content, newsType, status }) {\n    const resp = await this.restConnector.patch(`/news/${id}`, {\n      title,\n      content,\n      newsType,\n      status\n    })\n    return resp.data\n  }\n\n  async deleteNews (id) {\n    const resp = await this.restConnector.delete(`/news/${id}`)\n    return resp.data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}