{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport getConfig from 'next/config';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Document, Page } from 'react-pdf';\nimport PreviewModal from '../TransactionFilesPage/PreviewModal';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar API_BASE_URL = \"\".concat(publicRuntimeConfig.BASE_URL, \"/api\");\n\nvar ViewImage = function ViewImage(_ref) {\n  var modal = _ref.modal,\n      toggle = _ref.toggle,\n      data = _ref.data;\n  return React.createElement(Modal, {\n    className: \"view-image-vendor\",\n    isOpen: modal,\n    toggle: toggle\n  }, React.createElement(ModalHeader, {\n    toggle: toggle\n  }), React.createElement(ModalBody, null, React.createElement(\"img\", {\n    src: \"\".concat(data.uri),\n    alt: \"\",\n    style: {\n      objectFit: 'cover'\n    }\n  })));\n};\n\nvar TransactionDocumentVendor = function TransactionDocumentVendor(_ref2) {\n  var listDocument = _ref2.listDocument;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      document = _useState2[0],\n      setDocument = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var ViewImageMain = function ViewImageMain(data) {\n    setImage(data);\n    setModal(true);\n  };\n\n  var pdfRef = useRef(null);\n\n  var checkType = function checkType(data) {\n    if (data) {\n      if (data.uri) {\n        var type = data.uri.split('.').pop();\n\n        switch (type) {\n          case 'jpg':\n            return 'image';\n\n          case 'png':\n            return 'image';\n\n          case 'jpeg':\n            return 'image';\n\n          case 'gif':\n            return 'image';\n\n          case 'bmp':\n            return 'image';\n\n          case 'mp4':\n            return 'video';\n\n          case 'avi':\n            return 'video';\n\n          case 'm4v':\n            return 'video';\n\n          case 'mov':\n            return 'video';\n\n          case 'mpg':\n            return 'video';\n\n          case 'flv':\n            return 'video';\n\n          case 'wmv':\n            return 'video';\n\n          case 'pdf':\n            return 'application';\n\n          default:\n            break;\n        }\n      }\n    }\n  };\n\n  var viewName = function viewName() {\n    var link = listDocument.map(function (x) {\n      return x.linkDocument;\n    });\n\n    if (link) {\n      if (link.length > 0) {\n        return link[0];\n      }\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"row ml-0 mr-0 h-auto\",\n    style: {\n      paddingLeft: '10px',\n      paddingRight: '10px',\n      marginTop: '30px'\n    }\n  }, React.createElement(\"div\", {\n    className: \"card rounded shadow-sm p-4\"\n  }, React.createElement(\"h2\", {\n    className: \"title font-weight-bold\",\n    style: {\n      fontSize: '26px'\n    }\n  }, \"Vendors\"), React.createElement(\"p\", {\n    className: \"mt-3 th-a th-color-blue\"\n  }, viewName()), React.createElement(\"div\", {\n    className: \"col-12 pl-0 pr-0\"\n  }, React.createElement(\"div\", {\n    className: \"row\"\n  }, listDocument.map(function (data, index) {\n    if (checkType(data) === 'image') {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-xl-3 mb-3\",\n        style: {\n          height: '360px'\n        },\n        key: index,\n        onClick: function onClick() {\n          return ViewImageMain(data);\n        }\n      }, React.createElement(\"img\", {\n        src: \"\".concat(data.uri),\n        alt: \"\",\n        style: {\n          objectFit: 'cover',\n          cursor: 'pointer',\n          border: '1px solid rgba(0, 0, 0, 0.2)'\n        }\n      }));\n    }\n\n    if (checkType(data) === 'video') {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-xl-3 mb-3\",\n        style: {\n          height: '360px'\n        },\n        key: index\n      }, React.createElement(\"video\", {\n        playsInline: true,\n        controls: true,\n        className: \"h-100 w-100\",\n        style: {\n          border: '1px solid rgba(0, 0, 0, 0.2)'\n        }\n      }, React.createElement(\"source\", {\n        src: \"\".concat(data.uri),\n        type: \"video/mp4\"\n      })));\n    }\n\n    if (checkType(data) === 'application') {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-xl-3 mb-3 pdf-set\",\n        style: {\n          height: '360px'\n        },\n        key: index\n      }, React.createElement(\"div\", {\n        ref: pdfRef,\n        className: \"u-clickable app-document-card\",\n        onClick: function onClick() {\n          return setDocument(data);\n        }\n      }, pdfRef.current && React.createElement(Document, {\n        file: \"\".concat(API_BASE_URL, \"/documents/\").concat(data.id, \"/download\")\n      }, React.createElement(Page, {\n        pageNumber: 1,\n        width: pdfRef.current.clientWidth\n      }))));\n    }\n  }))))), document && React.createElement(PreviewModal, {\n    toggle: function toggle() {\n      return setDocument(null);\n    },\n    document: document\n  }), image && React.createElement(ViewImage, {\n    modal: modal,\n    toggle: toggle,\n    data: image\n  }));\n};\n\nexport default TransactionDocumentVendor;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/TransactionPartiesPage/TransactionDocumentVendor.js"],"names":["React","useRef","useState","getConfig","Modal","ModalHeader","ModalBody","Document","Page","PreviewModal","publicRuntimeConfig","API_BASE_URL","BASE_URL","ViewImage","modal","toggle","data","uri","objectFit","TransactionDocumentVendor","listDocument","document","setDocument","setModal","image","setImage","ViewImageMain","pdfRef","checkType","type","split","pop","viewName","link","map","x","linkDocument","length","paddingLeft","paddingRight","marginTop","fontSize","index","height","cursor","border","current","id","clientWidth"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport getConfig from 'next/config'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport { Document, Page } from 'react-pdf'\nimport PreviewModal from '../TransactionFilesPage/PreviewModal'\n\nconst { publicRuntimeConfig } = getConfig()\nconst API_BASE_URL = `${publicRuntimeConfig.BASE_URL}/api`\n\nconst ViewImage = ({ modal, toggle, data }) => {\n  return (\n    <Modal className='view-image-vendor' isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle} />\n      <ModalBody>\n        <img src={`${data.uri}`} alt='' style={{ objectFit: 'cover' }} />\n      </ModalBody>\n    </Modal>\n  )\n}\n\nconst TransactionDocumentVendor = ({ listDocument }) => {\n  const [document, setDocument] = useState(null)\n  const [modal, setModal] = useState(false)\n  const [image, setImage] = useState(null)\n  const toggle = () => setModal(!modal)\n  const ViewImageMain = data => {\n    setImage(data)\n    setModal(true)\n  }\n  const pdfRef = useRef(null)\n  const checkType = data => {\n    if (data) {\n      if (data.uri) {\n        let type = data.uri.split('.').pop()\n        switch (type) {\n          case 'jpg':\n            return 'image'\n          case 'png':\n            return 'image'\n          case 'jpeg':\n            return 'image'\n          case 'gif':\n            return 'image'\n          case 'bmp':\n            return 'image'\n          case 'mp4':\n            return 'video'\n          case 'avi':\n            return 'video'\n          case 'm4v':\n            return 'video'\n          case 'mov':\n            return 'video'\n          case 'mpg':\n            return 'video'\n          case 'flv':\n            return 'video'\n          case 'wmv':\n            return 'video'\n          case 'pdf':\n            return 'application'\n          default:\n            break\n        }\n      }\n    }\n  }\n  const viewName = () => {\n    const link = listDocument.map(x => x.linkDocument)\n    if (link) {\n      if (link.length > 0) {\n        return link[0]\n      }\n    }\n  }\n  return (\n    <>\n      <div\n        className='row ml-0 mr-0 h-auto'\n        style={{ paddingLeft: '10px', paddingRight: '10px', marginTop: '30px' }}\n      >\n        <div className='card rounded shadow-sm p-4'>\n          <h2 className='title font-weight-bold' style={{ fontSize: '26px' }}>\n            Vendors\n          </h2>\n          <p className='mt-3 th-a th-color-blue'>{viewName()}</p>\n          <div className='col-12 pl-0 pr-0'>\n            <div className='row'>\n              {listDocument.map((data, index) => {\n                if (checkType(data) === 'image') {\n                  return (\n                    <div\n                      className='col-12 col-md-4 col-xl-3 mb-3'\n                      style={{ height: '360px' }}\n                      key={index}\n                      onClick={() => ViewImageMain(data)}\n                    >\n                      <img\n                        src={`${data.uri}`}\n                        alt=''\n                        style={{\n                          objectFit: 'cover',\n                          cursor: 'pointer',\n                          border: '1px solid rgba(0, 0, 0, 0.2)'\n                        }}\n                      />\n                    </div>\n                  )\n                }\n                if (checkType(data) === 'video') {\n                  return (\n                    <div\n                      className='col-12 col-md-4 col-xl-3 mb-3'\n                      style={{ height: '360px' }}\n                      key={index}\n                    >\n                      <video\n                        playsInline\n                        controls\n                        className='h-100 w-100'\n                        style={{ border: '1px solid rgba(0, 0, 0, 0.2)' }}\n                      >\n                        <source src={`${data.uri}`} type='video/mp4' />\n                      </video>\n                    </div>\n                  )\n                }\n                if (checkType(data) === 'application') {\n                  return (\n                    <div\n                      className='col-12 col-md-4 col-xl-3 mb-3 pdf-set'\n                      style={{ height: '360px' }}\n                      key={index}\n                    >\n                      <div\n                        ref={pdfRef}\n                        className='u-clickable app-document-card'\n                        onClick={() => setDocument(data)}\n                      >\n                        {pdfRef.current && (\n                          <Document\n                            file={`${API_BASE_URL}/documents/${\n                              data.id\n                            }/download`}\n                          >\n                            <Page\n                              pageNumber={1}\n                              width={pdfRef.current.clientWidth}\n                            />\n                          </Document>\n                        )}\n                      </div>\n                    </div>\n                  )\n                }\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n      {document && (\n        <PreviewModal toggle={() => setDocument(null)} document={document} />\n      )}\n      {image && <ViewImage modal={modal} toggle={toggle} data={image} />}\n    </>\n  )\n}\n\nexport default TransactionDocumentVendor\n"]},"metadata":{},"sourceType":"module"}