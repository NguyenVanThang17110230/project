{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime-corejs2/helpers/typeof\";\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer as globalReducer } from './globalRedux';\nimport * as services from '../services';\nvar DEFAULT_INITIAL_STATE = {\n  global: {\n    loginUser: {\n      id: 'loginUser',\n      data: null\n    },\n    uiState: {\n      id: 'uiState',\n      data: {}\n    },\n    test: {\n      id: 'test',\n      data: 'In Progress'\n    },\n    parties: {\n      id: 'parties',\n      data: 'Main'\n    },\n    isToggleNew: {\n      id: 'isToggleNew',\n      data: false\n    },\n    dashboard: {\n      id: 'dashboard',\n      data: 'Main'\n    }\n  }\n};\nexport var makeStore = function makeStore(initialState) {\n  var composeEnhancers = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose; // state name redux\n\n  return createStore(combineReducers({\n    global: globalReducer\n  }), _objectSpread({}, DEFAULT_INITIAL_STATE, initialState), composeEnhancers(applyMiddleware(thunk.withExtraArgument(services))));\n};","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","reducer","globalReducer","services","DEFAULT_INITIAL_STATE","global","loginUser","id","data","uiState","test","parties","isToggleNew","dashboard","makeStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","withExtraArgument"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAO,IAAIC,aAApB,QAAyC,eAAzC;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AAEA,IAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAE,WADK;AAETC,MAAAA,IAAI,EAAE;AAFG,KADL;AAKNC,IAAAA,OAAO,EAAE;AACPF,MAAAA,EAAE,EAAE,SADG;AAEPC,MAAAA,IAAI,EAAE;AAFC,KALH;AASNE,IAAAA,IAAI,EAAE;AACJH,MAAAA,EAAE,EAAE,MADA;AAEJC,MAAAA,IAAI,EAAE;AAFF,KATA;AAaNG,IAAAA,OAAO,EAAE;AACPJ,MAAAA,EAAE,EAAE,SADG;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAbH;AAiBNI,IAAAA,WAAW,EAAE;AACXL,MAAAA,EAAE,EAAE,aADO;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAjBP;AAqBNK,IAAAA,SAAS,EAAE;AACTN,MAAAA,EAAE,EAAE,WADK;AAETC,MAAAA,IAAI,EAAE;AAFG;AArBL;AADoB,CAA9B;AA6BA,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAAAC,YAAY,EAAI;AACvC,MAAMC,gBAAgB,GACpB,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAAlB,IAA8BA,MAAM,CAACC,oCAArC,GACID,MAAM,CAACC,oCAAP,CAA4C,EAA5C,CADJ,GAEInB,OAHN,CADuC,CAKvC;;AACA,SAAOH,WAAW,CAChBC,eAAe,CAAC;AACdQ,IAAAA,MAAM,EAAEH;AADM,GAAD,CADC,oBAKXE,qBALW,EAMXW,YANW,GAQhBC,gBAAgB,CAAClB,eAAe,CAACE,KAAK,CAACmB,iBAAN,CAAwBhB,QAAxB,CAAD,CAAhB,CARA,CAAlB;AAUD,CAhBM","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { reducer as globalReducer } from './globalRedux'\nimport * as services from '../services'\n\nconst DEFAULT_INITIAL_STATE = {\n  global: {\n    loginUser: {\n      id: 'loginUser',\n      data: null\n    },\n    uiState: {\n      id: 'uiState',\n      data: {}\n    },\n    test: {\n      id: 'test',\n      data: 'In Progress'\n    },\n    parties: {\n      id: 'parties',\n      data: 'Main'\n    },\n    isToggleNew: {\n      id: 'isToggleNew',\n      data: false\n    },\n    dashboard: {\n      id: 'dashboard',\n      data: 'Main'\n    }\n  }\n}\n\nexport const makeStore = initialState => {\n  const composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose\n  // state name redux\n  return createStore(\n    combineReducers({\n      global: globalReducer\n    }),\n    {\n      ...DEFAULT_INITIAL_STATE,\n      ...initialState\n    },\n    composeEnhancers(applyMiddleware(thunk.withExtraArgument(services)))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}