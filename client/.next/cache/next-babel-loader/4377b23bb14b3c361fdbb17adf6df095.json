{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\n\nvar _TRANSACTION_ACTIVITY, _ACTION_TYPE;\n\nimport React from \"react\";\nimport { TransactionActivityType, DocumentActionStatus, DataAccessType, TransactionRole } from '../../common/models/Transaction';\nexport var getTransactionFullAddress = function getTransactionFullAddress(transaction) {\n  return \"\".concat(transaction.address);\n};\nvar TRANSACTION_ACTIVITY_TYPE = (_TRANSACTION_ACTIVITY = {}, _defineProperty(_TRANSACTION_ACTIVITY, TransactionActivityType.TRANSACTION_CREATE, 'Transaction Created'), _defineProperty(_TRANSACTION_ACTIVITY, TransactionActivityType.PROFILE_CREATED, 'Profile Created'), _defineProperty(_TRANSACTION_ACTIVITY, TransactionActivityType.PARTY_JOINED_TRANSACTION, 'Party Joined Transaction'), _defineProperty(_TRANSACTION_ACTIVITY, TransactionActivityType.INVITING_TO_PARTY, 'Inviting To Party'), _defineProperty(_TRANSACTION_ACTIVITY, TransactionActivityType.UPLOADED_BY, 'uploaded by'), _defineProperty(_TRANSACTION_ACTIVITY, TransactionActivityType.TRANSACTION_DELETE_BY_ADMIN, 'Transaction deleted by admin'), _TRANSACTION_ACTIVITY);\nexport var getTransactionActivity = function getTransactionActivity(type) {\n  return TRANSACTION_ACTIVITY_TYPE[type];\n}; // ===== ~ Count percent ~ =====\n// “Actions”: A list of document actions assigned to this party\n\nvar _calculatorPercentageOfAssignedActions = function _calculatorPercentageOfAssignedActions(assignedActions) {\n  if (assignedActions.length === 0) {\n    return 0;\n  }\n\n  var actionsDone = assignedActions.filter(function (action) {\n    return action.status === DocumentActionStatus.DONE;\n  });\n  return actionsDone.length / assignedActions.length;\n}; // “Uploaded documents”: A list of documents uploaded in this party\n\n\nvar _calculatorPercentageOfDocument = function _calculatorPercentageOfDocument(actions) {\n  if (actions.length === 0) {\n    return 0;\n  }\n\n  var actionsDone = actions.filter(function (action) {\n    return action.status === DocumentActionStatus.DONE;\n  });\n  return actionsDone.length / actions.length;\n};\n\nexport var calculatorPercentageOfParty = function calculatorPercentageOfParty(documents, assignedActions) {\n  var completedDocumentCount = 0;\n  documents.forEach(function (document) {\n    completedDocumentCount += _calculatorPercentageOfDocument(document.actions);\n  });\n  var percentCompleteDocuments = completedDocumentCount / documents.length;\n\n  var percentCompleteActions = _calculatorPercentageOfAssignedActions(assignedActions); // Not Uploaded files\n\n\n  if (documents.length === 0) {\n    return percentCompleteActions;\n  } // Not Actions\n\n\n  if (percentCompleteActions === 0) {\n    return percentCompleteDocuments;\n  }\n\n  return (percentCompleteDocuments + percentCompleteActions) / 2;\n};\n\nvar _isInvited = function _isInvited(parties, invitations) {\n  var isNotInvition = parties.find(function (party) {\n    return party.role === TransactionRole.BUYER_AGENT || party.role === TransactionRole.SELLER_AGENT || party.role === TransactionRole.LEASING_AGENT || party.role === TransactionRole.TRANSACTION_COORDINATOR;\n  });\n\n  if (isNotInvition) {\n    return invitations.length - parties.length + 1;\n  }\n\n  return invitations.length - parties.length;\n};\n\nexport var calculatorPercentageOfTransaction = function calculatorPercentageOfTransaction(parties, invitations) {\n  if (parties.length === 1) {\n    return 0;\n  } // Because you do not manipulate the card \"Leasing Agent\"\n\n\n  var isRoleLeasingAgent = parties.find(function (party) {\n    return party.role === TransactionRole.LEASING_AGENT;\n  });\n\n  if (isRoleLeasingAgent) {\n    parties.shift();\n\n    if (parties.length === 0) {\n      return 0;\n    }\n  }\n\n  var percentParties = parties.map(function (party) {\n    return calculatorPercentageOfParty(party.documents, party.assignedActions);\n  });\n  var totalNumerator = percentParties.reduce(function (total, percent) {\n    return total += percent;\n  }, 0);\n\n  var isInvited = _isInvited(parties, invitations);\n\n  return totalNumerator / (parties.length + isInvited);\n};\nexport var roundPercent = function roundPercent(number) {\n  return Math.floor(number * 100);\n}; // ===== ~ Status of Document ~ =====\n\nexport var DOCUMENT_STATUS = {\n  INCOMPLETE: 'Incomplete',\n  COMPLETE: 'Complete'\n};\nvar ACTION_STATUS = {\n  UNVIEWED: 'Unviewed',\n  UNSIGNED: 'Unsigned',\n  RECEIVED: 'Received',\n  VIEWED: 'Viewed',\n  SIGNED: 'Signed'\n};\nexport var canAddDocumentAction = function canAddDocumentAction(currentParty, document) {\n  if (currentParty.id === document.partyId) {\n    return true;\n  }\n\n  if (currentParty.id === document.creatorId) {\n    return true;\n  }\n\n  return false;\n}; // Have the right to complete \"Document\"\n\nexport var canCompleteDocument = function canCompleteDocument(currentParty, document) {\n  if (document.actions.length === 0) {\n    return false;\n  }\n\n  if (currentParty.id === document.partyId) {\n    return true;\n  }\n\n  if (currentParty.id === document.creatorId) {\n    return true;\n  }\n\n  return false;\n}; // Have the right to complete \"DocumetAction\"\n\nexport var canCompleteDocumentAction = function canCompleteDocumentAction(currentParty, action) {\n  if (action.status === DocumentActionStatus.DONE) {\n    return false;\n  }\n\n  if (currentParty.id === action.assignedPartyId) {\n    return true;\n  }\n\n  return false;\n};\nexport var getStatusForDocumentAction = function getStatusForDocumentAction(action) {\n  if (action.status === DocumentActionStatus.TODO) {\n    return DOCUMENT_STATUS.INCOMPLETE;\n  }\n\n  return DOCUMENT_STATUS.COMPLETE;\n}; // Existing an element whose status is todo is not complete\n\nexport var getStatusForDocument = function getStatusForDocument(document) {\n  if (document.actions.length === 0) {\n    return DOCUMENT_STATUS.INCOMPLETE;\n  }\n\n  var isTodo = document.actions.find(function (action) {\n    return action.status === DocumentActionStatus.TODO;\n  });\n\n  if (isTodo) {\n    return DOCUMENT_STATUS.INCOMPLETE;\n  }\n\n  return DOCUMENT_STATUS.COMPLETE;\n};\nexport var getActionStatusForDocumentAction = function getActionStatusForDocumentAction(action) {\n  if (action.status === DocumentActionStatus.TODO) {\n    if (action.action === DataAccessType.SIGN_DOCUMENT) {\n      return React.createElement(\"div\", {\n        className: \"text-danger\"\n      }, ACTION_STATUS.UNSIGNED);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"text-danger\"\n    }, ACTION_STATUS.UNVIEWED);\n  } // Case status of action is DONE\n\n\n  if (action.action === DataAccessType.SIGN_DOCUMENT) {\n    return React.createElement(\"div\", {\n      className: \"text-success\"\n    }, ACTION_STATUS.SIGNED);\n  } else if (action.action === DataAccessType.VIEW_ONLY) {\n    return React.createElement(\"div\", {\n      className: \"text-success\"\n    }, ACTION_STATUS.VIEWED);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-success\"\n  }, ACTION_STATUS.RECEIVED);\n}; // ===== ~ Party View ~ ===== ///\n\nexport var PARTY_VIEW = {\n  MAIN: 'Main',\n  ACTIONS_NEEDED: 'Actions Needed',\n  MY_DOCUMENTS: 'My Documents',\n  ENVELOPES: 'Envelopes',\n  VIEW_DETAILS: 'View Details' // ===== ~ Header Text ~ ===== //\n\n};\nexport var HEADER_TEXT = {\n  TRANSACTION_DOCUMENTS: 'Transaction Documents' // ===== ~ Document Action ~ ===== //\n\n};\nexport var ACTION_TYPE = (_ACTION_TYPE = {}, _defineProperty(_ACTION_TYPE, DataAccessType.VIEW_ONLY, 'View'), _defineProperty(_ACTION_TYPE, DataAccessType.REVIEW_DOCUMENT, 'Review'), _defineProperty(_ACTION_TYPE, DataAccessType.SIGN_DOCUMENT, 'Needs Signature'), _ACTION_TYPE);","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/view-models/Transaction.js"],"names":["TransactionActivityType","DocumentActionStatus","DataAccessType","TransactionRole","getTransactionFullAddress","transaction","address","TRANSACTION_ACTIVITY_TYPE","TRANSACTION_CREATE","PROFILE_CREATED","PARTY_JOINED_TRANSACTION","INVITING_TO_PARTY","UPLOADED_BY","TRANSACTION_DELETE_BY_ADMIN","getTransactionActivity","type","_calculatorPercentageOfAssignedActions","assignedActions","length","actionsDone","filter","action","status","DONE","_calculatorPercentageOfDocument","actions","calculatorPercentageOfParty","documents","completedDocumentCount","forEach","document","percentCompleteDocuments","percentCompleteActions","_isInvited","parties","invitations","isNotInvition","find","party","role","BUYER_AGENT","SELLER_AGENT","LEASING_AGENT","TRANSACTION_COORDINATOR","calculatorPercentageOfTransaction","isRoleLeasingAgent","shift","percentParties","map","totalNumerator","reduce","total","percent","isInvited","roundPercent","number","Math","floor","DOCUMENT_STATUS","INCOMPLETE","COMPLETE","ACTION_STATUS","UNVIEWED","UNSIGNED","RECEIVED","VIEWED","SIGNED","canAddDocumentAction","currentParty","id","partyId","creatorId","canCompleteDocument","canCompleteDocumentAction","assignedPartyId","getStatusForDocumentAction","TODO","getStatusForDocument","isTodo","getActionStatusForDocumentAction","SIGN_DOCUMENT","VIEW_ONLY","PARTY_VIEW","MAIN","ACTIONS_NEEDED","MY_DOCUMENTS","ENVELOPES","VIEW_DETAILS","HEADER_TEXT","TRANSACTION_DOCUMENTS","ACTION_TYPE","REVIEW_DOCUMENT"],"mappings":";;;;;AAAA,SACEA,uBADF,EAEEC,oBAFF,EAGEC,cAHF,EAIEC,eAJF,QAKO,iCALP;AAOA,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,WAAW,EAAI;AACtD,mBAAUA,WAAW,CAACC,OAAtB;AACD,CAFM;AAIP,IAAMC,yBAAyB,uEAC5BP,uBAAuB,CAACQ,kBADI,EACiB,qBADjB,0CAE5BR,uBAAuB,CAACS,eAFI,EAEc,iBAFd,0CAG5BT,uBAAuB,CAACU,wBAHI,EAI3B,0BAJ2B,0CAK5BV,uBAAuB,CAACW,iBALI,EAKgB,mBALhB,0CAM5BX,uBAAuB,CAACY,WANI,EAMU,aANV,0CAO5BZ,uBAAuB,CAACa,2BAPI,EAQ3B,8BAR2B,yBAA/B;AAWA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,IAAI,EAAI;AAC5C,SAAOR,yBAAyB,CAACQ,IAAD,CAAhC;AACD,CAFM,C,CAGP;AACA;;AACA,IAAMC,sCAAsC,GAAG,SAAzCA,sCAAyC,CAAAC,eAAe,EAAI;AAChE,MAAIA,eAAe,CAACC,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,WAAO,CAAP;AACD;;AACD,MAAMC,WAAW,GAAGF,eAAe,CAACG,MAAhB,CAAuB,UAAAC,MAAM,EAAI;AACnD,WAAOA,MAAM,CAACC,MAAP,KAAkBrB,oBAAoB,CAACsB,IAA9C;AACD,GAFmB,CAApB;AAIA,SAAOJ,WAAW,CAACD,MAAZ,GAAqBD,eAAe,CAACC,MAA5C;AACD,CATD,C,CAWA;;;AACA,IAAMM,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAAC,OAAO,EAAI;AACjD,MAAIA,OAAO,CAACP,MAAR,KAAmB,CAAvB,EAA0B;AACxB,WAAO,CAAP;AACD;;AACD,MAAMC,WAAW,GAAGM,OAAO,CAACL,MAAR,CAAe,UAAAC,MAAM,EAAI;AAC3C,WAAOA,MAAM,CAACC,MAAP,KAAkBrB,oBAAoB,CAACsB,IAA9C;AACD,GAFmB,CAApB;AAGA,SAAOJ,WAAW,CAACD,MAAZ,GAAqBO,OAAO,CAACP,MAApC;AACD,CARD;;AAUA,OAAO,IAAMQ,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,SAAD,EAAYV,eAAZ,EAAgC;AACzE,MAAIW,sBAAsB,GAAG,CAA7B;AACAD,EAAAA,SAAS,CAACE,OAAV,CAAkB,UAAAC,QAAQ,EAAI;AAC5BF,IAAAA,sBAAsB,IAAIJ,+BAA+B,CAACM,QAAQ,CAACL,OAAV,CAAzD;AACD,GAFD;AAIA,MAAMM,wBAAwB,GAAGH,sBAAsB,GAAGD,SAAS,CAACT,MAApE;;AACA,MAAMc,sBAAsB,GAAGhB,sCAAsC,CACnEC,eADmE,CAArE,CAPyE,CAUzE;;;AAEA,MAAIU,SAAS,CAACT,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAOc,sBAAP;AACD,GAdwE,CAezE;;;AACA,MAAIA,sBAAsB,KAAK,CAA/B,EAAkC;AAChC,WAAOD,wBAAP;AACD;;AAED,SAAO,CAACA,wBAAwB,GAAGC,sBAA5B,IAAsD,CAA7D;AACD,CArBM;;AAuBP,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,WAAV,EAA0B;AAC3C,MAAMC,aAAa,GAAGF,OAAO,CAACG,IAAR,CACpB,UAAAC,KAAK;AAAA,WACHA,KAAK,CAACC,IAAN,KAAepC,eAAe,CAACqC,WAA/B,IACAF,KAAK,CAACC,IAAN,KAAepC,eAAe,CAACsC,YAD/B,IAEAH,KAAK,CAACC,IAAN,KAAepC,eAAe,CAACuC,aAF/B,IAGAJ,KAAK,CAACC,IAAN,KAAepC,eAAe,CAACwC,uBAJ5B;AAAA,GADe,CAAtB;;AAOA,MAAIP,aAAJ,EAAmB;AACjB,WAAOD,WAAW,CAACjB,MAAZ,GAAqBgB,OAAO,CAAChB,MAA7B,GAAsC,CAA7C;AACD;;AACD,SAAOiB,WAAW,CAACjB,MAAZ,GAAqBgB,OAAO,CAAChB,MAApC;AACD,CAZD;;AAcA,OAAO,IAAM0B,iCAAiC,GAAG,SAApCA,iCAAoC,CAACV,OAAD,EAAUC,WAAV,EAA0B;AACzE,MAAID,OAAO,CAAChB,MAAR,KAAmB,CAAvB,EAA0B;AACxB,WAAO,CAAP;AACD,GAHwE,CAKzE;;;AACA,MAAM2B,kBAAkB,GAAGX,OAAO,CAACG,IAAR,CACzB,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,KAAepC,eAAe,CAACuC,aAAnC;AAAA,GADoB,CAA3B;;AAGA,MAAIG,kBAAJ,EAAwB;AACtBX,IAAAA,OAAO,CAACY,KAAR;;AACA,QAAIZ,OAAO,CAAChB,MAAR,KAAmB,CAAvB,EAA0B;AACxB,aAAO,CAAP;AACD;AACF;;AAED,MAAM6B,cAAc,GAAGb,OAAO,CAACc,GAAR,CAAY,UAAAV,KAAK;AAAA,WACtCZ,2BAA2B,CAACY,KAAK,CAACX,SAAP,EAAkBW,KAAK,CAACrB,eAAxB,CADW;AAAA,GAAjB,CAAvB;AAIA,MAAMgC,cAAc,GAAGF,cAAc,CAACG,MAAf,CAAsB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAC/D,WAAQD,KAAK,IAAIC,OAAjB;AACD,GAFsB,EAEpB,CAFoB,CAAvB;;AAIA,MAAMC,SAAS,GAAGpB,UAAU,CAACC,OAAD,EAAUC,WAAV,CAA5B;;AAEA,SAAOc,cAAc,IAAIf,OAAO,CAAChB,MAAR,GAAiBmC,SAArB,CAArB;AACD,CA3BM;AA6BP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM,EAAI;AACpC,SAAOC,IAAI,CAACC,KAAL,CAAWF,MAAM,GAAG,GAApB,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAMG,eAAe,GAAG;AAC7BC,EAAAA,UAAU,EAAE,YADiB;AAE7BC,EAAAA,QAAQ,EAAE;AAFmB,CAAxB;AAKP,IAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,UADU;AAEpBC,EAAAA,QAAQ,EAAE,UAFU;AAGpBC,EAAAA,QAAQ,EAAE,UAHU;AAIpBC,EAAAA,MAAM,EAAE,QAJY;AAKpBC,EAAAA,MAAM,EAAE;AALY,CAAtB;AAQA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,YAAD,EAAetC,QAAf,EAA4B;AAC9D,MAAIsC,YAAY,CAACC,EAAb,KAAoBvC,QAAQ,CAACwC,OAAjC,EAA0C;AACxC,WAAO,IAAP;AACD;;AACD,MAAIF,YAAY,CAACC,EAAb,KAAoBvC,QAAQ,CAACyC,SAAjC,EAA4C;AAC1C,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CARM,C,CAUP;;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,YAAD,EAAetC,QAAf,EAA4B;AAC7D,MAAIA,QAAQ,CAACL,OAAT,CAAiBP,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WAAO,KAAP;AACD;;AACD,MAAIkD,YAAY,CAACC,EAAb,KAAoBvC,QAAQ,CAACwC,OAAjC,EAA0C;AACxC,WAAO,IAAP;AACD;;AACD,MAAIF,YAAY,CAACC,EAAb,KAAoBvC,QAAQ,CAACyC,SAAjC,EAA4C;AAC1C,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAXM,C,CAaP;;AACA,OAAO,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACL,YAAD,EAAe/C,MAAf,EAA0B;AACjE,MAAIA,MAAM,CAACC,MAAP,KAAkBrB,oBAAoB,CAACsB,IAA3C,EAAiD;AAC/C,WAAO,KAAP;AACD;;AACD,MAAI6C,YAAY,CAACC,EAAb,KAAoBhD,MAAM,CAACqD,eAA/B,EAAgD;AAC9C,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CARM;AAUP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAtD,MAAM,EAAI;AAClD,MAAIA,MAAM,CAACC,MAAP,KAAkBrB,oBAAoB,CAAC2E,IAA3C,EAAiD;AAC/C,WAAOlB,eAAe,CAACC,UAAvB;AACD;;AACD,SAAOD,eAAe,CAACE,QAAvB;AACD,CALM,C,CAOP;;AACA,OAAO,IAAMiB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA/C,QAAQ,EAAI;AAC9C,MAAIA,QAAQ,CAACL,OAAT,CAAiBP,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WAAOwC,eAAe,CAACC,UAAvB;AACD;;AAED,MAAMmB,MAAM,GAAGhD,QAAQ,CAACL,OAAT,CAAiBY,IAAjB,CACb,UAAAhB,MAAM;AAAA,WAAIA,MAAM,CAACC,MAAP,KAAkBrB,oBAAoB,CAAC2E,IAA3C;AAAA,GADO,CAAf;;AAGA,MAAIE,MAAJ,EAAY;AACV,WAAOpB,eAAe,CAACC,UAAvB;AACD;;AACD,SAAOD,eAAe,CAACE,QAAvB;AACD,CAZM;AAcP,OAAO,IAAMmB,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAA1D,MAAM,EAAI;AACxD,MAAIA,MAAM,CAACC,MAAP,KAAkBrB,oBAAoB,CAAC2E,IAA3C,EAAiD;AAC/C,QAAIvD,MAAM,CAACA,MAAP,KAAkBnB,cAAc,CAAC8E,aAArC,EAAoD;AAClD,aAAO;AAAK,QAAA,SAAS,EAAC;AAAf,SAA8BnB,aAAa,CAACE,QAA5C,CAAP;AACD;;AACD,WAAO;AAAK,MAAA,SAAS,EAAC;AAAf,OAA8BF,aAAa,CAACC,QAA5C,CAAP;AACD,GANuD,CAQxD;;;AACA,MAAIzC,MAAM,CAACA,MAAP,KAAkBnB,cAAc,CAAC8E,aAArC,EAAoD;AAClD,WAAO;AAAK,MAAA,SAAS,EAAC;AAAf,OAA+BnB,aAAa,CAACK,MAA7C,CAAP;AACD,GAFD,MAEO,IAAI7C,MAAM,CAACA,MAAP,KAAkBnB,cAAc,CAAC+E,SAArC,EAAgD;AACrD,WAAO;AAAK,MAAA,SAAS,EAAC;AAAf,OAA+BpB,aAAa,CAACI,MAA7C,CAAP;AACD;;AACD,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KAA+BJ,aAAa,CAACG,QAA7C,CAAP;AACD,CAfM,C,CAiBP;;AACA,OAAO,IAAMkB,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,MADkB;AAExBC,EAAAA,cAAc,EAAE,gBAFQ;AAGxBC,EAAAA,YAAY,EAAE,cAHU;AAIxBC,EAAAA,SAAS,EAAE,WAJa;AAKxBC,EAAAA,YAAY,EAAE,cALU,CAQ1B;;AAR0B,CAAnB;AASP,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,qBAAqB,EAAE,uBADE,CAI3B;;AAJ2B,CAApB;AAKP,OAAO,IAAMC,WAAW,qDACrBxF,cAAc,CAAC+E,SADM,EACM,MADN,iCAErB/E,cAAc,CAACyF,eAFM,EAEY,QAFZ,iCAGrBzF,cAAc,CAAC8E,aAHM,EAGU,iBAHV,gBAAjB","sourcesContent":["import {\n  TransactionActivityType,\n  DocumentActionStatus,\n  DataAccessType,\n  TransactionRole\n} from '../../common/models/Transaction'\n\nexport const getTransactionFullAddress = transaction => {\n  return `${transaction.address}`\n}\n\nconst TRANSACTION_ACTIVITY_TYPE = {\n  [TransactionActivityType.TRANSACTION_CREATE]: 'Transaction Created',\n  [TransactionActivityType.PROFILE_CREATED]: 'Profile Created',\n  [TransactionActivityType.PARTY_JOINED_TRANSACTION]:\n    'Party Joined Transaction',\n  [TransactionActivityType.INVITING_TO_PARTY]: 'Inviting To Party',\n  [TransactionActivityType.UPLOADED_BY]: 'uploaded by',\n  [TransactionActivityType.TRANSACTION_DELETE_BY_ADMIN]:\n    'Transaction deleted by admin'\n}\n\nexport const getTransactionActivity = type => {\n  return TRANSACTION_ACTIVITY_TYPE[type]\n}\n// ===== ~ Count percent ~ =====\n// “Actions”: A list of document actions assigned to this party\nconst _calculatorPercentageOfAssignedActions = assignedActions => {\n  if (assignedActions.length === 0) {\n    return 0\n  }\n  const actionsDone = assignedActions.filter(action => {\n    return action.status === DocumentActionStatus.DONE\n  })\n\n  return actionsDone.length / assignedActions.length\n}\n\n// “Uploaded documents”: A list of documents uploaded in this party\nconst _calculatorPercentageOfDocument = actions => {\n  if (actions.length === 0) {\n    return 0\n  }\n  const actionsDone = actions.filter(action => {\n    return action.status === DocumentActionStatus.DONE\n  })\n  return actionsDone.length / actions.length\n}\n\nexport const calculatorPercentageOfParty = (documents, assignedActions) => {\n  let completedDocumentCount = 0\n  documents.forEach(document => {\n    completedDocumentCount += _calculatorPercentageOfDocument(document.actions)\n  })\n\n  const percentCompleteDocuments = completedDocumentCount / documents.length\n  const percentCompleteActions = _calculatorPercentageOfAssignedActions(\n    assignedActions\n  )\n  // Not Uploaded files\n\n  if (documents.length === 0) {\n    return percentCompleteActions\n  }\n  // Not Actions\n  if (percentCompleteActions === 0) {\n    return percentCompleteDocuments\n  }\n\n  return (percentCompleteDocuments + percentCompleteActions) / 2\n}\n\nconst _isInvited = (parties, invitations) => {\n  const isNotInvition = parties.find(\n    party =>\n      party.role === TransactionRole.BUYER_AGENT ||\n      party.role === TransactionRole.SELLER_AGENT ||\n      party.role === TransactionRole.LEASING_AGENT ||\n      party.role === TransactionRole.TRANSACTION_COORDINATOR\n  )\n  if (isNotInvition) {\n    return invitations.length - parties.length + 1\n  }\n  return invitations.length - parties.length\n}\n\nexport const calculatorPercentageOfTransaction = (parties, invitations) => {\n  if (parties.length === 1) {\n    return 0\n  }\n\n  // Because you do not manipulate the card \"Leasing Agent\"\n  const isRoleLeasingAgent = parties.find(\n    party => party.role === TransactionRole.LEASING_AGENT\n  )\n  if (isRoleLeasingAgent) {\n    parties.shift()\n    if (parties.length === 0) {\n      return 0\n    }\n  }\n\n  const percentParties = parties.map(party =>\n    calculatorPercentageOfParty(party.documents, party.assignedActions)\n  )\n\n  const totalNumerator = percentParties.reduce((total, percent) => {\n    return (total += percent)\n  }, 0)\n\n  const isInvited = _isInvited(parties, invitations)\n\n  return totalNumerator / (parties.length + isInvited)\n}\n\nexport const roundPercent = number => {\n  return Math.floor(number * 100)\n}\n\n// ===== ~ Status of Document ~ =====\nexport const DOCUMENT_STATUS = {\n  INCOMPLETE: 'Incomplete',\n  COMPLETE: 'Complete'\n}\n\nconst ACTION_STATUS = {\n  UNVIEWED: 'Unviewed',\n  UNSIGNED: 'Unsigned',\n  RECEIVED: 'Received',\n  VIEWED: 'Viewed',\n  SIGNED: 'Signed'\n}\n\nexport const canAddDocumentAction = (currentParty, document) => {\n  if (currentParty.id === document.partyId) {\n    return true\n  }\n  if (currentParty.id === document.creatorId) {\n    return true\n  }\n  return false\n}\n\n// Have the right to complete \"Document\"\nexport const canCompleteDocument = (currentParty, document) => {\n  if (document.actions.length === 0) {\n    return false\n  }\n  if (currentParty.id === document.partyId) {\n    return true\n  }\n  if (currentParty.id === document.creatorId) {\n    return true\n  }\n  return false\n}\n\n// Have the right to complete \"DocumetAction\"\nexport const canCompleteDocumentAction = (currentParty, action) => {\n  if (action.status === DocumentActionStatus.DONE) {\n    return false\n  }\n  if (currentParty.id === action.assignedPartyId) {\n    return true\n  }\n  return false\n}\n\nexport const getStatusForDocumentAction = action => {\n  if (action.status === DocumentActionStatus.TODO) {\n    return DOCUMENT_STATUS.INCOMPLETE\n  }\n  return DOCUMENT_STATUS.COMPLETE\n}\n\n// Existing an element whose status is todo is not complete\nexport const getStatusForDocument = document => {\n  if (document.actions.length === 0) {\n    return DOCUMENT_STATUS.INCOMPLETE\n  }\n\n  const isTodo = document.actions.find(\n    action => action.status === DocumentActionStatus.TODO\n  )\n  if (isTodo) {\n    return DOCUMENT_STATUS.INCOMPLETE\n  }\n  return DOCUMENT_STATUS.COMPLETE\n}\n\nexport const getActionStatusForDocumentAction = action => {\n  if (action.status === DocumentActionStatus.TODO) {\n    if (action.action === DataAccessType.SIGN_DOCUMENT) {\n      return <div className='text-danger'>{ACTION_STATUS.UNSIGNED}</div>\n    }\n    return <div className='text-danger'>{ACTION_STATUS.UNVIEWED}</div>\n  }\n\n  // Case status of action is DONE\n  if (action.action === DataAccessType.SIGN_DOCUMENT) {\n    return <div className='text-success'>{ACTION_STATUS.SIGNED}</div>\n  } else if (action.action === DataAccessType.VIEW_ONLY) {\n    return <div className='text-success'>{ACTION_STATUS.VIEWED}</div>\n  }\n  return <div className='text-success'>{ACTION_STATUS.RECEIVED}</div>\n}\n\n// ===== ~ Party View ~ ===== ///\nexport const PARTY_VIEW = {\n  MAIN: 'Main',\n  ACTIONS_NEEDED: 'Actions Needed',\n  MY_DOCUMENTS: 'My Documents',\n  ENVELOPES: 'Envelopes',\n  VIEW_DETAILS: 'View Details'\n}\n\n// ===== ~ Header Text ~ ===== //\nexport const HEADER_TEXT = {\n  TRANSACTION_DOCUMENTS: 'Transaction Documents'\n}\n\n// ===== ~ Document Action ~ ===== //\nexport const ACTION_TYPE = {\n  [DataAccessType.VIEW_ONLY]: 'View',\n  [DataAccessType.REVIEW_DOCUMENT]: 'Review',\n  [DataAccessType.SIGN_DOCUMENT]: 'Needs Signature'\n}\n"]},"metadata":{},"sourceType":"module"}