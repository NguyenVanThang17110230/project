{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/toConsumableArray\";\nimport _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport moment from 'moment';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal } from 'reactstrap';\nimport { Formik } from 'formik';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport Cookies from 'js-cookie';\nimport toastr from 'toastr';\nimport classNames from 'classnames';\nimport { Router, Link } from '../../common/routes';\nimport { isAdmin } from '../../common/models/User';\nimport { TransactionAccessType, TransactionStatus } from '../../common/models/Transaction';\nimport { getRoleLabel } from '../view-models/User';\nimport authRedux, { selector } from '../redux/authRedux';\nimport { withI18next } from './withI18next';\nimport { userService, authService, transactionService, notificationService } from '../services';\nimport { NotificationType } from '../../common/models/Notification';\nimport { getNotificationTitle } from '../../common/view-models/Notification';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport AddNewMemberModal from '../component/Transaction/AddNewMemberModal';\nimport UploadNewDocumentModal from '../component/Transaction/UploadNewDocumentModal';\nimport AddNewTransactionModal from '../component/Transaction/AddNewTransactionModal';\nimport AddNewEnvelopeModal from '../component/Transaction/AddNewEnvelopeModal';\nimport { NewsType } from '../../common/models/News';\n\nvar userOnly = function userOnly(Content) {\n  var TranslatableContent = withI18next(['user', 'common'])(Content);\n\n  var UserWrapper =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(UserWrapper, _React$Component);\n\n    _createClass(UserWrapper, null, [{\n      key: \"getInitialProps\",\n      value: function () {\n        var _getInitialProps = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(_ref) {\n          var req, res, pathname, query, asPath, store, isServer, _user, _user2, initialProps, welcomeInvitationId, invitation, user, currentParty;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  req = _ref.req, res = _ref.res, pathname = _ref.pathname, query = _ref.query, asPath = _ref.asPath, store = _ref.store, isServer = _ref.isServer;\n\n                  if (!isServer) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  authService.setAccessToken(req.signedCookies.access_token);\n                  _context.next = 5;\n                  return store.dispatch(authRedux.getLoginUser());\n\n                case 5:\n                  _user = _context.sent;\n\n                  if (!_user) {\n                    res.redirect('/login');\n                    res.end();\n                  } else if (isAdmin(_user)) {\n                    res.redirect('/admin');\n                    res.end();\n                  }\n\n                  _context.next = 11;\n                  break;\n\n                case 9:\n                  _user2 = selector.getLoginUser(store.getState());\n                  if (!_user2 || isAdmin(_user2)) Router.pushRoute('/login');\n\n                case 11:\n                  if (!Content.getInitialProps) {\n                    _context.next = 17;\n                    break;\n                  }\n\n                  _context.next = 14;\n                  return Content.getInitialProps({\n                    req: req,\n                    res: res,\n                    pathname: pathname,\n                    query: query,\n                    asPath: asPath,\n                    store: store,\n                    isServer: isServer\n                  });\n\n                case 14:\n                  _context.t0 = _context.sent;\n                  _context.next = 18;\n                  break;\n\n                case 17:\n                  _context.t0 = {};\n\n                case 18:\n                  initialProps = _context.t0;\n                  welcomeInvitationId = isServer ? req.cookies['welcome_invitation_id'] : Cookies.get('welcome_invitation_id');\n\n                  if (!welcomeInvitationId) {\n                    _context.next = 26;\n                    break;\n                  }\n\n                  _context.next = 23;\n                  return transactionService.getDetailedTransactionInvitationById(welcomeInvitationId);\n\n                case 23:\n                  invitation = _context.sent;\n\n                  if (invitation) {\n                    initialProps.welcomeInvitation = invitation;\n                  }\n\n                  if (!isServer) {\n                    Cookies.remove('welcome_invitation_id');\n                  }\n\n                case 26:\n                  _context.next = 28;\n                  return store.dispatch(authRedux.getLoginUser());\n\n                case 28:\n                  user = _context.sent;\n\n                  if (!(user && query.idTransaction)) {\n                    _context.next = 34;\n                    break;\n                  }\n\n                  _context.next = 32;\n                  return transactionService.getPartyByTransactionIdAndUserId(query.idTransaction.toString(), user.id);\n\n                case 32:\n                  currentParty = _context.sent;\n                  initialProps.currentParty = currentParty;\n\n                case 34:\n                  initialProps.query = query;\n                  return _context.abrupt(\"return\", initialProps);\n\n                case 36:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function getInitialProps(_x) {\n          return _getInitialProps.apply(this, arguments);\n        }\n\n        return getInitialProps;\n      }()\n    }]);\n\n    function UserWrapper(props) {\n      var _this;\n\n      _classCallCheck(this, UserWrapper);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(UserWrapper).call(this, props));\n\n      _defineProperty(_assertThisInitialized(_this), \"_getIntercom\", function () {\n        if (typeof window !== 'undefined') {\n          if (window.Intercom) {\n            window.Intercom('boot', {\n              app_id: 'lhbxmtx3',\n              name: \"\".concat(_this.props.currentUser.firstName),\n              email: \"\".concat(_this.props.currentUser.email),\n              user_id: \"\".concat(_this.props.currentUser.id),\n              created_at: \"\".concat(Math.round(new Date(_this.props.currentUser.createdAt).getTime() / 1000))\n            });\n          }\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_getDataUser\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return userService.getAllUser();\n\n              case 3:\n                data = _context2.sent;\n\n                _this.setState({\n                  dataAllUser: data\n                });\n\n                _context2.next = 9;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_countDocumentAction\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var currentParty, countDocumentAction;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                currentParty = _this.props.currentParty;\n                countDocumentAction = 0;\n\n                if (!(currentParty && currentParty.id)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 5;\n                return transactionService.countDocumentActionsByPartyId(currentParty.id);\n\n              case 5:\n                countDocumentAction = _context3.sent;\n\n              case 6:\n                _this.setState({\n                  countDocumentAction: countDocumentAction\n                });\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_getMessage\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var currentUser, newMessageContent, setObj, result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                currentUser = _this.props.currentUser;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return notificationService.getAllNotificationMessage(currentUser.id);\n\n              case 4:\n                newMessageContent = _context4.sent;\n                setObj = new _Set();\n                result = newMessageContent.reduce(function (mes, item) {\n                  if (!setObj.has(item.data.internalLink)) {\n                    setObj.add(item.data.internalLink, item);\n                    mes.push(item);\n                  }\n\n                  return mes;\n                }, []);\n\n                _this.setState({\n                  listMessage: result,\n                  listMess: newMessageContent\n                });\n\n                _context4.next = 12;\n                break;\n\n              case 10:\n                _context4.prev = 10;\n                _context4.t0 = _context4[\"catch\"](1);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 10]]);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_getNews\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var currentUser, newNews;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                currentUser = _this.props.currentUser;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return notificationService.getAllNotificationNews(currentUser.id);\n\n              case 4:\n                newNews = _context5.sent;\n\n                _this.setState({\n                  listNews: newNews\n                });\n\n                _context5.next = 10;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 8]]);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_getAssign\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var currentUser, assign;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                currentUser = _this.props.currentUser;\n                _context6.prev = 1;\n                _context6.next = 4;\n                return notificationService.getAllNotificationAssign(currentUser.id);\n\n              case 4:\n                assign = _context6.sent;\n\n                _this.setState({\n                  listAssign: assign\n                });\n\n                _context6.next = 10;\n                break;\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](1);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[1, 8]]);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_setMessageNewRealTime\", function (data) {\n        var listMessage = _this.state.listMessage;\n        var newMes = [data].concat(_toConsumableArray(listMessage));\n\n        if (newMes.length > 0) {\n          var setObj = new _Set();\n          var result = newMes.reduce(function (mes, item) {\n            if (!setObj.has(item.data.internalLink)) {\n              setObj.add(item.data.internalLink, item);\n              mes.push(item);\n            }\n\n            return mes;\n          }, []);\n\n          _this.setState({\n            listMessage: result\n          });\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_fetchRedux\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var dispatch;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                dispatch = _this.props.dispatch;\n                _context7.next = 3;\n                return dispatch(authRedux.updateParties({\n                  data: 'Main'\n                }));\n\n              case 3:\n                _context7.next = 5;\n                return dispatch(authRedux.updateDashboard({\n                  data: 'Main'\n                }));\n\n              case 5:\n                _context7.next = 7;\n                return dispatch(authRedux.updateTest({\n                  data: 'In Progress'\n                }));\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_fetchDocumentsAndParties\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        var _this$props, query, currentParty, documentList, partiesOfTransaction;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _this$props = _this.props, query = _this$props.query, currentParty = _this$props.currentParty; // Need for \"Document\" feature\n\n                if (!currentParty) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                _context8.next = 4;\n                return transactionService.getDocumentsByTransactionId(query.idTransaction.toString());\n\n              case 4:\n                documentList = _context8.sent;\n                _context8.next = 7;\n                return transactionService.getPartiesByTransactionId(query.idTransaction.toString());\n\n              case 7:\n                partiesOfTransaction = _context8.sent;\n\n                _this.setState({\n                  documentList: documentList,\n                  partiesOfTransaction: partiesOfTransaction\n                });\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderSideBar\", function () {\n        var currentUser = _this.props.currentUser;\n        var role = currentUser.roles[0].name;\n        return React.createElement(\"aside\", {\n          id: \"left-sidebar\",\n          className: \"left-sidebar position-fixed\"\n        }, React.createElement(\"div\", {\n          className: \"scroll-sidebar-left no-block scroll-sidebar--scroll d-flex flex-column\"\n        }, React.createElement(\"nav\", {\n          className: \"sidebar-nav\",\n          style: {\n            overflowX: 'auto',\n            height: '90%'\n          }\n        }, React.createElement(\"ul\", {\n          id: \"sidebarnav\",\n          className: \"sidebarnav--fix d-md-none d-lg-block d-none\"\n        }, React.createElement(\"li\", {\n          className: \"nav-brand my-0\"\n        }, React.createElement(\"a\", {\n          className: \"text-center th-10\",\n          style: {\n            borderBottom: '1px solid #e4e4e42d'\n          }\n        }, React.createElement(\"img\", {\n          src: \"/static/images/New/new-link-white.png\",\n          alt: \"homepage\",\n          className: \"light-logo\",\n          height: \"40\",\n          style: {\n            width: '45%'\n          }\n        })))), React.createElement(\"ul\", {\n          id: \"sideBar-menu\",\n          className: \"sidebarnav--fix\",\n          style: {\n            marginTop: '15px'\n          }\n        }, role !== 'user' && React.createElement(\"li\", {\n          className: _this.props.router.asPath === '/' ? 'active' : ''\n        }, React.createElement(Link, {\n          route: \"/\"\n        }, React.createElement(\"a\", {\n          \"aria-expanded\": \"false\",\n          className: \"has-arrow\"\n        }, React.createElement(\"img\", {\n          className: \"th-7\",\n          src: \"../../static/images/New/dashboard-icon.png\",\n          alt: \"\"\n        }), React.createElement(\"span\", {\n          className: \"hide-menu\"\n        }, \"Dashboard\")))), React.createElement(\"li\", {\n          className: _this.props.router.asPath.startsWith('/my-transactions') ? 'active' : ''\n        }, React.createElement(Link, {\n          route: \"/my-transactions\"\n        }, React.createElement(\"a\", {\n          className: classNames('has-arrow', {\n            active: _this.props.router.asPath.startsWith('/my-transactions')\n          }),\n          \"aria-expanded\": \"false\"\n        }, React.createElement(\"img\", {\n          className: \"th-7\",\n          src: \"../../static/images/New/transaction.png\",\n          alt: \"\"\n        }), React.createElement(\"span\", {\n          className: \"hide-menu\"\n        }, \"Transactions\")))), role !== 'user' && React.createElement(\"li\", null, React.createElement(Link, {\n          route: \"https://www.linkhomesla.com\"\n        }, React.createElement(\"a\", {\n          target: \"_blank\",\n          className: \"has-arrow\"\n        }, React.createElement(\"img\", {\n          className: \"th-7 th-7--new\",\n          src: \"../../static/images/New/new-br.png\",\n          alt: \"\"\n        }), React.createElement(\"span\", {\n          className: \"hide-menu\"\n        }, \"CINC\")))), role === 'coordinator' && React.createElement(\"li\", {\n          className: _this.props.router.asPath.startsWith('/manage-agents') ? 'active' : ''\n        }, React.createElement(Link, {\n          route: \"/manage-agents\"\n        }, React.createElement(\"a\", {\n          className: classNames('has-arrow', {\n            active: _this.props.router.asPath.startsWith('/manage-agents')\n          }),\n          \"aria-expanded\": \"false\"\n        }, React.createElement(\"img\", {\n          className: \"th-7\",\n          src: \"../../static/images/New/manager.png\",\n          alt: \"\",\n          style: {\n            marginRight: '22px',\n            width: '18px',\n            height: '18px'\n          }\n        }), React.createElement(\"span\", {\n          className: \"hide-menu\"\n        }, \"Manage Agents\")))), React.createElement(\"li\", {\n          className: \"\".concat(_this._sideBarStatusClass('/calendar'))\n        }, React.createElement(Link, {\n          route: \"/calendar\"\n        }, React.createElement(\"a\", {\n          className: \"has-arrow \".concat(_this._sideBarStatusClass('/calendar')),\n          \"aria-expanded\": \"false\",\n          onClick: function onClick() {\n            _this._onClickNewAction(currentUser.id, [NotificationType.CREATE_EVENT, NotificationType.DELETE_EVENT], 'newEvent');\n          }\n        }, React.createElement(\"img\", {\n          className: \"th-7\",\n          src: \"../../static/images/New/calendar-2.png\",\n          alt: \"\",\n          style: {\n            marginRight: '22px',\n            width: '18px',\n            height: '18px'\n          }\n        }), React.createElement(\"span\", {\n          className: \"hide-menu\"\n        }, \"Calendar\")))), React.createElement(\"li\", {\n          className: _this.props.router.asPath.startsWith('/tasks') ? 'active' : ''\n        }, React.createElement(Link, {\n          route: \"/tasks\"\n        }, React.createElement(\"a\", {\n          className: \"has-arrow \".concat(_this._sideBarStatusClass('/tasks')),\n          \"aria-expanded\": \"false\",\n          onClick: function onClick() {\n            _this._onClickNewAction(currentUser.id, [NotificationType.CREATE_TASK], 'newTask');\n          }\n        }, React.createElement(\"img\", {\n          className: \"th-7 th-7--new\",\n          src: \"../../static/images/New/task.png\",\n          alt: \"\"\n        }), React.createElement(\"span\", {\n          className: \"hide-menu\"\n        }, \"Tasks\")))), React.createElement(\"li\", {\n          className: \"\".concat(_this._sideBarStatusClass('/message'))\n        }, React.createElement(Link, {\n          route: \"/message\"\n        }, React.createElement(\"a\", {\n          className: \"has-arrow \".concat(_this._sideBarStatusClass('/message')),\n          \"aria-expanded\": \"false\",\n          onClick: function onClick() {\n            _this._onClickNewAction(currentUser.id, [NotificationType.NEW_MESSAGE], 'newMessage');\n          }\n        }, React.createElement(\"img\", {\n          className: \"th-7 th-7--new\",\n          src: \"../../static/images/New/sms.png\",\n          alt: \"\"\n        }), React.createElement(\"span\", {\n          className: \"hide-menu\"\n        }, \"Inbox\")))), React.createElement(\"li\", {\n          className: _this.props.router.asPath.startsWith('/contact') ? 'active' : ''\n        }, React.createElement(Link, {\n          route: \"/contact\"\n        }, React.createElement(\"a\", {\n          className: classNames('has-arrow', {\n            active: _this.props.router.asPath.startsWith('/contact')\n          }),\n          \"aria-expanded\": \"false\"\n        }, React.createElement(\"img\", {\n          className: \"th-7 th-7--new\",\n          src: \"../../static/images/New/Contact.png\",\n          alt: \"\"\n        }), React.createElement(\"span\", {\n          className: \"hide-menu\"\n        }, \"Contact\"))))))));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_reRenderDynamic\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var _ref10, activitiesFull, activitiesUploadOnly;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return transactionService.getDetailedTransactionAndActivityById(_this.props.transaction.id);\n\n              case 2:\n                _ref10 = _context9.sent;\n                activitiesFull = _ref10.activitiesFull;\n                _context9.next = 6;\n                return transactionService.getActivitiesByPartyId(_this.props.currentParty.id);\n\n              case 6:\n                activitiesUploadOnly = _context9.sent;\n\n                _this.setState({\n                  activitiesFull: activitiesFull,\n                  activitiesUploadOnly: activitiesUploadOnly\n                });\n\n              case 8:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_onClickNewAction\", function (id) {\n        var types = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var role = arguments.length > 2 ? arguments[2] : undefined;\n\n        switch (role) {\n          case 'newEvent':\n            _this.setState({\n              newEvent: 0\n            });\n\n            break;\n\n          case 'newMessage':\n            _this.setState({\n              newMessage: 0\n            });\n\n            break;\n\n          case 'newTask':\n            _this.setState({\n              newTask: 0\n            });\n\n            break;\n\n          default:\n            break;\n        }\n\n        return notificationService.deleteWithIdUserAndType(id, types);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderNewNotification\", function (value) {\n        if (_this.state.statusNotification && value !== 0) {\n          return React.createElement(\"span\", {\n            className: \"badge badge-pill badge-cyan ml-auto\"\n          }, value);\n        } else {\n          return null;\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_sideBarStatusClass\", function (path) {\n        return _this.props.router.asPath.startsWith(path) ? 'active' : '';\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderNavBar\", function () {\n        var currentUser = _this.props.currentUser; // const role = currentUser.roles[0].name\n\n        var welcomeInvitation = _this.props.welcomeInvitation;\n        var _this$state = _this.state,\n            isViewNews = _this$state.isViewNews,\n            listNews = _this$state.listNews,\n            listMessage = _this$state.listMessage,\n            listAssign = _this$state.listAssign;\n        return React.createElement(\"header\", {\n          id: \"topbar\",\n          className: \"topbar\"\n        }, React.createElement(\"nav\", {\n          className: \"navbar top-navbar navbar-expand-md \"\n        }, React.createElement(\"div\", {\n          className: \"navbar-collapse th-18\"\n        }, React.createElement(\"ul\", {\n          className: \"navbar-nav mr-auto\"\n        }, React.createElement(\"li\", {\n          className: \"nav-item\",\n          onClick: function onClick() {\n            return _this._setWithSideBarAnimation();\n          }\n        }, React.createElement(\"a\", {\n          className: \"nav-link text-white \",\n          href: \"javascript:void(0)\"\n        }, React.createElement(\"img\", {\n          src: \"/static/images/New/header-menu.svg\",\n          style: {\n            width: '25px',\n            height: '25px'\n          }\n        })))), React.createElement(\"ul\", {\n          className: \"navbar-nav my-lg-0 d-flex align-items-center \"\n        }, React.createElement(\"li\", {\n          className: \"nav-item dropdown\"\n        }, React.createElement(UncontrolledDropdown, null, React.createElement(DropdownToggle, {\n          caret: true,\n          tag: \"a\",\n          className: \"mr-3\"\n        }, React.createElement(\"img\", {\n          src: \"/static/images/New/inbox-no.png\",\n          style: {\n            width: '25px',\n            height: '25px'\n          }\n        }), _this._renderCoutNewNotification(listMessage.length)), React.createElement(DropdownMenu, {\n          right: true,\n          style: {\n            right: '20px',\n            minWidth: '200px',\n            paddingTop: '0'\n          },\n          className: \"not-news\"\n        }, React.createElement(DropdownItem, {\n          header: true,\n          className: \"text-left font-14 text-dark border-bottom\",\n          style: {\n            padding: '10px 20px'\n          }\n        }, \"Inbox\"), listMessage.length > 0 ? React.createElement(\"div\", {\n          style: {\n            right: '0',\n            overflowY: 'scroll',\n            maxHeight: '50vh',\n            minWidth: '360px'\n          },\n          className: \"not-mess\"\n        }, listMessage.map(function (data, index) {\n          return _this._renderNotificationMessages(data, index);\n        })) : React.createElement(\"div\", {\n          style: {\n            right: '0',\n            overflowY: 'scroll',\n            maxHeight: '50vh',\n            minWidth: '360px',\n            padding: '10px 20px'\n          },\n          className: \"not-mess\"\n        }, \"No messages\")))), React.createElement(\"li\", {\n          className: \"nav-item dropdown\"\n        }, React.createElement(UncontrolledDropdown, null, React.createElement(DropdownToggle, {\n          caret: true,\n          tag: \"a\",\n          className: \"mr-3\"\n        }, React.createElement(\"img\", {\n          src: \"/static/images/New/new-notification.png\",\n          style: {\n            width: '25px',\n            height: '25px'\n          }\n        }), _this._renderCoutAssignNotification(_this.state.newNotification)), React.createElement(DropdownMenu, {\n          right: true,\n          style: {\n            right: '20px',\n            minWidth: '200px',\n            paddingTop: '0'\n          },\n          className: \"not-news\"\n        }, React.createElement(\"div\", {\n          className: \"d-flex th-new-mess\"\n        }, React.createElement(\"div\", {\n          className: isViewNews ? 'col-6 d-flex align-items-center justify-content-center flex-column p-2 th-left active-ch' : 'col-6 d-flex align-items-center justify-content-center flex-column p-2 th-left border-bottom',\n          onClick: function onClick() {\n            return _this.setState({\n              isViewNews: true\n            });\n          }\n        }, React.createElement(\"img\", {\n          className: \"\",\n          src: \"/static/images/New/new-no.png\",\n          style: {\n            width: '30px',\n            height: '30px'\n          }\n        }), React.createElement(\"span\", {\n          className: \"th-font-w-5\",\n          style: {\n            fontSize: '12px'\n          }\n        }, \"Notifications\")), React.createElement(\"div\", {\n          className: !isViewNews ? 'active-ch col-6 d-flex align-items-center justify-content-center flex-column p-2 th-right' : 'col-6 d-flex align-items-center justify-content-center flex-column p-2 th-right border-bottom',\n          onClick: function onClick() {\n            _this.setState({\n              isViewNews: false\n            });\n          }\n        }, React.createElement(\"img\", {\n          className: \"\",\n          src: \"/static/images/New/new-noti.png\",\n          style: {\n            width: '30px',\n            height: '30px'\n          }\n        }), React.createElement(\"span\", {\n          className: \"th-font-w-5\",\n          style: {\n            fontSize: '12px'\n          }\n        }, \"News\"))), isViewNews ? React.createElement(\"div\", null, React.createElement(DropdownItem, {\n          header: true,\n          className: \"text-left font-14 text-dark border-bottom th-font-w-5\",\n          style: {\n            padding: '10px 20px'\n          }\n        }, \"Notifications\"), listAssign.length > 0 ? React.createElement(\"div\", {\n          style: {\n            right: '0',\n            overflowY: 'scroll',\n            maxHeight: '50vh',\n            minWidth: '360px'\n          },\n          className: \"not-mess\"\n        }, listAssign.map(function (data, index) {\n          return _this._renderNotificationAssign(data, index);\n        })) : React.createElement(\"div\", {\n          style: {\n            right: '0',\n            overflowY: 'scroll',\n            maxHeight: '50vh',\n            minWidth: '360px',\n            padding: '10px 20px'\n          },\n          className: \"not-mess\"\n        }, \"No notifications\")) : React.createElement(\"div\", null, React.createElement(DropdownItem, {\n          header: true,\n          className: \"text-left font-14 text-dark border-bottom th-font-w-5\",\n          style: {\n            padding: '10px 20px'\n          }\n        }, \"News\"), listNews.length > 0 ? React.createElement(\"div\", {\n          style: {\n            right: '0',\n            overflowY: 'scroll',\n            maxHeight: '50vh',\n            minWidth: '360px'\n          },\n          className: \"not-mess\"\n        }, listNews.map(function (data, index) {\n          return _this._renderNotificationNews(data, index);\n        })) : React.createElement(\"div\", {\n          style: {\n            padding: '10px 20px',\n            right: '0',\n            overflowY: 'scroll',\n            maxHeight: '50vh',\n            minWidth: '360px'\n          }\n        }, \"No news\"))))), React.createElement(\"li\", null, React.createElement(UncontrolledDropdown, null, React.createElement(DropdownToggle, {\n          className: \"th-19\"\n        }, React.createElement(\"img\", {\n          src: !currentUser.avatar ? '/static/images/default-avatar.png' : currentUser.avatar,\n          alt: \"user-img\",\n          className: \"img-circle\",\n          style: {\n            height: '40px',\n            width: '40px',\n            objectFit: 'cover',\n            border: '2px solid #80808036'\n          }\n        })), React.createElement(DropdownMenu, {\n          className: \"th-20 th-pd-0\",\n          right: true\n        }, React.createElement(DropdownItem, {\n          className: \"th-pd-0\"\n        }, React.createElement(Link, {\n          route: \"/my-profiles\"\n        }, React.createElement(\"a\", {\n          href: \"javascript:void(0)\",\n          \"aria-expanded\": \"false\",\n          className: \"th-21\"\n        }, React.createElement(\"div\", {\n          className: \"th-container\"\n        }, React.createElement(\"img\", {\n          src: \"/static/images/New/new-profile.png\",\n          alt: \"\"\n        }), React.createElement(\"div\", {\n          className: \"hint-big\"\n        }, \"Profile\"), React.createElement(\"div\", {\n          className: \"hint\"\n        }, \"Public profile\"))))), React.createElement(DropdownItem, {\n          className: \"th-pd-0\"\n        }, React.createElement(Link, {\n          route: \"/my-settings\"\n        }, React.createElement(\"a\", {\n          href: \"javascript:void(0)\",\n          \"aria-expanded\": \"false\",\n          className: \"th-21\"\n        }, React.createElement(\"div\", {\n          className: \"th-container\"\n        }, React.createElement(\"img\", {\n          src: \"/static/images/New/new-sitting.png\",\n          alt: \"\"\n        }), React.createElement(\"div\", {\n          className: \"hint-big\"\n        }, \"Settings\"), React.createElement(\"div\", {\n          className: \"hint\"\n        }, \"Account settings\"))))), React.createElement(DropdownItem, {\n          className: \"th-pd-0\"\n        }, React.createElement(Link, {\n          route: \"https://intercom.help/link-brokerages/en/\"\n        }, React.createElement(\"a\", {\n          target: \"_blank\",\n          className: \"th-21\"\n        }, React.createElement(\"div\", {\n          className: \"th-container\"\n        }, React.createElement(\"img\", {\n          src: \"/static/images/New/support.png\",\n          alt: \"\"\n        }), React.createElement(\"div\", {\n          className: \"hint-big\"\n        }, \"Support\"), React.createElement(\"div\", {\n          className: \"hint\"\n        }, \"Help center\"))))), React.createElement(DropdownItem, {\n          disabled: true,\n          className: \"th-pd-0 border-top border-bottom\"\n        }, React.createElement(\"div\", {\n          className: \"th-color-blue d-flex justify-content-between\",\n          style: {\n            padding: '17px 20px'\n          }\n        }, React.createElement(\"span\", {\n          className: \"th-font-w-5\"\n        }, \"Turn on Notifications\"), React.createElement(\"span\", {\n          className: \"custom-switch\"\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"custom-control-input new-cus\",\n          id: \"customSwitches\",\n          checked: _this.state.statusNotification,\n          onChange: function onChange() {\n            return _this._changeStatusNotification();\n          },\n          readOnly: true\n        }), React.createElement(\"label\", {\n          className: \"custom-control-label new-lab\",\n          htmlFor: \"customSwitches\"\n        })))), React.createElement(DropdownItem, {\n          className: \"th-pd-0\",\n          style: {\n            height: '64px'\n          },\n          onClick: _this._logout\n        }, React.createElement(\"a\", {\n          href: \"javascript:void(0)\",\n          \"aria-expanded\": \"false\",\n          className: \"th-21\"\n        }, React.createElement(\"div\", {\n          className: \"th-container\"\n        }, React.createElement(\"img\", {\n          src: \"/static/images/New/new-logout.png\",\n          alt: \"\"\n        }), React.createElement(\"div\", {\n          className: \"hint-big\"\n        }, \"Logout\")))))))))), _this._renderModalWelcome(), welcomeInvitation && _this._renderModalInfo());\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_setWithSideBarAnimation\", function () {\n        var data = document.getElementById('left-sidebar');\n\n        if (data) {\n          data.classList.toggle('animation-display');\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderCoutNewNotification\", function (value) {\n        if (_this.state.statusNotification && value !== 0) {\n          return React.createElement(\"div\", {\n            className: \"notificationBell_new\"\n          }, value);\n        } else {\n          return null;\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderCoutAssignNotification\", function (value) {\n        if (_this.state.statusNotification && value !== 0) {\n          return React.createElement(\"div\", {\n            className: \"notificationBell_new\"\n          }, value);\n        } else {\n          return null;\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_changeStatusNotification\", function () {\n        if (_this.state.newNotification !== 0) {\n          var req = _this.state.notification.map(function (item, index) {\n            try {\n              if (index < _this.state.newNotification) {\n                return notificationService.setWatchedNotification(item.id);\n              }\n            } catch (e) {\n              throw e;\n            }\n\n            _this.setState({\n              newNotification: 0\n            });\n          });\n\n          _Promise.all(req);\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_changeStatus\",\n      /*#__PURE__*/\n      function () {\n        var _ref11 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee10(message) {\n          var listMess, data, req;\n          return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  listMess = _this.state.listMess;\n                  data = listMess.filter(function (x) {\n                    return x.senderId === message.senderId;\n                  });\n\n                  if (data && data.length > 0) {\n                    req = data.map(function (item, index) {\n                      try {\n                        if (index < data.length) {\n                          notificationService.setWatchedNotification(item.id);\n\n                          _this._getMessage();\n                        }\n                      } catch (e) {\n                        throw e;\n                      }\n                    });\n\n                    _Promise.all(req);\n                  }\n\n                case 3:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, _callee10);\n        }));\n\n        return function (_x2) {\n          return _ref11.apply(this, arguments);\n        };\n      }());\n\n      _defineProperty(_assertThisInitialized(_this), \"_changeStatusNotificationNews\",\n      /*#__PURE__*/\n      function () {\n        var _ref12 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee11(news) {\n          return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  if (!(news && news.isRead === false)) {\n                    _context11.next = 10;\n                    break;\n                  }\n\n                  _context11.prev = 1;\n                  _context11.next = 4;\n                  return notificationService.setWatchedNotification(news.id);\n\n                case 4:\n                  _this._getNews();\n\n                  _context11.next = 10;\n                  break;\n\n                case 7:\n                  _context11.prev = 7;\n                  _context11.t0 = _context11[\"catch\"](1);\n                  throw _context11.t0;\n\n                case 10:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, _callee11, null, [[1, 7]]);\n        }));\n\n        return function (_x3) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n\n      _defineProperty(_assertThisInitialized(_this), \"_changeStatusNotificationAssign\",\n      /*#__PURE__*/\n      function () {\n        var _ref13 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee12(assign) {\n          return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  if (!(assign && assign.isRead === false)) {\n                    _context12.next = 10;\n                    break;\n                  }\n\n                  _context12.prev = 1;\n                  _context12.next = 4;\n                  return notificationService.setWatchedNotification(assign.id);\n\n                case 4:\n                  _this._getAssign();\n\n                  _context12.next = 10;\n                  break;\n\n                case 7:\n                  _context12.prev = 7;\n                  _context12.t0 = _context12[\"catch\"](1);\n                  throw _context12.t0;\n\n                case 10:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12, null, [[1, 7]]);\n        }));\n\n        return function (_x4) {\n          return _ref13.apply(this, arguments);\n        };\n      }());\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderNotification\", function (data, index) {\n        return React.createElement(DropdownItem, {\n          key: index\n        }, React.createElement(Link, {\n          route: data.data.internalLink\n        }, React.createElement(\"div\", {\n          className: \"font-12 p-2\"\n        }, React.createElement(\"div\", {\n          className: \"d-flex justify-content-between\"\n        }, React.createElement(\"div\", {\n          className: \"font-weight-bold text-capitalize font-14\"\n        }, getNotificationTitle(data.type)), React.createElement(\"div\", {\n          className: \"ml-5 text-right \"\n        }, \"\".concat(moment(data.createdAt).format('MMM Do YY')))), React.createElement(\"div\", {\n          style: {\n            whiteSpace: 'normal',\n            textAlign: 'left'\n          }\n        }, data.data.value))));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_viewImageNews\", function (data) {\n        switch (data) {\n          case NewsType.E_COMMERCE:\n            return React.createElement(\"div\", {\n              className: \"rounded-circle d-flex align-items-center justify-content-center col-2 px-0\",\n              style: {\n                width: '50px',\n                minWidth: '50px',\n                maxWidth: '50px',\n                height: '50px',\n                backgroundColor: '#2F80ED'\n              }\n            }, React.createElement(\"img\", {\n              className: \"\",\n              src: \"/static/images/New/type-eCom.png\",\n              style: {\n                width: '50%',\n                height: '50%'\n              }\n            }));\n\n          case NewsType.REAL_ESTATE:\n            return React.createElement(\"div\", {\n              className: \"rounded-circle d-flex align-items-center justify-content-center col-2 px-0\",\n              style: {\n                width: '50px',\n                height: '50px',\n                minWidth: '50px',\n                maxWidth: '50px',\n                backgroundColor: '#446AEB'\n              }\n            }, React.createElement(\"img\", {\n              className: \"\",\n              src: \"/static/images/New/type-real.png\",\n              style: {\n                width: '50%',\n                height: '50%'\n              }\n            }));\n\n          case NewsType.OTHERS:\n            return React.createElement(\"div\", {\n              className: \"rounded-circle d-flex align-items-center justify-content-center col-2 px-0\",\n              style: {\n                width: '50px',\n                height: '50px',\n                minWidth: '50px',\n                maxWidth: '50px',\n                backgroundColor: '#DFDFDF'\n              }\n            }, React.createElement(\"img\", {\n              className: \"\",\n              src: \"/static/images/New/type-order.png\",\n              style: {\n                width: '50%',\n                height: '50%'\n              }\n            }));\n\n          default:\n            break;\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderNotificationMessages\", function (data, index) {\n        return React.createElement(DropdownItem, {\n          key: index,\n          style: {\n            maxWidth: '360px'\n          }\n        }, React.createElement(Link, {\n          route: \"/message?partyId=\".concat(data.data.internalLink)\n        }, React.createElement(\"div\", {\n          className: \"font-12 message__list\",\n          onClick: function onClick() {\n            _this._changeStatus(data);\n          }\n        }, React.createElement(\"div\", {\n          className: \"message__item-new\"\n        }, React.createElement(\"div\", {\n          className: \"message__item-text row mx-0\"\n        }, React.createElement(\"div\", {\n          className: \"col-2 px-0\"\n        }, React.createElement(\"img\", {\n          className: \"rounded-circle mr-2\",\n          src: data.data.avatar !== 'null' ? data.data.avatar : '/static/images/default-avatar.png'\n        })), React.createElement(\"div\", {\n          className: \"gr-text col-10 px-0\"\n        }, React.createElement(\"div\", {\n          className: \"gr-top\"\n        }, React.createElement(\"h5\", null, data.data.fullName), React.createElement(\"p\", {\n          className: \"message__item-time text-right\"\n        }, React.createElement(\"span\", {\n          className: \"th-color-blue th-font-w-5\"\n        }, \"\".concat(moment(data.createdAt).fromNow())))), React.createElement(\"p\", {\n          className: \"message__overflow th-font-w-5 text-black-50 test\"\n        }, data.data.value)))))));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderNotificationNews\", function (data, index) {\n        return React.createElement(DropdownItem, {\n          key: index,\n          style: {\n            maxWidth: '360px'\n          }\n        }, React.createElement(Link, {\n          route: \"/message?newsId=\".concat(data.data.internalLink)\n        }, React.createElement(\"div\", {\n          className: \"font-12 message__list\",\n          onClick: function onClick() {\n            return _this._changeStatusNotificationNews(data);\n          }\n        }, React.createElement(\"div\", {\n          className: \"message__item-new\"\n        }, React.createElement(\"div\", {\n          className: \"message__item-text row mx-0\"\n        }, _this._viewImageNews(data.data.type), React.createElement(\"div\", {\n          className: \"gr-text col-10 pr-0\"\n        }, React.createElement(\"div\", {\n          className: \"gr-top row mx-0\"\n        }, React.createElement(\"h5\", {\n          className: data.isRead === false ? 'col-6 px-0 th-flow' : 'col-6 px-0 text-black-50 th-flow'\n        }, data.data.title), React.createElement(\"p\", {\n          className: \"message__item-time text-right w-100 col-6 pr-0\"\n        }, React.createElement(\"span\", {\n          className: data.isRead === false ? 'th-color-blue th-font-w-5' : 'text-black-50 th-font-w-5'\n        }, \"\".concat(moment(data.createdAt).fromNow())))), React.createElement(\"p\", {\n          className: data.isRead === false ? 'message__overflow th-font-w-5 test w-100' : 'message__overflow th-font-w-5 text-black-50 test w-100'\n        }, data.data.content)))))));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderNotificationAssign\", function (data, index) {\n        return React.createElement(DropdownItem, {\n          key: index,\n          style: {\n            maxWidth: '360px'\n          }\n        }, React.createElement(Link, {\n          route: \"\".concat(data.data.internalLink)\n        }, React.createElement(\"div\", {\n          className: \"font-12 message__list\",\n          onClick: function onClick() {\n            _this._changeStatusNotificationAssign(data);\n          }\n        }, React.createElement(\"div\", {\n          className: \"message__item-new\"\n        }, React.createElement(\"div\", {\n          className: \"message__item-text\"\n        }, React.createElement(\"img\", {\n          className: \"rounded-circle mr-2\",\n          src: data.data.image !== 'undefined' ? data.data.image : '/static/images/default-avatar.png'\n        }), React.createElement(\"div\", {\n          className: \"gr-text\",\n          style: {\n            width: '82%'\n          }\n        }, React.createElement(\"div\", {\n          className: \"gr-top\"\n        }, React.createElement(\"h5\", {\n          style: {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis'\n          },\n          className: data.isRead === false ? null : 'text-black-50'\n        }, data.data.value)), React.createElement(\"p\", {\n          className: \"message__overflow th-font-w-5 text-black-50 test\"\n        }, React.createElement(\"span\", {\n          className: data.isRead === false ? 'th-color-blue th-font-w-5' : 'text-black-50 th-font-w-5'\n        }, \"\".concat(moment(data.createdAt).fromNow())))))))));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderPageHeaderText\", function () {\n        var _this$props2 = _this.props,\n            isCoordinator = _this$props2.isCoordinator,\n            partyTarget = _this$props2.partyTarget,\n            currentTransactionStatus = _this$props2.currentTransactionStatus;\n        var selectedViewParties = _this.state.selectedViewParties;\n        return React.createElement(\"div\", {\n          className: \"col-new\",\n          style: {\n            width: '100%'\n          }\n        }, _this.props.headerText === 'Edit Agent' && React.createElement(\"div\", {\n          className: \"bt bt--calendar title-task mt-4 mb-4 d-flex align-items-center\"\n        }, React.createElement(Link, {\n          route: \"/manage-agents\"\n        }, React.createElement(\"span\", {\n          className: \"mr-3\",\n          style: {\n            cursor: 'pointer',\n            fontSize: '20px'\n          }\n        }, React.createElement(\"i\", {\n          className: \"fas fa-arrow-left\"\n        }))), _this.props.headerText), _this.props.headerText === \"Agent's Transactions\" && React.createElement(\"div\", {\n          className: \"bt bt--calendar title-task mt-4 mb-4 d-flex align-items-center\"\n        }, React.createElement(Link, {\n          route: \"/manage-agents\"\n        }, React.createElement(\"span\", {\n          className: \"mr-3\",\n          style: {\n            cursor: 'pointer',\n            fontSize: '20px'\n          }\n        }, React.createElement(\"i\", {\n          className: \"fas fa-arrow-left\"\n        }))), _this.props.headerText), _this.props.headerText === 'Transactions' && React.createElement(\"div\", {\n          className: \"main-layout-header\"\n        }, React.createElement(\"div\", {\n          className: \"main-layout-wrapper\"\n        }, React.createElement(\"div\", {\n          className: \"page-heading\"\n        }, React.createElement(\"div\", {\n          className: \"page-heading-button\"\n        }, React.createElement(\"h2\", null, _this.props.headerText), _this.props.currentUser.roles[0].name === 'user' ? null : React.createElement(\"div\", {\n          className: \"page-button-new\"\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            _this.setState({\n              isToggleModalNewTransaction: true\n            });\n          },\n          href: \"#\"\n        }, \"New Transaction\"))), React.createElement(\"p\", {\n          id: \"titleTr\",\n          className: \"title-trs\"\n        }, \"Active property transaction folder.\")), React.createElement(\"div\", {\n          className: \"page-tab\"\n        }, React.createElement(\"div\", {\n          className: \"page-tab-menu\"\n        }, React.createElement(\"div\", {\n          id: \"a\",\n          className: \"page-icon current\",\n          onClick: _this._selectView\n        }, \"In Progress\"), React.createElement(\"div\", {\n          className: \"page-icon\",\n          onClick: _this._selectView\n        }, \"Complete\"), React.createElement(\"div\", {\n          className: \"page-icon\",\n          onClick: _this._selectView\n        }, \"Archived\"))))), _this.props.headerText === 'Calendar' && React.createElement(\"div\", {\n          className: \"bt bt--calendar title-task mt-4 mb-4\"\n        }, _this.props.headerText), _this.props.headerText === 'Manage Agents' && React.createElement(\"div\", {\n          className: \"bt bt--calendar title-task mt-4 mb-4\"\n        }, _this.props.headerText), _this.props.headerText === 'Tasks' && React.createElement(\"div\", {\n          className: \"bt title-task mt-4 mb-4\"\n        }, _this.props.headerText), _this.props.headerText === 'User Profile' && React.createElement(\"div\", {\n          className: \"main-layout-header\"\n        }, React.createElement(\"div\", {\n          className: \"main-layout-wrapper\"\n        }, React.createElement(\"div\", {\n          className: \"page-heading\",\n          style: {\n            paddingBottom: '24px',\n            marginBottom: '0px'\n          }\n        }, React.createElement(\"h2\", {\n          style: {\n            fontWeight: '500',\n            fontSize: '34px'\n          }\n        }, _this.props.headerText)))), _this.props.headerText === 'Inbox' && React.createElement(\"div\", {\n          className: \"bt title-task mt-4 mb-4\"\n        }, _this.props.headerText, React.createElement(\"p\", {\n          className: \"title-trs-v2\"\n        }, \"Inbox, notifications, messages\")), _this.props.headerText === 'Contacts' && React.createElement(\"div\", {\n          className: \"bt bt--contact title-task mb-4 mt-4\"\n        }, _this.props.headerText), _this.props.headerText === 'Dashboard' && React.createElement(\"div\", {\n          className: \"main-layout-header\"\n        }, React.createElement(\"div\", {\n          className: \"main-layout-wrapper\"\n        }, React.createElement(\"div\", {\n          className: \"page-heading\"\n        }, React.createElement(\"div\", {\n          className: \"page-heading-button\"\n        }, React.createElement(\"h2\", null, _this.props.headerText))), React.createElement(\"div\", {\n          className: \"page-tab\"\n        }, React.createElement(\"div\", {\n          className: \"page-tab-menu\"\n        }, React.createElement(\"div\", {\n          id: \"a\",\n          className: \"page-icon current\",\n          onClick: _this._selectViewDashboard\n        }, \"Main\"), isCoordinator ? React.createElement(\"div\", {\n          className: \"page-icon page-icon--dashboard\",\n          onClick: _this._selectViewDashboard\n        }, \"Closed Transactions\") : React.createElement(\"div\", {\n          className: \"page-icon page-icon--dashboard\",\n          onClick: _this._selectViewDashboard\n        }, \"Real Estate\"), React.createElement(\"div\", {\n          className: \"page-icon page-icon--dashboard\",\n          onClick: _this._selectViewDashboard\n        }, \"Referrals\"))))), _this.props.headerText === 'Transaction Parties' && // <div className='bt title-task'>{this.props.headerText}</div>\n        React.createElement(\"div\", {\n          className: \"main-layout-header\"\n        }, React.createElement(\"div\", {\n          className: \"main-layout-wrapper\"\n        }, React.createElement(\"div\", {\n          className: \"page-heading\"\n        }, React.createElement(\"div\", {\n          className: \"page-heading-button\"\n        }, React.createElement(\"h2\", null, \"Transactions\"), React.createElement(\"div\", {\n          className: \"page-button-new\"\n        }, selectedViewParties === 'Main' && partyTarget.access === 'full' && currentTransactionStatus !== TransactionStatus.ARCHIVED && currentTransactionStatus !== TransactionStatus.CLOSED && React.createElement(\"button\", {\n          className: \"btn-transaction w-100\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#myModal\",\n          onClick: function onClick() {\n            _this.setState({\n              isShowMemberModal: true\n            });\n          },\n          style: {\n            transition: '0.3s'\n          }\n        }, \"Add New Member\"), selectedViewParties === 'My Documents' && currentTransactionStatus !== TransactionStatus.ARCHIVED && currentTransactionStatus !== TransactionStatus.CLOSED && React.createElement(\"button\", {\n          className: \"btn-transaction w-100\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#myModal\",\n          onClick: function onClick() {\n            _this.setState({\n              isShowUpdateNewDocumentModal: true\n            });\n          },\n          style: {\n            transition: '0.3s'\n          }\n        }, \"Upload document\"), selectedViewParties === 'Envelopes' && partyTarget.access === 'full' && currentTransactionStatus !== TransactionStatus.ARCHIVED && currentTransactionStatus !== TransactionStatus.CLOSED && React.createElement(\"button\", {\n          className: \"btn-transaction w-100\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#myModal\",\n          onClick: function onClick() {\n            _this.setState({\n              isToggleEnvelop: true\n            });\n          },\n          style: {\n            transition: '0.3s'\n          }\n        }, \"New Envelope\"), selectedViewParties === 'View Details' && partyTarget.access === 'full' && currentTransactionStatus !== TransactionStatus.ARCHIVED && currentTransactionStatus !== TransactionStatus.CLOSED && React.createElement(\"button\", {\n          className: \"btn-transaction w-100\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#myModal\",\n          onClick: function onClick() {\n            _this.setState({\n              isShowMemberModal: true\n            });\n          },\n          style: {\n            transition: '0.3s'\n          }\n        }, \"Add New Member\"))), React.createElement(\"div\", {\n          className: \"group-back\"\n        }, _this.props.subHeaderText && (_this.props.currentParty ? React.createElement(Link, {\n          route: \"/my-transactions\"\n        }, React.createElement(\"span\", {\n          className: \"mr-3\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick:\n          /*#__PURE__*/\n          _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee14() {\n            var dispatch;\n            return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n              while (1) {\n                switch (_context14.prev = _context14.next) {\n                  case 0:\n                    dispatch = _this.props.dispatch;\n                    setTimeout(\n                    /*#__PURE__*/\n                    _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee13() {\n                      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n                        while (1) {\n                          switch (_context13.prev = _context13.next) {\n                            case 0:\n                              _context13.next = 2;\n                              return dispatch(authRedux.updateParties({\n                                data: 'Main'\n                              }));\n\n                            case 2:\n                            case \"end\":\n                              return _context13.stop();\n                          }\n                        }\n                      }, _callee13);\n                    })), 2000);\n\n                  case 2:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }\n            }, _callee14);\n          }))\n        }, React.createElement(\"i\", {\n          className: \"fas fa-chevron-left\"\n        }), \"Back\")) : React.createElement(Link, {\n          route: \"/my-transactions\"\n        }, React.createElement(\"span\", {\n          className: \"mr-3\",\n          style: {\n            cursor: 'pointer'\n          }\n        }, React.createElement(\"i\", {\n          className: \"fas fa-chevron-left\"\n        }), \"Back\"))))), React.createElement(\"div\", {\n          className: \"page-tab\"\n        }, React.createElement(\"div\", {\n          className: \"page-tab-menu\",\n          style: {\n            width: '140%'\n          }\n        }, React.createElement(\"div\", {\n          id: \"a\",\n          className: \"page-icon page-icon--parties current\",\n          onClick: _this._selectViewParties\n        }, \"Main\"), React.createElement(\"div\", {\n          style: {\n            display: 'initial',\n            position: 'relative'\n          }\n        }, React.createElement(\"div\", {\n          className: \"page-icon page-icon--parties x\",\n          style: {\n            position: 'relative'\n          },\n          onClick: _this._selectViewParties\n        }, \"Actions Needed\"), _this.state.countDocumentAction > 0 && React.createElement(\"span\", {\n          className: \"d-flex align-items-center justify-content-center\",\n          style: {\n            position: 'absolute',\n            top: '-10px',\n            right: '15px',\n            width: '24px',\n            height: '18px',\n            borderRadius: '41px',\n            backgroundColor: '#446aeb',\n            color: '#fff',\n            fontSize: '10px',\n            boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n          }\n        }, \"+\", _this.state.countDocumentAction)), React.createElement(\"div\", {\n          className: \"page-icon page-icon--parties\",\n          onClick: _this._selectViewParties\n        }, \"My Documents\"), React.createElement(\"div\", {\n          className: \"page-icon page-icon--parties\",\n          onClick: _this._selectViewParties\n        }, \"Envelopes\"), React.createElement(\"div\", {\n          className: \"page-icon page-icon--parties\",\n          onClick: _this._selectViewParties\n        }, \"View Details\"))))));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_selectView\",\n      /*#__PURE__*/\n      function () {\n        var _ref16 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee15(e) {\n          var active, title, dispatch;\n          return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n            while (1) {\n              switch (_context15.prev = _context15.next) {\n                case 0:\n                  active = document.getElementsByClassName('current');\n                  title = document.getElementById('titleTr');\n\n                  _toConsumableArray(active).forEach(function (acT) {\n                    acT.classList.remove('current');\n                  });\n\n                  e.currentTarget.className += ' current';\n                  _context15.t0 = e.currentTarget.textContent;\n                  _context15.next = _context15.t0 === 'In Progress' ? 7 : _context15.t0 === 'Complete' ? 9 : _context15.t0 === 'Archived' ? 11 : 13;\n                  break;\n\n                case 7:\n                  title.innerHTML = 'Active property transaction folder.';\n                  return _context15.abrupt(\"break\", 14);\n\n                case 9:\n                  title.innerHTML = 'Complete transaction list.';\n                  return _context15.abrupt(\"break\", 14);\n\n                case 11:\n                  title.innerHTML = 'Archived transaction list.';\n                  return _context15.abrupt(\"break\", 14);\n\n                case 13:\n                  return _context15.abrupt(\"break\", 14);\n\n                case 14:\n                  _this.setState({\n                    selectedView: e.currentTarget.textContent\n                  });\n\n                  dispatch = _this.props.dispatch;\n                  _context15.next = 18;\n                  return dispatch(authRedux.updateTest({\n                    data: e.currentTarget.textContent\n                  }));\n\n                case 18:\n                case \"end\":\n                  return _context15.stop();\n              }\n            }\n          }, _callee15);\n        }));\n\n        return function (_x5) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n\n      _defineProperty(_assertThisInitialized(_this), \"_selectViewParties\",\n      /*#__PURE__*/\n      function () {\n        var _ref17 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee16(e) {\n          var active, dispatch;\n          return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  active = document.getElementsByClassName('current');\n\n                  _toConsumableArray(active).forEach(function (acT) {\n                    acT.classList.remove('current');\n                  });\n\n                  e.currentTarget.className += ' current';\n\n                  _this.setState({\n                    selectedViewParties: e.currentTarget.textContent\n                  });\n\n                  dispatch = _this.props.dispatch;\n                  _context16.next = 7;\n                  return dispatch(authRedux.updateParties({\n                    data: e.currentTarget.textContent\n                  }));\n\n                case 7:\n                case \"end\":\n                  return _context16.stop();\n              }\n            }\n          }, _callee16);\n        }));\n\n        return function (_x6) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n\n      _defineProperty(_assertThisInitialized(_this), \"_toggleModal\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee17() {\n        var dispatch;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _this.setState({\n                  isToggleModalNewTransaction: _this.state.isToggleModalNewTransaction\n                });\n\n                dispatch = _this.props.dispatch;\n                _context17.next = 4;\n                return dispatch(authRedux.updateNew({\n                  data: _this.state.isToggleModalNewTransaction\n                }));\n\n              case 4:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_selectViewDashboard\",\n      /*#__PURE__*/\n      function () {\n        var _ref19 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee18(e) {\n          var active, dispatch;\n          return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  active = document.getElementsByClassName('current');\n\n                  _toConsumableArray(active).forEach(function (acT) {\n                    acT.classList.remove('current');\n                  });\n\n                  e.currentTarget.className += ' current';\n\n                  _this.setState({\n                    selectedViewDashboard: e.currentTarget.textContent\n                  });\n\n                  dispatch = _this.props.dispatch;\n                  _context18.next = 7;\n                  return dispatch(authRedux.updateDashboard({\n                    data: e.currentTarget.textContent\n                  }));\n\n                case 7:\n                case \"end\":\n                  return _context18.stop();\n              }\n            }\n          }, _callee18);\n        }));\n\n        return function (_x7) {\n          return _ref19.apply(this, arguments);\n        };\n      }());\n\n      _defineProperty(_assertThisInitialized(_this), \"_toggleModal\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee19() {\n        var dispatch;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _this.setState({\n                  isToggleModalNewTransaction: _this.state.isToggleModalNewTransaction\n                });\n\n                dispatch = _this.props.dispatch;\n                _context19.next = 4;\n                return dispatch(authRedux.updateNew({\n                  data: _this.state.isToggleModalNewTransaction\n                }));\n\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_logout\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee20() {\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return _this.props.dispatch(authRedux.logout());\n\n              case 2:\n                Router.replaceRoute('/login'); // await location.reload()\n\n                if (window.Intercom) {\n                  window.Intercom('shutdown');\n                }\n\n              case 4:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20);\n      })));\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderModalReferralFriend\", function () {\n        var currentUser = _this.props.currentUser;\n        return React.createElement(Modal, {\n          isOpen: _this.state.isToggleReferModal,\n          toggle: function toggle() {\n            return _this.setState({\n              isToggleReferModal: false\n            });\n          },\n          id: \"invite-party-modal\"\n        }, React.createElement(\"div\", {\n          className: \"modal-header modal-header--change\"\n        }, React.createElement(\"div\", {\n          className: \"text-center w-100\"\n        }, React.createElement(\"h5\", {\n          className: \"modal-title text-uppercase font-weight-bold\",\n          id: \"exampleModalLabel\"\n        }, \"Refer a friend\"), React.createElement(\"small\", null, \"Invite friends to Link application\")), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"close bg-transparent\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this.setState({\n              isToggleReferModal: false\n            });\n          }\n        }, \"\\xD7\")), React.createElement(Formik, {\n          initialValues: {\n            email: ''\n          },\n          onSubmit:\n          /*#__PURE__*/\n          function () {\n            var _ref22 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee21(values, actions) {\n              var existedEmail, invitedEmail;\n              return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n                while (1) {\n                  switch (_context21.prev = _context21.next) {\n                    case 0:\n                      actions.setSubmitting(true);\n                      _context21.next = 3;\n                      return userService.findUserByEmail(values.email);\n\n                    case 3:\n                      existedEmail = _context21.sent;\n\n                      if (existedEmail) {\n                        _context21.next = 17;\n                        break;\n                      }\n\n                      _context21.next = 7;\n                      return userService.getInvitationByEmail(values.email);\n\n                    case 7:\n                      invitedEmail = _context21.sent;\n\n                      if (!invitedEmail) {\n                        _context21.next = 11;\n                        break;\n                      }\n\n                      _context21.next = 11;\n                      return userService.deleteExistedInvitation(invitedEmail.id);\n\n                    case 11:\n                      userService.sendMailToReferFriend(currentUser.id, values.email);\n                      actions.setSubmitting(false);\n\n                      _this.setState({\n                        isToggleReferModal: false\n                      });\n\n                      toastr.success('Sended successfully!');\n                      _context21.next = 19;\n                      break;\n\n                    case 17:\n                      toastr.warning('Already have user with this email!');\n                      actions.setSubmitting(false);\n\n                    case 19:\n                    case \"end\":\n                      return _context21.stop();\n                  }\n                }\n              }, _callee21);\n            }));\n\n            return function (_x8, _x9) {\n              return _ref22.apply(this, arguments);\n            };\n          }(),\n          validate: function validate(values) {\n            var error = {};\n            var regEmail = new RegExp('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@' + '[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$');\n\n            if (values.email === '') {\n              error.referError = \"Email is required\";\n            } else if (!regEmail.test(values.email)) {\n              error.referError = 'Please enter the correct email format';\n            }\n\n            return error;\n          }\n        }, function (_ref23) {\n          var values = _ref23.values,\n              isValid = _ref23.isValid,\n              errors = _ref23.errors,\n              isSubmitting = _ref23.isSubmitting,\n              handleSubmit = _ref23.handleSubmit,\n              handleChange = _ref23.handleChange;\n          return React.createElement(\"form\", {\n            onSubmit: handleSubmit\n          }, React.createElement(\"div\", {\n            className: \"modal-body px-5 mx-2\"\n          }, React.createElement(\"div\", null, React.createElement(\"div\", {\n            className: \"row pt-3\"\n          }, React.createElement(\"div\", {\n            className: \"col-12\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Email Address\",\n            name: \"email\",\n            onChange: handleChange,\n            value: values.email\n          }))))), errors.referError && React.createElement(\"div\", {\n            className: \"text-danger text-center\"\n          }, errors.referError), React.createElement(\"div\", {\n            className: \"text-center my-5\"\n          }, React.createElement(\"button\", {\n            disabled: !isValid || isSubmitting,\n            type: \"submit\",\n            className: \"btn bg-info text-white px-5\"\n          }, isSubmitting && React.createElement(\"span\", {\n            className: \"spinner-border spinner-border-sm mr-2\"\n          }), \"Send Invite\"))));\n        }));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderModalWelcome\", function () {\n        var welcomeInvitation = _this.props.welcomeInvitation;\n\n        if (!_this.state.isToggleModalWelcome || !welcomeInvitation) {\n          return null;\n        }\n\n        return React.createElement(Modal, {\n          isOpen: _this.state.isToggleModalWelcome\n        }, React.createElement(\"div\", {\n          className: \"modal-header modal-header--change border-top-0\"\n        }, React.createElement(\"div\", {\n          className: \"text-center w-100 \"\n        }, React.createElement(\"h1\", {\n          className: \"modal-title text-info mb-3\"\n        }, \"Welcome to Link\"), React.createElement(\"p\", null, \"You has been added as the \\\"\".concat(getRoleLabel(welcomeInvitation.role), \"\\\" for the transaction: \").concat(_this._getTransactionFullAddress(welcomeInvitation.transaction))), welcomeInvitation.access === TransactionAccessType.FULL ? React.createElement(\"p\", null, \"Once your account is created, you will have full access to all documents and parties that are relevant to this transaction.\", React.createElement(\"br\", null), React.createElement(\"br\", null), \"With Full Access you will be able to view all documents, upload documents, \", React.createElement(\"br\", null), \"assign signors on documents you upload, and message all other parties \", React.createElement(\"br\", null), \"involved.\") : React.createElement(\"p\", null, \"Once your account is created, you will have \\u201CUpload Only\\u201D capabilities for this transaction.\", React.createElement(\"br\", null), React.createElement(\"br\", null), \"With \\u201CUpload Only\\u201D you will be able to upload all documents relevant to this transaction. All parties will be notified once you upload any documents.\"), React.createElement(\"p\", null, \"To finish create your profile and access the transaction press continue below.\"))), React.createElement(\"div\", {\n          className: \"modal-body border-top-0 text-center\"\n        }, React.createElement(\"button\", {\n          className: \"btn btn-info text-white py-2 px-5\",\n          onClick: _this._showPartyInfoForm\n        }, \"Continue\")));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_showPartyInfoForm\", function () {\n        _this.setState({\n          isToggleModalWelcome: false,\n          isToggleModalInfo: true\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_onSubmitModalInfo\",\n      /*#__PURE__*/\n      function () {\n        var _ref24 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee22(values, action) {\n          var _this$props3, currentUser, welcomeInvitation, setSubmitting, firstName, lastName, email, phoneNumber, company, licenseNumber;\n\n          return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n            while (1) {\n              switch (_context22.prev = _context22.next) {\n                case 0:\n                  _this$props3 = _this.props, currentUser = _this$props3.currentUser, welcomeInvitation = _this$props3.welcomeInvitation;\n                  setSubmitting = action.setSubmitting;\n                  _context22.prev = 2;\n                  firstName = values.firstName, lastName = values.lastName, email = values.email, phoneNumber = values.phoneNumber, company = values.company, licenseNumber = values.licenseNumber;\n                  setSubmitting(true);\n                  _context22.next = 7;\n                  return transactionService.updateTransactionPartyInfo({\n                    userId: currentUser.id,\n                    transactionId: welcomeInvitation.transactionId\n                  }, {\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    phoneNumber: phoneNumber,\n                    company: company,\n                    licenseNumber: licenseNumber\n                  });\n\n                case 7:\n                  setSubmitting(false);\n                  toastr.success('Your transaction profile has been updated');\n\n                  _this.setState({\n                    isToggleModalInfo: false\n                  });\n\n                  _context22.next = 16;\n                  break;\n\n                case 12:\n                  _context22.prev = 12;\n                  _context22.t0 = _context22[\"catch\"](2);\n                  toastr.error(_context22.t0.message);\n                  setSubmitting(false);\n\n                case 16:\n                case \"end\":\n                  return _context22.stop();\n              }\n            }\n          }, _callee22, null, [[2, 12]]);\n        }));\n\n        return function (_x10, _x11) {\n          return _ref24.apply(this, arguments);\n        };\n      }());\n\n      _defineProperty(_assertThisInitialized(_this), \"_renderModalInfo\", function () {\n        var _this$props4 = _this.props,\n            welcomeInvitation = _this$props4.welcomeInvitation,\n            currentUser = _this$props4.currentUser;\n        return React.createElement(Modal, {\n          isOpen: _this.state.isToggleModalInfo,\n          toggle: function toggle() {\n            return _this.setState({\n              isToggleModalInfo: false\n            });\n          },\n          id: \"create-transaction-party-profile-modal\",\n          className: \"th-16\"\n        }, React.createElement(\"div\", {\n          className: \"modal-header modal-header--change\",\n          id: \"bg-gr\"\n        }, React.createElement(\"div\", {\n          className: \"text-center w-100\"\n        }, React.createElement(\"h5\", {\n          className: \"modal-title new-add\",\n          id: \"exampleModalLabel\"\n        }, \"Add Your Information\")), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"close bg-transparent\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this.setState({\n              isToggleModalInfo: false\n            });\n          }\n        }, \"\\xD7\")), React.createElement(Formik, {\n          initialValues: {\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName,\n            email: currentUser.email,\n            phoneNumber: welcomeInvitation.phoneNumber,\n            company: '',\n            licenseNumber: ''\n          },\n          onSubmit: _this._onSubmitModalInfo,\n          validate: function validate(values) {\n            var error = {};\n\n            if (welcomeInvitation.role !== 'seller' && welcomeInvitation.role !== 'buyer') {\n              if (values.firstName === '' || values.lastName === '' || values.email === '' || values.phoneNumber.length < 9 || values.company === '') {\n                error.details = \"\".concat(getRoleLabel(welcomeInvitation.role), \" details are required\");\n              }\n            } else {\n              if (values.firstName.length < 1 || values.lastName.length < 1 || values.email.length < 1 || values.phoneNumber.length < 9) {\n                error.details = \"\".concat(getRoleLabel(welcomeInvitation.role), \" details are required\");\n              }\n            }\n\n            return error;\n          }\n        }, function (_ref25) {\n          var values = _ref25.values,\n              errors = _ref25.errors,\n              isValid = _ref25.isValid,\n              isSubmitting = _ref25.isSubmitting,\n              handleSubmit = _ref25.handleSubmit,\n              handleChange = _ref25.handleChange;\n          return React.createElement(\"form\", {\n            onSubmit: handleSubmit\n          }, React.createElement(\"div\", {\n            className: \"modal-body px-sm-5 mx-2\"\n          }, React.createElement(\"div\", null, React.createElement(\"h4\", {\n            className: \"text-center\"\n          }, getRoleLabel(welcomeInvitation.role)), React.createElement(\"div\", {\n            className: \"row pt-3\"\n          }, React.createElement(\"div\", {\n            className: \"col-12 col-sm-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"First Name\"), React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"First Name\",\n            name: \"firstName\",\n            onChange: handleChange,\n            value: values.firstName,\n            autoFocus: true\n          }))), React.createElement(\"div\", {\n            className: \"col-12 col-sm-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Last Name\"), React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Last Name\",\n            name: \"lastName\",\n            onChange: handleChange,\n            value: values.lastName\n          }))), React.createElement(\"div\", {\n            className: \"col-12 col-sm-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Email \"), React.createElement(\"input\", {\n            disabled: true,\n            className: \"form-control\",\n            placeholder: \"Email Address\",\n            name: \"email\",\n            onChange: handleChange,\n            value: values.email\n          }))), React.createElement(\"div\", {\n            className: \"col-12 col-sm-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Phone Number\", ' '), React.createElement(PhoneInput, {\n            country: 'us',\n            enableSearch: true,\n            onChange: function onChange(value) {\n              handleChange({\n                target: {\n                  name: 'phoneNumber',\n                  value: value\n                }\n              });\n            },\n            value: values.phoneNumber,\n            placeholder: \"Phone Number\",\n            className: \"form-control\"\n          }))), welcomeInvitation.role !== 'seller' && welcomeInvitation.role !== 'buyer' && React.createElement(Fragment, null, React.createElement(\"div\", {\n            className: \"col-12 col-sm-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"Company\"), React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Company\",\n            name: \"company\",\n            onChange: handleChange,\n            value: values.company\n          }))), welcomeInvitation.access === TransactionAccessType.FULL ? React.createElement(\"div\", {\n            className: \"col-12 col-sm-6\"\n          }, React.createElement(\"div\", {\n            className: \"form-group\"\n          }, React.createElement(\"label\", {\n            className: \"tittle-mini-ver\"\n          }, \"License Number\", ' '), React.createElement(\"input\", {\n            className: \"form-control\",\n            placeholder: \"License Number\",\n            name: \"licenseNumber\",\n            onChange: handleChange,\n            value: values.licenseNumber\n          }))) : React.createElement(React.Fragment, null))), errors.details && React.createElement(\"div\", {\n            className: \"text-danger text-center\"\n          }, errors.details)), React.createElement(\"div\", {\n            className: \"text-center my-5\"\n          }, React.createElement(\"button\", {\n            disabled: errors.details,\n            type: \"submit\",\n            className: \"btn btn-info text-white py-2 px-5\"\n          }, isSubmitting && React.createElement(\"span\", {\n            className: \"spinner-border spinner-border-sm mr-2\"\n          }), \"Access Transaction\"))));\n        }));\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_getTransactionFullAddress\", function (transaction) {\n        return \"\".concat(transaction.address);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_changeStatusNotification\",\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee23() {\n        var status;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.prev = 0;\n                status = !_this.state.statusNotification;\n                _context23.next = 4;\n                return userService.updateStatusNotification(_this.props.currentUser.id, status);\n\n              case 4:\n                _context23.next = 6;\n                return _this.props.dispatch(authRedux.updateStatusNotifi(status));\n\n              case 6:\n                _this.setState({\n                  statusNotification: status\n                });\n\n                _context23.next = 12;\n                break;\n\n              case 9:\n                _context23.prev = 9;\n                _context23.t0 = _context23[\"catch\"](0);\n                toastr.error(_context23.t0);\n\n              case 12:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, null, [[0, 9]]);\n      })));\n\n      _this._getIntercom();\n\n      _this.state = {\n        isToggleModalWelcome: !!props.welcomeInvitation,\n        isToggleModalInfo: false,\n        isToggleReferModal: false,\n        isToggleEnvelop: false,\n        toggleSidebar: false,\n        newMessage: 0,\n        newEvent: 0,\n        selectedView: 'In Progress',\n        selectedViewParties: 'Main',\n        selectedViewDashboard: 'Main',\n        isToggleModalNewTransaction: false,\n        isShowMemberModal: false,\n        isShowUpdateNewDocumentModal: false,\n        newTask: 0,\n        countDocumentAction: 0,\n        newNotification: 0,\n        notification: [],\n        listMessage: [],\n        statusNotification: props.currentUser.statusNotification === undefined ? true : props.currentUser.statusNotification,\n        documentList: [],\n        partiesOfTransaction: [],\n        dataAllUser: [],\n        isViewNews: true,\n        listNews: [],\n        listAssign: [],\n        listMess: []\n      };\n      return _this;\n    }\n\n    _createClass(UserWrapper, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props5 = this.props,\n            t = _this$props5.t,\n            currentUser = _this$props5.currentUser,\n            query = _this$props5.query,\n            currentParty = _this$props5.currentParty;\n        var _this$state2 = this.state,\n            isShowMemberModal = _this$state2.isShowMemberModal,\n            isToggleEnvelop = _this$state2.isToggleEnvelop,\n            isShowUpdateNewDocumentModal = _this$state2.isShowUpdateNewDocumentModal,\n            isToggleModalNewTransaction = _this$state2.isToggleModalNewTransaction,\n            documentList = _this$state2.documentList,\n            partiesOfTransaction = _this$state2.partiesOfTransaction,\n            dataAllUser = _this$state2.dataAllUser;\n        if (!currentUser) return null;\n        return React.createElement(\"div\", {\n          id: \"userOnly\",\n          className: \"fixed-layout main-wrapper\"\n        }, React.createElement(Head, null, React.createElement(\"title\", null, t('common:home')), React.createElement(\"link\", {\n          rel: \"stylesheet\",\n          href: \"https://unpkg.com/react-table@6.8.6/react-table.css\"\n        }), React.createElement(\"link\", {\n          href: \"https://unpkg.com/ionicons@4.4.2/dist/css/ionicons.min.css\",\n          rel: \"stylesheet\"\n        }), React.createElement(\"script\", {\n          dangerouslySetInnerHTML: {\n            __html: \"(function(){var w=window;var ic=w.Intercom;if(typeof ic===\\\"function\\\"){ic('reattach_activator');ic('update',w.intercomSettings);}else{var d=document;var i=function(){i.c(arguments);};i.q=[];i.c=function(args){i.q.push(args);};w.Intercom=i;var l=function(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/lhbxmtx3';var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);};if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})();\"\n          }\n        })), this._renderSideBar(), this._renderNavBar(), this._renderModalReferralFriend(), React.createElement(\"main\", {\n          className: \"page-wrapper\"\n        }, React.createElement(\"div\", {\n          className: \"container-fluid\",\n          style: {\n            marginLeft: '0px',\n            paddingLeft: '0px',\n            paddingRight: '0px'\n          }\n        }, React.createElement(\"div\", {\n          className: \"row page-title\"\n        }, React.createElement(\"div\", {\n          className: \"col-md-12 align-self-center\",\n          style: {\n            paddingLeft: '0',\n            paddingRight: '0'\n          }\n        }, React.createElement(\"h4\", {\n          className: \"text-themecolor\",\n          style: {\n            marginBottom: '0px'\n          }\n        }, this._renderPageHeaderText()))), React.createElement(TranslatableContent, this.props))), isShowMemberModal && React.createElement(AddNewMemberModal, {\n          isShowMemberModal: isShowMemberModal,\n          toggleMemberModal: function toggleMemberModal() {\n            return _this2.setState({\n              isShowMemberModal: !isShowMemberModal\n            });\n          },\n          transactionId: query.idTransaction,\n          fetchData: function fetchData() {\n            return _this2._fetchDocumentsAndParties();\n          },\n          dataAllUser: dataAllUser\n        }), isShowUpdateNewDocumentModal && React.createElement(UploadNewDocumentModal, {\n          currentParty: currentParty,\n          idParty: this.props.idParty,\n          transaction: this.props.transaction,\n          fetchData: function fetchData() {\n            return _this2._fetchDocumentsAndParties();\n          },\n          isShowUpdateNewDocumentModal: isShowUpdateNewDocumentModal,\n          toggleMemberModal: function toggleMemberModal() {\n            return _this2.setState({\n              isShowUpdateNewDocumentModal: !isShowUpdateNewDocumentModal\n            });\n          }\n        }), isToggleModalNewTransaction && React.createElement(AddNewTransactionModal, {\n          currentUser: this.props.currentUser,\n          isToggleModalNewTransaction: isToggleModalNewTransaction,\n          toggleMemberModal: function toggleMemberModal() {\n            return _this2.setState({\n              isToggleModalNewTransaction: !isToggleModalNewTransaction\n            });\n          }\n        }), isToggleEnvelop && React.createElement(AddNewEnvelopeModal, {\n          isShow: isToggleEnvelop,\n          toggle: function toggle() {\n            return _this2.setState({\n              isToggleEnvelop: !isToggleEnvelop\n            });\n          },\n          documentList: documentList,\n          partiesOfTransaction: partiesOfTransaction,\n          currentParty: currentParty\n        }));\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function () {\n        var _componentDidMount = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee24() {\n          var _this3 = this;\n\n          var currentUser, coutNewEvent, coutNewMessage, coutTasks, coutNewNotification, getNotificationDocument;\n          return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n            while (1) {\n              switch (_context24.prev = _context24.next) {\n                case 0:\n                  currentUser = this.props.currentUser; // window.addEventListener('load', this._getIntercom())\n\n                  this._fetchRedux();\n\n                  this._getDataUser();\n\n                  this._countDocumentAction();\n\n                  _context24.next = 6;\n                  return notificationService.countWithData(currentUser.id, [NotificationType.CREATE_EVENT]);\n\n                case 6:\n                  coutNewEvent = _context24.sent;\n\n                  this._getMessage();\n\n                  this._getNews();\n\n                  this._getAssign();\n\n                  _context24.next = 12;\n                  return notificationService.countWithData(currentUser.id, [NotificationType.NEW_MESSAGE]);\n\n                case 12:\n                  coutNewMessage = _context24.sent;\n                  _context24.next = 15;\n                  return notificationService.countWithData(currentUser.id, [NotificationType.CREATE_TASK]);\n\n                case 15:\n                  coutTasks = _context24.sent;\n                  _context24.next = 18;\n                  return notificationService.countWithData(currentUser.id, [NotificationType.ACTION_ADD_TO_USER, NotificationType.NEW_NEWS // NotificationType.CREATE_TASK\n                  ]);\n\n                case 18:\n                  coutNewNotification = _context24.sent;\n                  _context24.next = 21;\n                  return notificationService.limitFindNotification(currentUser.id, [NotificationType.ACTION_ADD_TO_USER, NotificationType.UPLOAD_DOCUMENT // NotificationType.CREATE_TASK\n                  ]);\n\n                case 21:\n                  getNotificationDocument = _context24.sent;\n                  this.setState({\n                    notification: getNotificationDocument\n                  });\n                  this.setState({\n                    newMessage: coutNewMessage,\n                    newEvent: coutNewEvent,\n                    newNotification: coutNewNotification,\n                    newTask: coutTasks\n                  });\n                  notificationService.listenToMyNewNotifications(currentUser.id, function (notification) {\n                    if (notification.type === NotificationType.CREATE_EVENT) {\n                      _this3.setState({\n                        newEvent: _this3.state.newEvent + 1\n                      });\n                    } else if (notification.type === NotificationType.DELETE_EVENT) {\n                      _this3.setState({\n                        newEvent: _this3.state.newEvent + 1\n                      });\n                    } else if (notification.type === NotificationType.NEW_MESSAGE) {\n                      _this3._setMessageNewRealTime(notification);\n\n                      _this3.setState({\n                        newMessage: _this3.state.newMessage + 1\n                      });\n                    } else if (notification.type === NotificationType.CREATE_TASK) {\n                      _this3.setState({\n                        newTask: _this3.state.newTask + 1\n                      });\n                    } else if (notification.type === NotificationType.NEW_NEWS) {\n                      _this3.setState({\n                        newNotification: _this3.state.newNotification + 1,\n                        listNews: [notification].concat(_toConsumableArray(_this3.state.listNews))\n                      });\n                    } else {\n                      var arrayAssign = _this3.state.listAssign;\n                      arrayAssign.unshift(notification);\n\n                      _this3.setState({\n                        listAssign: arrayAssign,\n                        newNotification: _this3.state.newNotification + 1\n                      });\n                    }\n                  });\n                  transactionService.listenToMyDocumentAction(currentUser.id, function () {\n                    _this3.setState({\n                      countDocumentAction: _this3.state.countDocumentAction - 1\n                    });\n                  });\n                  transactionService.listenToMyDocumentActionAdd(currentUser.id, function () {\n                    _this3.setState({\n                      countDocumentAction: _this3.state.countDocumentAction + 1\n                    });\n                  });\n                  _context24.next = 29;\n                  return this._fetchDocumentsAndParties();\n\n                case 29:\n                case \"end\":\n                  return _context24.stop();\n              }\n            }\n          }, _callee24, this);\n        }));\n\n        function componentDidMount() {\n          return _componentDidMount.apply(this, arguments);\n        }\n\n        return componentDidMount;\n      }()\n    }]);\n\n    return UserWrapper;\n  }(React.Component);\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      currentUser: selector.getLoginUser(state),\n      selectedView: selector.getTest(state),\n      selectedViewParties: selector.getViewParties(state),\n      selectedViewDashboard: selector.getViewDashboard(state),\n      isToggleModalNewTransaction: selector.getNewTransaction(state)\n    };\n  };\n\n  return compose(connect(mapStateToProps), withRouter, withI18next(['user', 'common']))(UserWrapper);\n};\n\nexport default userOnly;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/hocs/userOnly.js"],"names":["React","Fragment","Head","moment","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Modal","Formik","compose","connect","withRouter","Cookies","toastr","classNames","Router","Link","isAdmin","TransactionAccessType","TransactionStatus","getRoleLabel","authRedux","selector","withI18next","userService","authService","transactionService","notificationService","NotificationType","getNotificationTitle","PhoneInput","AddNewMemberModal","UploadNewDocumentModal","AddNewTransactionModal","AddNewEnvelopeModal","NewsType","userOnly","Content","TranslatableContent","UserWrapper","req","res","pathname","query","asPath","store","isServer","setAccessToken","signedCookies","access_token","dispatch","getLoginUser","user","redirect","end","getState","pushRoute","getInitialProps","initialProps","welcomeInvitationId","cookies","get","getDetailedTransactionInvitationById","invitation","welcomeInvitation","remove","idTransaction","getPartyByTransactionIdAndUserId","toString","id","currentParty","props","window","Intercom","app_id","name","currentUser","firstName","email","user_id","created_at","Math","round","Date","createdAt","getTime","getAllUser","data","setState","dataAllUser","countDocumentAction","countDocumentActionsByPartyId","getAllNotificationMessage","newMessageContent","setObj","result","reduce","mes","item","has","internalLink","add","push","listMessage","listMess","getAllNotificationNews","newNews","listNews","getAllNotificationAssign","assign","listAssign","state","newMes","length","updateParties","updateDashboard","updateTest","getDocumentsByTransactionId","documentList","getPartiesByTransactionId","partiesOfTransaction","role","roles","overflowX","height","borderBottom","width","marginTop","router","startsWith","active","marginRight","_sideBarStatusClass","_onClickNewAction","CREATE_EVENT","DELETE_EVENT","CREATE_TASK","NEW_MESSAGE","getDetailedTransactionAndActivityById","transaction","activitiesFull","getActivitiesByPartyId","activitiesUploadOnly","types","newEvent","newMessage","newTask","deleteWithIdUserAndType","value","statusNotification","path","isViewNews","_setWithSideBarAnimation","_renderCoutNewNotification","right","minWidth","paddingTop","padding","overflowY","maxHeight","map","index","_renderNotificationMessages","_renderCoutAssignNotification","newNotification","fontSize","_renderNotificationAssign","_renderNotificationNews","avatar","objectFit","border","_changeStatusNotification","_logout","_renderModalWelcome","_renderModalInfo","document","getElementById","classList","toggle","notification","setWatchedNotification","e","all","message","filter","x","senderId","_getMessage","news","isRead","_getNews","_getAssign","type","format","whiteSpace","textAlign","E_COMMERCE","maxWidth","backgroundColor","REAL_ESTATE","OTHERS","_changeStatus","fullName","fromNow","_changeStatusNotificationNews","_viewImageNews","title","content","_changeStatusNotificationAssign","image","overflow","textOverflow","isCoordinator","partyTarget","currentTransactionStatus","selectedViewParties","headerText","cursor","isToggleModalNewTransaction","_selectView","paddingBottom","marginBottom","fontWeight","_selectViewDashboard","access","ARCHIVED","CLOSED","isShowMemberModal","transition","isShowUpdateNewDocumentModal","isToggleEnvelop","subHeaderText","setTimeout","_selectViewParties","display","position","top","borderRadius","color","boxShadow","getElementsByClassName","forEach","acT","currentTarget","className","textContent","innerHTML","selectedView","updateNew","selectedViewDashboard","logout","replaceRoute","isToggleReferModal","values","actions","setSubmitting","findUserByEmail","existedEmail","getInvitationByEmail","invitedEmail","deleteExistedInvitation","sendMailToReferFriend","success","warning","error","regEmail","RegExp","referError","test","isValid","errors","isSubmitting","handleSubmit","handleChange","isToggleModalWelcome","_getTransactionFullAddress","FULL","_showPartyInfoForm","isToggleModalInfo","action","lastName","phoneNumber","company","licenseNumber","updateTransactionPartyInfo","userId","transactionId","_onSubmitModalInfo","details","target","address","status","updateStatusNotification","updateStatusNotifi","_getIntercom","toggleSidebar","undefined","t","__html","_renderSideBar","_renderNavBar","_renderModalReferralFriend","marginLeft","paddingLeft","paddingRight","_renderPageHeaderText","_fetchDocumentsAndParties","idParty","_fetchRedux","_getDataUser","_countDocumentAction","countWithData","coutNewEvent","coutNewMessage","coutTasks","ACTION_ADD_TO_USER","NEW_NEWS","coutNewNotification","limitFindNotification","UPLOAD_DOCUMENT","getNotificationDocument","listenToMyNewNotifications","_setMessageNewRealTime","arrayAssign","unshift","listenToMyDocumentAction","listenToMyDocumentActionAdd","Component","mapStateToProps","getTest","getViewParties","getViewDashboard","getNewTransaction"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport Head from 'next/head'\nimport moment from 'moment'\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal\n} from 'reactstrap'\nimport { Formik } from 'formik'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'next/router'\nimport Cookies from 'js-cookie'\nimport toastr from 'toastr'\nimport classNames from 'classnames'\nimport { Router, Link } from '../../common/routes'\nimport { isAdmin } from '../../common/models/User'\nimport {\n  TransactionAccessType,\n  TransactionStatus\n} from '../../common/models/Transaction'\nimport { getRoleLabel } from '../view-models/User'\nimport authRedux, { selector } from '../redux/authRedux'\nimport { withI18next } from './withI18next'\nimport {\n  userService,\n  authService,\n  transactionService,\n  notificationService\n} from '../services'\nimport { NotificationType } from '../../common/models/Notification'\nimport { getNotificationTitle } from '../../common/view-models/Notification'\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport AddNewMemberModal from '../component/Transaction/AddNewMemberModal'\nimport UploadNewDocumentModal from '../component/Transaction/UploadNewDocumentModal'\nimport AddNewTransactionModal from '../component/Transaction/AddNewTransactionModal'\nimport AddNewEnvelopeModal from '../component/Transaction/AddNewEnvelopeModal'\nimport { NewsType } from '../../common/models/News'\nconst userOnly = Content => {\n  const TranslatableContent = withI18next(['user', 'common'])(Content)\n  class UserWrapper extends React.Component {\n    static async getInitialProps ({\n      req,\n      res,\n      pathname,\n      query,\n      asPath,\n      store,\n      isServer\n    }) {\n      if (isServer) {\n        authService.setAccessToken(req.signedCookies.access_token)\n        const user = await store.dispatch(authRedux.getLoginUser())\n        if (!user) {\n          res.redirect('/login')\n          res.end()\n        } else if (isAdmin(user)) {\n          res.redirect('/admin')\n          res.end()\n        }\n      } else {\n        const user = selector.getLoginUser(store.getState())\n        if (!user || isAdmin(user)) Router.pushRoute('/login')\n      }\n\n      const initialProps = Content.getInitialProps\n        ? await Content.getInitialProps({\n          req,\n          res,\n          pathname,\n          query,\n          asPath,\n          store,\n          isServer\n        })\n        : {}\n\n      const welcomeInvitationId = isServer\n        ? req.cookies['welcome_invitation_id']\n        : Cookies.get('welcome_invitation_id')\n      if (welcomeInvitationId) {\n        const invitation = await transactionService.getDetailedTransactionInvitationById(\n          welcomeInvitationId\n        )\n        if (invitation) {\n          initialProps.welcomeInvitation = invitation\n        }\n\n        if (!isServer) {\n          Cookies.remove('welcome_invitation_id')\n        }\n      }\n\n      const user = await store.dispatch(authRedux.getLoginUser())\n\n      if (user && query.idTransaction) {\n        const currentParty = await transactionService.getPartyByTransactionIdAndUserId(\n          query.idTransaction.toString(),\n          user.id\n        )\n        initialProps.currentParty = currentParty\n      }\n      initialProps.query = query\n\n      return initialProps\n    }\n\n    constructor (props) {\n      super(props)\n      this._getIntercom()\n      this.state = {\n        isToggleModalWelcome: !!props.welcomeInvitation,\n        isToggleModalInfo: false,\n        isToggleReferModal: false,\n        isToggleEnvelop: false,\n        toggleSidebar: false,\n        newMessage: 0,\n        newEvent: 0,\n        selectedView: 'In Progress',\n        selectedViewParties: 'Main',\n        selectedViewDashboard: 'Main',\n        isToggleModalNewTransaction: false,\n        isShowMemberModal: false,\n        isShowUpdateNewDocumentModal: false,\n        newTask: 0,\n        countDocumentAction: 0,\n        newNotification: 0,\n        notification: [],\n        listMessage: [],\n        statusNotification:\n          props.currentUser.statusNotification === undefined\n            ? true\n            : props.currentUser.statusNotification,\n        documentList: [],\n        partiesOfTransaction: [],\n        dataAllUser: [],\n        isViewNews: true,\n        listNews: [],\n        listAssign: [],\n        listMess: []\n      }\n    }\n\n    render () {\n      const { t, currentUser, query, currentParty } = this.props\n      const {\n        isShowMemberModal,\n        isToggleEnvelop,\n        isShowUpdateNewDocumentModal,\n        isToggleModalNewTransaction,\n        documentList,\n        partiesOfTransaction,\n        dataAllUser\n      } = this.state\n      if (!currentUser) return null\n      return (\n        <div id='userOnly' className='fixed-layout main-wrapper'>\n          <Head>\n            <title>{t('common:home')}</title>\n            <link\n              rel='stylesheet'\n              href='https://unpkg.com/react-table@6.8.6/react-table.css'\n            />\n            <link\n              href='https://unpkg.com/ionicons@4.4.2/dist/css/ionicons.min.css'\n              rel='stylesheet'\n            />\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `(function(){var w=window;var ic=w.Intercom;if(typeof ic===\"function\"){ic('reattach_activator');ic('update',w.intercomSettings);}else{var d=document;var i=function(){i.c(arguments);};i.q=[];i.c=function(args){i.q.push(args);};w.Intercom=i;var l=function(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/lhbxmtx3';var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);};if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})();`\n              }}\n            />\n          </Head>\n          {this._renderSideBar()}\n          {this._renderNavBar()}\n          {this._renderModalReferralFriend()}\n\n          <main className='page-wrapper'>\n            <div\n              className='container-fluid'\n              style={{\n                marginLeft: '0px',\n                paddingLeft: '0px',\n                paddingRight: '0px'\n              }}\n            >\n              <div className='row page-title'>\n                <div\n                  className='col-md-12 align-self-center'\n                  style={{ paddingLeft: '0', paddingRight: '0' }}\n                >\n                  <h4\n                    className='text-themecolor'\n                    style={{ marginBottom: '0px' }}\n                  >\n                    {this._renderPageHeaderText()}\n                  </h4>\n                </div>\n              </div>\n              <TranslatableContent {...this.props} />\n            </div>\n          </main>\n          {isShowMemberModal && (\n            <AddNewMemberModal\n              isShowMemberModal={isShowMemberModal}\n              toggleMemberModal={() =>\n                this.setState({ isShowMemberModal: !isShowMemberModal })\n              }\n              transactionId={query.idTransaction}\n              fetchData={() => this._fetchDocumentsAndParties()}\n              dataAllUser={dataAllUser}\n            />\n          )}\n\n          {isShowUpdateNewDocumentModal && (\n            <UploadNewDocumentModal\n              currentParty={currentParty}\n              idParty={this.props.idParty}\n              transaction={this.props.transaction}\n              fetchData={() => this._fetchDocumentsAndParties()}\n              isShowUpdateNewDocumentModal={isShowUpdateNewDocumentModal}\n              toggleMemberModal={() =>\n                this.setState({\n                  isShowUpdateNewDocumentModal: !isShowUpdateNewDocumentModal\n                })\n              }\n            />\n          )}\n          {isToggleModalNewTransaction && (\n            <AddNewTransactionModal\n              currentUser={this.props.currentUser}\n              isToggleModalNewTransaction={isToggleModalNewTransaction}\n              toggleMemberModal={() =>\n                this.setState({\n                  isToggleModalNewTransaction: !isToggleModalNewTransaction\n                })\n              }\n            />\n          )}\n          {isToggleEnvelop && (\n            <AddNewEnvelopeModal\n              isShow={isToggleEnvelop}\n              toggle={() =>\n                this.setState({ isToggleEnvelop: !isToggleEnvelop })\n              }\n              documentList={documentList}\n              partiesOfTransaction={partiesOfTransaction}\n              currentParty={currentParty}\n            />\n          )}\n        </div>\n      )\n    }\n\n    _getIntercom = () => {\n      if (typeof window !== 'undefined') {\n        if (window.Intercom) {\n          window.Intercom('boot', {\n            app_id: 'lhbxmtx3',\n            name: `${this.props.currentUser.firstName}`,\n            email: `${this.props.currentUser.email}`,\n            user_id: `${this.props.currentUser.id}`,\n            created_at: `${Math.round(\n              new Date(this.props.currentUser.createdAt).getTime() / 1000\n            )}`\n          })\n        }\n      }\n    }\n\n    _getDataUser = async () => {\n      try {\n        const data = await userService.getAllUser()\n        this.setState({\n          dataAllUser: data\n        })\n      } catch (e) {}\n    }\n\n    _countDocumentAction = async () => {\n      const { currentParty } = this.props\n      let countDocumentAction = 0\n      if (currentParty && currentParty.id) {\n        countDocumentAction = await transactionService.countDocumentActionsByPartyId(\n          currentParty.id\n        )\n      }\n      this.setState({\n        countDocumentAction: countDocumentAction\n      })\n    }\n\n    async componentDidMount () {\n      const { currentUser } = this.props\n      // window.addEventListener('load', this._getIntercom())\n      this._fetchRedux()\n      this._getDataUser()\n      this._countDocumentAction()\n      const coutNewEvent = await notificationService.countWithData(\n        currentUser.id,\n        [NotificationType.CREATE_EVENT]\n      )\n      this._getMessage()\n      this._getNews()\n      this._getAssign()\n      const coutNewMessage = await notificationService.countWithData(\n        currentUser.id,\n        [NotificationType.NEW_MESSAGE]\n      )\n      const coutTasks = await notificationService.countWithData(\n        currentUser.id,\n        [NotificationType.CREATE_TASK]\n      )\n      const coutNewNotification = await notificationService.countWithData(\n        currentUser.id,\n        [\n          NotificationType.ACTION_ADD_TO_USER,\n          NotificationType.NEW_NEWS\n          // NotificationType.CREATE_TASK\n        ]\n      )\n      const getNotificationDocument = await notificationService.limitFindNotification(\n        currentUser.id,\n        [\n          NotificationType.ACTION_ADD_TO_USER,\n          NotificationType.UPLOAD_DOCUMENT\n          // NotificationType.CREATE_TASK\n        ]\n      )\n      this.setState({ notification: getNotificationDocument })\n      this.setState({\n        newMessage: coutNewMessage,\n        newEvent: coutNewEvent,\n        newNotification: coutNewNotification,\n        newTask: coutTasks\n      })\n      notificationService.listenToMyNewNotifications(\n        currentUser.id,\n        notification => {\n          if (notification.type === NotificationType.CREATE_EVENT) {\n            this.setState({ newEvent: this.state.newEvent + 1 })\n          } else if (notification.type === NotificationType.DELETE_EVENT) {\n            this.setState({ newEvent: this.state.newEvent + 1 })\n          } else if (notification.type === NotificationType.NEW_MESSAGE) {\n            this._setMessageNewRealTime(notification)\n            this.setState({\n              newMessage: this.state.newMessage + 1\n            })\n          } else if (notification.type === NotificationType.CREATE_TASK) {\n            this.setState({ newTask: this.state.newTask + 1 })\n          } else if (notification.type === NotificationType.NEW_NEWS) {\n            this.setState({\n              newNotification: this.state.newNotification + 1,\n              listNews: [notification, ...this.state.listNews]\n            })\n          } else {\n            let arrayAssign = this.state.listAssign\n            arrayAssign.unshift(notification)\n            this.setState({\n              listAssign: arrayAssign,\n              newNotification: this.state.newNotification + 1\n            })\n          }\n        }\n      )\n      transactionService.listenToMyDocumentAction(currentUser.id, () => {\n        this.setState({\n          countDocumentAction: this.state.countDocumentAction - 1\n        })\n      })\n\n      transactionService.listenToMyDocumentActionAdd(currentUser.id, () => {\n        this.setState({\n          countDocumentAction: this.state.countDocumentAction + 1\n        })\n      })\n\n      await this._fetchDocumentsAndParties()\n    }\n\n    _getMessage = async () => {\n      const { currentUser } = this.props\n      try {\n        const newMessageContent = await notificationService.getAllNotificationMessage(\n          currentUser.id\n        )\n        var setObj = new Set()\n        var result = newMessageContent.reduce((mes, item) => {\n          if (!setObj.has(item.data.internalLink)) {\n            setObj.add(item.data.internalLink, item)\n            mes.push(item)\n          }\n          return mes\n        }, [])\n        this.setState({\n          listMessage: result,\n          listMess: newMessageContent\n        })\n      } catch (e) {}\n    }\n\n    _getNews = async () => {\n      const { currentUser } = this.props\n      try {\n        const newNews = await notificationService.getAllNotificationNews(\n          currentUser.id\n        )\n        this.setState({\n          listNews: newNews\n        })\n      } catch (e) {}\n    }\n\n    _getAssign = async () => {\n      const { currentUser } = this.props\n      try {\n        const assign = await notificationService.getAllNotificationAssign(\n          currentUser.id\n        )\n        this.setState({\n          listAssign: assign\n        })\n      } catch (e) {}\n    }\n\n    _setMessageNewRealTime = data => {\n      const { listMessage } = this.state\n      const newMes = [data, ...listMessage]\n      if (newMes.length > 0) {\n        var setObj = new Set()\n        var result = newMes.reduce((mes, item) => {\n          if (!setObj.has(item.data.internalLink)) {\n            setObj.add(item.data.internalLink, item)\n            mes.push(item)\n          }\n          return mes\n        }, [])\n        this.setState({\n          listMessage: result\n        })\n      }\n    }\n\n    _fetchRedux = async () => {\n      const { dispatch } = this.props\n      await dispatch(authRedux.updateParties({ data: 'Main' }))\n      await dispatch(authRedux.updateDashboard({ data: 'Main' }))\n      await dispatch(authRedux.updateTest({ data: 'In Progress' }))\n    }\n\n    _fetchDocumentsAndParties = async () => {\n      const { query, currentParty } = this.props\n\n      // Need for \"Document\" feature\n      if (currentParty) {\n        const documentList = await transactionService.getDocumentsByTransactionId(\n          query.idTransaction.toString()\n        )\n        const partiesOfTransaction = await transactionService.getPartiesByTransactionId(\n          query.idTransaction.toString()\n        )\n\n        this.setState({ documentList, partiesOfTransaction })\n      }\n    }\n\n    _renderSideBar = () => {\n      const { currentUser } = this.props\n      const role = currentUser.roles[0].name\n      return (\n        <aside id='left-sidebar' className='left-sidebar position-fixed'>\n          <div className='scroll-sidebar-left no-block scroll-sidebar--scroll d-flex flex-column'>\n            <nav\n              className='sidebar-nav'\n              style={{ overflowX: 'auto', height: '90%' }}\n            >\n              <ul\n                id='sidebarnav'\n                className='sidebarnav--fix d-md-none d-lg-block d-none'\n              >\n                <li className='nav-brand my-0'>\n                  <a\n                    className='text-center th-10'\n                    style={{\n                      borderBottom: '1px solid #e4e4e42d'\n                    }}\n                  >\n                    <img\n                      src='/static/images/New/new-link-white.png'\n                      alt='homepage'\n                      className='light-logo'\n                      height='40'\n                      style={{\n                        width: '45%'\n                      }}\n                    />\n                  </a>\n                </li>\n              </ul>\n              <ul\n                id='sideBar-menu'\n                className='sidebarnav--fix'\n                style={{ marginTop: '15px' }}\n              >\n                {/* li className='nav-small-cap'>--- GENERAL</li> */}\n\n                {role !== 'user' && (\n                  <li\n                    className={this.props.router.asPath === '/' ? 'active' : ''}\n                  >\n                    <Link route='/'>\n                      <a aria-expanded='false' className='has-arrow'>\n                        <img\n                          className='th-7'\n                          src='../../static/images/New/dashboard-icon.png'\n                          alt=''\n                        />\n                        <span className='hide-menu'>Dashboard</span>\n                      </a>\n                    </Link>\n                  </li>\n                )}\n                <li\n                  className={\n                    this.props.router.asPath.startsWith('/my-transactions')\n                      ? 'active'\n                      : ''\n                  }\n                >\n                  <Link route='/my-transactions'>\n                    <a\n                      className={classNames('has-arrow', {\n                        active: this.props.router.asPath.startsWith(\n                          '/my-transactions'\n                        )\n                      })}\n                      aria-expanded='false'\n                    >\n                      <img\n                        className='th-7'\n                        src='../../static/images/New/transaction.png'\n                        alt=''\n                      />\n                      <span className='hide-menu'>\n                        {/* {t(`common:myTransactions`)} */}\n                        Transactions\n                      </span>\n                    </a>\n                  </Link>\n                </li>\n                {role !== 'user' && (\n                  <li>\n                    <Link route='https://www.linkhomesla.com'>\n                      <a target='_blank' className='has-arrow'>\n                        <img\n                          className='th-7 th-7--new'\n                          src='../../static/images/New/new-br.png'\n                          alt=''\n                        />\n                        <span className='hide-menu'>CINC</span>\n                      </a>\n                    </Link>\n                  </li>\n                )}\n                {role === 'coordinator' && (\n                  <li\n                    className={\n                      this.props.router.asPath.startsWith('/manage-agents')\n                        ? 'active'\n                        : ''\n                    }\n                  >\n                    <Link route='/manage-agents'>\n                      <a\n                        className={classNames('has-arrow', {\n                          active: this.props.router.asPath.startsWith(\n                            '/manage-agents'\n                          )\n                        })}\n                        aria-expanded='false'\n                      >\n                        <img\n                          className='th-7'\n                          src='../../static/images/New/manager.png'\n                          alt=''\n                          style={{\n                            marginRight: '22px',\n                            width: '18px',\n                            height: '18px'\n                          }}\n                        />\n                        <span className='hide-menu'>Manage Agents</span>\n                      </a>\n                    </Link>\n                  </li>\n                )}\n                <li className={`${this._sideBarStatusClass('/calendar')}`}>\n                  <Link route='/calendar'>\n                    <a\n                      className={`has-arrow ${this._sideBarStatusClass(\n                        '/calendar'\n                      )}`}\n                      aria-expanded='false'\n                      onClick={() => {\n                        this._onClickNewAction(\n                          currentUser.id,\n                          [\n                            NotificationType.CREATE_EVENT,\n                            NotificationType.DELETE_EVENT\n                          ],\n                          'newEvent'\n                        )\n                      }}\n                    >\n                      <img\n                        className='th-7'\n                        src='../../static/images/New/calendar-2.png'\n                        alt=''\n                        style={{\n                          marginRight: '22px',\n                          width: '18px',\n                          height: '18px'\n                        }}\n                      />\n                      <span className='hide-menu'>\n                        Calendar\n                        {/* {this._renderNewNotification(this.state.newEvent)} */}\n                      </span>\n                    </a>\n                  </Link>\n                </li>\n\n                <li\n                  className={\n                    this.props.router.asPath.startsWith('/tasks')\n                      ? 'active'\n                      : ''\n                  }\n                >\n                  <Link route='/tasks'>\n                    <a\n                      className={`has-arrow ${this._sideBarStatusClass(\n                        '/tasks'\n                      )}`}\n                      aria-expanded='false'\n                      onClick={() => {\n                        this._onClickNewAction(\n                          currentUser.id,\n                          [NotificationType.CREATE_TASK],\n                          'newTask'\n                        )\n                      }}\n                    >\n                      <img\n                        className='th-7 th-7--new'\n                        src='../../static/images/New/task.png'\n                        alt=''\n                      />\n                      <span className='hide-menu'>\n                        Tasks\n                        {/* {this._renderNewNotification(this.state.newTask)} */}\n                      </span>\n                    </a>\n                  </Link>\n                </li>\n\n                <li className={`${this._sideBarStatusClass('/message')}`}>\n                  <Link route='/message'>\n                    <a\n                      className={`has-arrow ${this._sideBarStatusClass(\n                        '/message'\n                      )}`}\n                      aria-expanded='false'\n                      onClick={() => {\n                        this._onClickNewAction(\n                          currentUser.id,\n                          [NotificationType.NEW_MESSAGE],\n                          'newMessage'\n                        )\n                      }}\n                    >\n                      <img\n                        className='th-7 th-7--new'\n                        src='../../static/images/New/sms.png'\n                        alt=''\n                      />\n                      <span className='hide-menu'>\n                        Inbox\n                        {/* {this._renderNewNotification(this.state.newMessage)} */}\n                      </span>\n                    </a>\n                  </Link>\n                </li>\n                <li\n                  className={\n                    this.props.router.asPath.startsWith('/contact')\n                      ? 'active'\n                      : ''\n                  }\n                >\n                  <Link route='/contact'>\n                    <a\n                      className={classNames('has-arrow', {\n                        active: this.props.router.asPath.startsWith('/contact')\n                      })}\n                      aria-expanded='false'\n                    >\n                      <img\n                        className='th-7 th-7--new'\n                        src='../../static/images/New/Contact.png'\n                        alt=''\n                      />\n                      <span className='hide-menu'>Contact</span>\n                    </a>\n                  </Link>\n                </li>\n              </ul>\n\n              {/* <ul>\n                <button\n                  onClick={() => this.setState({ isToggleReferModal: true })}\n                  className='button-refer text-white py-2 mt-auto mx-auto text-uppercase position-absolute'\n                  style={{\n                    top: '100%',\n                    left: '50%',\n                    msTransform: 'translate(50%,0)',\n                    transform: 'translate(-50%,0)'\n                  }}\n                >\n                  Refer a friend\n                </button>\n              </ul> */}\n            </nav>\n          </div>\n        </aside>\n      )\n    }\n\n    _reRenderDynamic = async () => {\n      const {\n        activitiesFull\n      } = await transactionService.getDetailedTransactionAndActivityById(\n        this.props.transaction.id\n      )\n      const activitiesUploadOnly = await transactionService.getActivitiesByPartyId(\n        this.props.currentParty.id\n      )\n\n      this.setState({\n        activitiesFull,\n        activitiesUploadOnly\n      })\n    }\n\n    _onClickNewAction = (id, types = [], role) => {\n      switch (role) {\n        case 'newEvent':\n          this.setState({ newEvent: 0 })\n          break\n        case 'newMessage':\n          this.setState({ newMessage: 0 })\n          break\n        case 'newTask':\n          this.setState({ newTask: 0 })\n          break\n        default:\n          break\n      }\n      return notificationService.deleteWithIdUserAndType(id, types)\n    }\n\n    _renderNewNotification = value => {\n      if (this.state.statusNotification && value !== 0) {\n        return (\n          <span className='badge badge-pill badge-cyan ml-auto'>{value}</span>\n        )\n      } else {\n        return null\n      }\n    }\n\n    _sideBarStatusClass = path =>\n      this.props.router.asPath.startsWith(path) ? 'active' : ''\n\n    _renderNavBar = () => {\n      const { currentUser } = this.props\n      // const role = currentUser.roles[0].name\n      const { welcomeInvitation } = this.props\n      const { isViewNews, listNews, listMessage, listAssign } = this.state\n      return (\n        <header id='topbar' className='topbar'>\n          <nav className='navbar top-navbar navbar-expand-md '>\n            <div className='navbar-collapse th-18'>\n              <ul className='navbar-nav mr-auto'>\n                <li\n                  className='nav-item'\n                  onClick={() => this._setWithSideBarAnimation()}\n                >\n                  <a className='nav-link text-white ' href='javascript:void(0)'>\n                    <img\n                      src='/static/images/New/header-menu.svg'\n                      style={{ width: '25px', height: '25px' }}\n                    />\n                  </a>\n                </li>\n              </ul>\n              <ul className='navbar-nav my-lg-0 d-flex align-items-center '>\n                <li className='nav-item dropdown'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle caret tag='a' className='mr-3'>\n                      <img\n                        src='/static/images/New/inbox-no.png'\n                        style={{ width: '25px', height: '25px' }}\n                      />\n                      {this._renderCoutNewNotification(listMessage.length)}\n                    </DropdownToggle>\n                    <DropdownMenu\n                      right\n                      style={{\n                        right: '20px',\n                        minWidth: '200px',\n                        paddingTop: '0'\n                      }}\n                      className='not-news'\n                    >\n                      <DropdownItem\n                        header\n                        className='text-left font-14 text-dark border-bottom'\n                        style={{\n                          padding: '10px 20px'\n                        }}\n                      >\n                        Inbox\n                      </DropdownItem>\n                      {listMessage.length > 0 ? (\n                        <div\n                          style={{\n                            right: '0',\n                            overflowY: 'scroll',\n                            maxHeight: '50vh',\n                            minWidth: '360px'\n                          }}\n                          className='not-mess'\n                        >\n                          {listMessage.map((data, index) =>\n                            this._renderNotificationMessages(data, index)\n                          )}\n                        </div>\n                      ) : (\n                        <div\n                          style={{\n                            right: '0',\n                            overflowY: 'scroll',\n                            maxHeight: '50vh',\n                            minWidth: '360px',\n                            padding: '10px 20px'\n                          }}\n                          className='not-mess'\n                        >\n                          No messages\n                        </div>\n                      )}\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='nav-item dropdown'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle caret tag='a' className='mr-3'>\n                      <img\n                        src='/static/images/New/new-notification.png'\n                        style={{ width: '25px', height: '25px' }}\n                      />\n                      {this._renderCoutAssignNotification(\n                        this.state.newNotification\n                      )}\n                    </DropdownToggle>\n                    <DropdownMenu\n                      right\n                      style={{\n                        right: '20px',\n                        minWidth: '200px',\n                        paddingTop: '0'\n                      }}\n                      className='not-news'\n                    >\n                      <div className='d-flex th-new-mess'>\n                        <div\n                          className={\n                            isViewNews\n                              ? 'col-6 d-flex align-items-center justify-content-center flex-column p-2 th-left active-ch'\n                              : 'col-6 d-flex align-items-center justify-content-center flex-column p-2 th-left border-bottom'\n                          }\n                          onClick={() => this.setState({ isViewNews: true })}\n                        >\n                          <img\n                            className=''\n                            src='/static/images/New/new-no.png'\n                            style={{ width: '30px', height: '30px' }}\n                          />\n                          <span\n                            className='th-font-w-5'\n                            style={{ fontSize: '12px' }}\n                          >\n                            Notifications\n                          </span>\n                        </div>\n                        <div\n                          className={\n                            !isViewNews\n                              ? 'active-ch col-6 d-flex align-items-center justify-content-center flex-column p-2 th-right'\n                              : 'col-6 d-flex align-items-center justify-content-center flex-column p-2 th-right border-bottom'\n                          }\n                          onClick={() => {\n                            this.setState({ isViewNews: false })\n                          }}\n                        >\n                          <img\n                            className=''\n                            src='/static/images/New/new-noti.png'\n                            style={{ width: '30px', height: '30px' }}\n                          />\n                          <span\n                            className='th-font-w-5'\n                            style={{ fontSize: '12px' }}\n                          >\n                            News\n                          </span>\n                        </div>\n                      </div>\n                      {isViewNews ? (\n                        <div>\n                          <DropdownItem\n                            header\n                            className='text-left font-14 text-dark border-bottom th-font-w-5'\n                            style={{\n                              padding: '10px 20px'\n                            }}\n                          >\n                            Notifications\n                          </DropdownItem>\n                          {listAssign.length > 0 ? (\n                            <div\n                              style={{\n                                right: '0',\n                                overflowY: 'scroll',\n                                maxHeight: '50vh',\n                                minWidth: '360px'\n                              }}\n                              className='not-mess'\n                            >\n                              {listAssign.map((data, index) =>\n                                this._renderNotificationAssign(data, index)\n                              )}\n                            </div>\n                          ) : (\n                            <div\n                              style={{\n                                right: '0',\n                                overflowY: 'scroll',\n                                maxHeight: '50vh',\n                                minWidth: '360px',\n                                padding: '10px 20px'\n                              }}\n                              className='not-mess'\n                            >\n                              No notifications\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div>\n                          <DropdownItem\n                            header\n                            className='text-left font-14 text-dark border-bottom th-font-w-5'\n                            style={{\n                              padding: '10px 20px'\n                            }}\n                          >\n                            News\n                          </DropdownItem>\n                          {listNews.length > 0 ? (\n                            <div\n                              style={{\n                                right: '0',\n                                overflowY: 'scroll',\n                                maxHeight: '50vh',\n                                minWidth: '360px'\n                              }}\n                              className='not-mess'\n                            >\n                              {listNews.map((data, index) =>\n                                this._renderNotificationNews(data, index)\n                              )}\n                            </div>\n                          ) : (\n                            <div\n                              style={{\n                                padding: '10px 20px',\n                                right: '0',\n                                overflowY: 'scroll',\n                                maxHeight: '50vh',\n                                minWidth: '360px'\n                              }}\n                            >\n                              No news\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li>\n                  <UncontrolledDropdown>\n                    <DropdownToggle className='th-19'>\n                      <img\n                        src={\n                          !currentUser.avatar\n                            ? '/static/images/default-avatar.png'\n                            : currentUser.avatar\n                        }\n                        alt='user-img'\n                        className='img-circle'\n                        style={{\n                          height: '40px',\n                          width: '40px',\n                          objectFit: 'cover',\n                          border: '2px solid #80808036'\n                        }}\n                      />\n                    </DropdownToggle>\n                    <DropdownMenu className='th-20 th-pd-0' right>\n                      <DropdownItem className='th-pd-0'>\n                        <Link route='/my-profiles'>\n                          <a\n                            href='javascript:void(0)'\n                            aria-expanded='false'\n                            className='th-21'\n                          >\n                            <div className='th-container'>\n                              <img\n                                src='/static/images/New/new-profile.png'\n                                alt=''\n                              />\n                              <div className='hint-big'>Profile</div>\n                              <div className='hint'>Public profile</div>\n                            </div>\n                          </a>\n                        </Link>\n                      </DropdownItem>\n                      <DropdownItem className='th-pd-0'>\n                        <Link route='/my-settings'>\n                          <a\n                            href='javascript:void(0)'\n                            aria-expanded='false'\n                            className='th-21'\n                          >\n                            <div className='th-container'>\n                              <img\n                                src='/static/images/New/new-sitting.png'\n                                alt=''\n                              />\n                              <div className='hint-big'>Settings</div>\n                              <div className='hint'>Account settings</div>\n                            </div>\n                          </a>\n                        </Link>\n                      </DropdownItem>\n                      <DropdownItem className='th-pd-0'>\n                        <Link route='https://intercom.help/link-brokerages/en/'>\n                          <a target='_blank' className='th-21'>\n                            <div className='th-container'>\n                              <img\n                                src='/static/images/New/support.png'\n                                alt=''\n                              />\n                              <div className='hint-big'>Support</div>\n                              <div className='hint'>Help center</div>\n                            </div>\n                          </a>\n                        </Link>\n                      </DropdownItem>\n                      <DropdownItem\n                        disabled\n                        className='th-pd-0 border-top border-bottom'\n                      >\n                        <div\n                          className='th-color-blue d-flex justify-content-between'\n                          style={{ padding: '17px 20px' }}\n                        >\n                          <span className='th-font-w-5'>\n                            Turn on Notifications\n                          </span>\n                          <span className='custom-switch'>\n                            <input\n                              type='checkbox'\n                              className='custom-control-input new-cus'\n                              id='customSwitches'\n                              checked={this.state.statusNotification}\n                              onChange={() => this._changeStatusNotification()}\n                              readOnly\n                            />\n                            <label\n                              className='custom-control-label new-lab'\n                              htmlFor='customSwitches'\n                            />\n                          </span>\n                        </div>\n                      </DropdownItem>\n                      <DropdownItem\n                        className='th-pd-0'\n                        style={{ height: '64px' }}\n                        onClick={this._logout}\n                      >\n                        <a\n                          href='javascript:void(0)'\n                          aria-expanded='false'\n                          className='th-21'\n                        >\n                          <div className='th-container'>\n                            <img\n                              src='/static/images/New/new-logout.png'\n                              alt=''\n                            />\n                            <div className='hint-big'>Logout</div>\n                          </div>\n                        </a>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          {this._renderModalWelcome()}\n          {welcomeInvitation && this._renderModalInfo()}\n          {/* {this._renderModalAddEventCalendar()} */}\n        </header>\n      )\n    }\n\n    _setWithSideBarAnimation = () => {\n      const data = document.getElementById('left-sidebar')\n      if (data) {\n        data.classList.toggle('animation-display')\n      }\n    }\n\n    _renderCoutNewNotification = value => {\n      if (this.state.statusNotification && value !== 0) {\n        return <div className='notificationBell_new'>{value}</div>\n      } else {\n        return null\n      }\n    }\n\n    _renderCoutAssignNotification = value => {\n      if (this.state.statusNotification && value !== 0) {\n        return <div className='notificationBell_new'>{value}</div>\n      } else {\n        return null\n      }\n    }\n    _changeStatusNotification = () => {\n      if (this.state.newNotification !== 0) {\n        let req = this.state.notification.map((item, index) => {\n          try {\n            if (index < this.state.newNotification) {\n              return notificationService.setWatchedNotification(item.id)\n            }\n          } catch (e) {\n            throw e\n          }\n          this.setState({ newNotification: 0 })\n        })\n        Promise.all(req)\n      }\n    }\n\n    _changeStatus = async message => {\n      const { listMess } = this.state\n      const data = listMess.filter(x => x.senderId === message.senderId)\n      if (data && data.length > 0) {\n        let req = data.map((item, index) => {\n          try {\n            if (index < data.length) {\n              notificationService.setWatchedNotification(item.id)\n              this._getMessage()\n            }\n          } catch (e) {\n            throw e\n          }\n        })\n        Promise.all(req)\n      }\n    }\n\n    _changeStatusNotificationNews = async news => {\n      if (news && news.isRead === false) {\n        try {\n          await notificationService.setWatchedNotification(news.id)\n          this._getNews()\n        } catch (e) {\n          throw e\n        }\n      }\n    }\n\n    _changeStatusNotificationAssign = async assign => {\n      if (assign && assign.isRead === false) {\n        try {\n          await notificationService.setWatchedNotification(assign.id)\n          this._getAssign()\n        } catch (e) {\n          throw e\n        }\n      }\n    }\n\n    _renderNotification = (data, index) => {\n      return (\n        <DropdownItem key={index}>\n          <Link route={data.data.internalLink}>\n            <div className='font-12 p-2'>\n              <div className='d-flex justify-content-between'>\n                <div className='font-weight-bold text-capitalize font-14'>\n                  {getNotificationTitle(data.type)}\n                </div>\n                <div className='ml-5 text-right '>\n                  {`${moment(data.createdAt).format('MMM Do YY')}`}\n                </div>\n              </div>\n              <div style={{ whiteSpace: 'normal', textAlign: 'left' }}>\n                {data.data.value}\n              </div>\n            </div>\n          </Link>\n        </DropdownItem>\n      )\n    }\n\n    _viewImageNews = data => {\n      switch (data) {\n        case NewsType.E_COMMERCE:\n          return (\n            <div\n              className='rounded-circle d-flex align-items-center justify-content-center col-2 px-0'\n              style={{\n                width: '50px',\n                minWidth: '50px',\n                maxWidth: '50px',\n                height: '50px',\n                backgroundColor: '#2F80ED'\n              }}\n            >\n              <img\n                className=''\n                src='/static/images/New/type-eCom.png'\n                style={{ width: '50%', height: '50%' }}\n              />\n            </div>\n          )\n        case NewsType.REAL_ESTATE:\n          return (\n            <div\n              className='rounded-circle d-flex align-items-center justify-content-center col-2 px-0'\n              style={{\n                width: '50px',\n                height: '50px',\n                minWidth: '50px',\n                maxWidth: '50px',\n                backgroundColor: '#446AEB'\n              }}\n            >\n              <img\n                className=''\n                src='/static/images/New/type-real.png'\n                style={{ width: '50%', height: '50%' }}\n              />\n            </div>\n          )\n        case NewsType.OTHERS:\n          return (\n            <div\n              className='rounded-circle d-flex align-items-center justify-content-center col-2 px-0'\n              style={{\n                width: '50px',\n                height: '50px',\n                minWidth: '50px',\n                maxWidth: '50px',\n                backgroundColor: '#DFDFDF'\n              }}\n            >\n              <img\n                className=''\n                src='/static/images/New/type-order.png'\n                style={{ width: '50%', height: '50%' }}\n              />\n            </div>\n          )\n        default:\n          break\n      }\n    }\n\n    _renderNotificationMessages = (data, index) => {\n      return (\n        <DropdownItem key={index} style={{ maxWidth: '360px' }}>\n          <Link route={`/message?partyId=${data.data.internalLink}`}>\n            <div\n              className='font-12 message__list'\n              onClick={() => {\n                this._changeStatus(data)\n              }}\n            >\n              <div className='message__item-new'>\n                <div className='message__item-text row mx-0'>\n                  <div className='col-2 px-0'>\n                    <img\n                      className='rounded-circle mr-2'\n                      src={\n                        data.data.avatar !== 'null'\n                          ? data.data.avatar\n                          : '/static/images/default-avatar.png'\n                      }\n                    />\n                  </div>\n\n                  <div className='gr-text col-10 px-0'>\n                    <div className='gr-top'>\n                      <h5>{data.data.fullName}</h5>\n                      <p className='message__item-time text-right'>\n                        <span className='th-color-blue th-font-w-5'>\n                          {`${moment(data.createdAt).fromNow()}`}\n                        </span>\n                      </p>\n                    </div>\n\n                    <p className='message__overflow th-font-w-5 text-black-50 test'>\n                      {data.data.value}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* </a> */}\n          </Link>\n        </DropdownItem>\n      )\n    }\n\n    _renderNotificationNews = (data, index) => {\n      return (\n        <DropdownItem key={index} style={{ maxWidth: '360px' }}>\n          <Link route={`/message?newsId=${data.data.internalLink}`}>\n            <div\n              className='font-12 message__list'\n              onClick={() => this._changeStatusNotificationNews(data)}\n            >\n              <div className='message__item-new'>\n                <div className='message__item-text row mx-0'>\n                  {this._viewImageNews(data.data.type)}\n                  <div className='gr-text col-10 pr-0'>\n                    <div className='gr-top row mx-0'>\n                      <h5\n                        className={\n                          data.isRead === false\n                            ? 'col-6 px-0 th-flow'\n                            : 'col-6 px-0 text-black-50 th-flow'\n                        }\n                      >\n                        {data.data.title}\n                      </h5>\n                      <p className='message__item-time text-right w-100 col-6 pr-0'>\n                        <span\n                          className={\n                            data.isRead === false\n                              ? 'th-color-blue th-font-w-5'\n                              : 'text-black-50 th-font-w-5'\n                          }\n                        >\n                          {`${moment(data.createdAt).fromNow()}`}\n                        </span>\n                      </p>\n                    </div>\n\n                    <p\n                      className={\n                        data.isRead === false\n                          ? 'message__overflow th-font-w-5 test w-100'\n                          : 'message__overflow th-font-w-5 text-black-50 test w-100'\n                      }\n                    >\n                      {data.data.content}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* </a> */}\n          </Link>\n        </DropdownItem>\n      )\n    }\n\n    _renderNotificationAssign = (data, index) => {\n      return (\n        <DropdownItem key={index} style={{ maxWidth: '360px' }}>\n          <Link route={`${data.data.internalLink}`}>\n            <div\n              className='font-12 message__list'\n              onClick={() => {\n                this._changeStatusNotificationAssign(data)\n              }}\n            >\n              <div className='message__item-new'>\n                <div className='message__item-text'>\n                  <img\n                    className='rounded-circle mr-2'\n                    src={\n                      data.data.image !== 'undefined'\n                        ? data.data.image\n                        : '/static/images/default-avatar.png'\n                    }\n                  />\n                  <div className='gr-text' style={{ width: '82%' }}>\n                    <div className='gr-top'>\n                      <h5\n                        style={{\n                          overflow: 'hidden',\n                          whiteSpace: 'nowrap',\n                          textOverflow: 'ellipsis'\n                        }}\n                        className={\n                          data.isRead === false ? null : 'text-black-50'\n                        }\n                      >\n                        {data.data.value}\n                      </h5>\n                    </div>\n                    <p className='message__overflow th-font-w-5 text-black-50 test'>\n                      <span\n                        className={\n                          data.isRead === false\n                            ? 'th-color-blue th-font-w-5'\n                            : 'text-black-50 th-font-w-5'\n                        }\n                      >\n                        {`${moment(data.createdAt).fromNow()}`}\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* </a> */}\n          </Link>\n        </DropdownItem>\n      )\n    }\n\n    _renderPageHeaderText = () => {\n      const {\n        isCoordinator,\n        partyTarget,\n        currentTransactionStatus\n      } = this.props\n      const { selectedViewParties } = this.state\n\n      return (\n        <div className='col-new' style={{ width: '100%' }}>\n          {this.props.headerText === 'Edit Agent' && (\n            <div className='bt bt--calendar title-task mt-4 mb-4 d-flex align-items-center'>\n              <Link route={`/manage-agents`}>\n                <span\n                  className='mr-3'\n                  style={{ cursor: 'pointer', fontSize: '20px' }}\n                >\n                  <i className='fas fa-arrow-left' />\n                </span>\n              </Link>\n              {this.props.headerText}\n            </div>\n          )}\n          {this.props.headerText === \"Agent's Transactions\" && (\n            <div className='bt bt--calendar title-task mt-4 mb-4 d-flex align-items-center'>\n              <Link route={`/manage-agents`}>\n                <span\n                  className='mr-3'\n                  style={{ cursor: 'pointer', fontSize: '20px' }}\n                >\n                  <i className='fas fa-arrow-left' />\n                </span>\n              </Link>\n              {this.props.headerText}\n            </div>\n          )}\n          {this.props.headerText === 'Transactions' && (\n            <div className='main-layout-header'>\n              <div className='main-layout-wrapper'>\n                <div className='page-heading'>\n                  <div className='page-heading-button'>\n                    <h2>{this.props.headerText}</h2>\n                    {this.props.currentUser.roles[0].name === 'user' ? null : (\n                      <div className='page-button-new'>\n                        <a\n                          onClick={() => {\n                            this.setState({ isToggleModalNewTransaction: true })\n                          }}\n                          href='#'\n                        >\n                          New Transaction\n                        </a>\n                      </div>\n                    )}\n                  </div>\n                  <p id='titleTr' className='title-trs'>\n                    Active property transaction folder.\n                  </p>\n                </div>\n                <div className='page-tab'>\n                  <div className='page-tab-menu'>\n                    <div\n                      id='a'\n                      className='page-icon current'\n                      onClick={this._selectView}\n                    >\n                      In Progress\n                    </div>\n                    <div className='page-icon' onClick={this._selectView}>\n                      Complete\n                    </div>\n                    <div className='page-icon' onClick={this._selectView}>\n                      Archived\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          {this.props.headerText === 'Calendar' && (\n            <div className='bt bt--calendar title-task mt-4 mb-4'>\n              {this.props.headerText}\n            </div>\n          )}\n          {this.props.headerText === 'Manage Agents' && (\n            <div className='bt bt--calendar title-task mt-4 mb-4'>\n              {this.props.headerText}\n            </div>\n          )}\n          {this.props.headerText === 'Tasks' && (\n            <div className='bt title-task mt-4 mb-4'>\n              {this.props.headerText}\n            </div>\n          )}\n          {this.props.headerText === 'User Profile' && (\n            <div className='main-layout-header'>\n              <div className='main-layout-wrapper'>\n                <div\n                  className='page-heading'\n                  style={{ paddingBottom: '24px', marginBottom: '0px' }}\n                >\n                  <h2\n                    style={{\n                      fontWeight: '500',\n                      fontSize: '34px'\n                    }}\n                  >\n                    {this.props.headerText}\n                  </h2>\n                </div>\n              </div>\n            </div>\n          )}\n          {this.props.headerText === 'Inbox' && (\n            <div className='bt title-task mt-4 mb-4'>\n              {this.props.headerText}\n              <p className='title-trs-v2'>Inbox, notifications, messages</p>\n            </div>\n          )}\n          {this.props.headerText === 'Contacts' && (\n            <div className='bt bt--contact title-task mb-4 mt-4'>\n              {this.props.headerText}\n            </div>\n          )}\n          {this.props.headerText === 'Dashboard' && (\n            <div className='main-layout-header'>\n              <div className='main-layout-wrapper'>\n                <div className='page-heading'>\n                  <div className='page-heading-button'>\n                    <h2>{this.props.headerText}</h2>\n                  </div>\n                </div>\n                <div className='page-tab'>\n                  <div className='page-tab-menu'>\n                    <div\n                      id='a'\n                      className='page-icon current'\n                      onClick={this._selectViewDashboard}\n                    >\n                      Main\n                    </div>\n                    {isCoordinator ? (\n                      <div\n                        className='page-icon page-icon--dashboard'\n                        onClick={this._selectViewDashboard}\n                      >\n                        Closed Transactions\n                      </div>\n                    ) : (\n                      <div\n                        className='page-icon page-icon--dashboard'\n                        onClick={this._selectViewDashboard}\n                      >\n                        Real Estate\n                      </div>\n                    )}\n\n                    <div\n                      className='page-icon page-icon--dashboard'\n                      onClick={this._selectViewDashboard}\n                    >\n                      Referrals\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          {/* {this.props.headerText === 'Transaction' && (\n            <div className='bt title-task'>{this.props.headerText}</div>\n          )} */}\n          {this.props.headerText === 'Transaction Parties' && (\n            // <div className='bt title-task'>{this.props.headerText}</div>\n            <div className='main-layout-header'>\n              <div className='main-layout-wrapper'>\n                <div className='page-heading'>\n                  <div className='page-heading-button'>\n                    <h2>Transactions</h2>\n                    <div className='page-button-new'>\n                      {selectedViewParties === 'Main' &&\n                        partyTarget.access === 'full' &&\n                        currentTransactionStatus !==\n                          TransactionStatus.ARCHIVED &&\n                        currentTransactionStatus !==\n                          TransactionStatus.CLOSED && (\n                          <button\n                          className='btn-transaction w-100'\n                          data-toggle='modal'\n                          data-target='#myModal'\n                          onClick={() => {\n                            this.setState({\n                              isShowMemberModal: true\n                            })\n                          }}\n                          style={{ transition: '0.3s' }}\n                        >\n                            Add New Member\n                        </button>\n                      )}\n                      {selectedViewParties === 'My Documents' &&\n                        currentTransactionStatus !==\n                          TransactionStatus.ARCHIVED &&\n                        currentTransactionStatus !==\n                          TransactionStatus.CLOSED && (\n                          <button\n                          className='btn-transaction w-100'\n                          data-toggle='modal'\n                          data-target='#myModal'\n                          onClick={() => {\n                            this.setState({\n                              isShowUpdateNewDocumentModal: true\n                            })\n                          }}\n                          style={{ transition: '0.3s' }}\n                        >\n                            Upload document\n                        </button>\n                      )}\n                      {selectedViewParties === 'Envelopes' &&\n                        partyTarget.access === 'full' &&\n                        currentTransactionStatus !==\n                          TransactionStatus.ARCHIVED &&\n                        currentTransactionStatus !==\n                          TransactionStatus.CLOSED && (\n                          <button\n                          className='btn-transaction w-100'\n                          data-toggle='modal'\n                          data-target='#myModal'\n                          onClick={() => {\n                            this.setState({\n                              isToggleEnvelop: true\n                            })\n                          }}\n                          style={{ transition: '0.3s' }}\n                        >\n                            New Envelope\n                        </button>\n                      )}\n                      {selectedViewParties === 'View Details' &&\n                        partyTarget.access === 'full' &&\n                        currentTransactionStatus !==\n                          TransactionStatus.ARCHIVED &&\n                        currentTransactionStatus !==\n                          TransactionStatus.CLOSED && (\n                          <button\n                          className='btn-transaction w-100'\n                          data-toggle='modal'\n                          data-target='#myModal'\n                          onClick={() => {\n                            this.setState({\n                              isShowMemberModal: true\n                            })\n                          }}\n                          style={{ transition: '0.3s' }}\n                        >\n                            Add New Member\n                        </button>\n                      )}\n                    </div>\n\n                    {/* <div className='page-button-new'>\n                      {this.state.selectedView === 'Main' && (\n                        <a href='#'>Add New Member</a>\n                      )}\n                      {this.state.selectedView === 'In progress' && (\n                        <a href='#'>Add New Member</a>\n                      )}\n                      {this.state.selectedView === 'My Documents' && (\n                        <a href='#'>Upload Document</a>\n                      )}\n                      {this.state.selectedView === 'Envelops' && (\n                        <a href='#'>New Envelope</a>\n                      )}\n                    </div> */}\n                  </div>\n                  <div className='group-back'>\n                    {this.props.subHeaderText &&\n                      (this.props.currentParty ? (\n                        <Link route={`/my-transactions`}>\n                          <span\n                            className='mr-3'\n                            style={{ cursor: 'pointer' }}\n                            onClick={async () => {\n                              const { dispatch } = this.props\n                              setTimeout(async () => {\n                                await dispatch(\n                                  authRedux.updateParties({ data: 'Main' })\n                                )\n                              }, 2000)\n                            }}\n                          >\n                            <i className='fas fa-chevron-left' />\n                            Back\n                          </span>\n                        </Link>\n                      ) : (\n                        <Link route='/my-transactions'>\n                          <span className='mr-3' style={{ cursor: 'pointer' }}>\n                            <i className='fas fa-chevron-left' />\n                            Back\n                          </span>\n                        </Link>\n                      ))}\n                  </div>\n                </div>\n                <div className='page-tab'>\n                  <div className='page-tab-menu' style={{ width: '140%' }}>\n                    <div\n                      id='a'\n                      className='page-icon page-icon--parties current'\n                      onClick={this._selectViewParties}\n                    >\n                      Main\n                    </div>\n\n                    <div style={{ display: 'initial', position: 'relative' }}>\n                      <div\n                        className='page-icon page-icon--parties x'\n                        style={{ position: 'relative' }}\n                        onClick={this._selectViewParties}\n                      >\n                        Actions Needed\n                      </div>\n                      {this.state.countDocumentAction > 0 && (\n                        <span\n                          className='d-flex align-items-center justify-content-center'\n                          style={{\n                            position: 'absolute',\n                            top: '-10px',\n                            right: '15px',\n                            width: '24px',\n                            height: '18px',\n                            borderRadius: '41px',\n                            backgroundColor: '#446aeb',\n                            color: '#fff',\n                            fontSize: '10px',\n                            boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n                          }}\n                        >\n                          +{this.state.countDocumentAction}\n                        </span>\n                      )}\n                    </div>\n\n                    <div\n                      className='page-icon page-icon--parties'\n                      onClick={this._selectViewParties}\n                    >\n                      My Documents\n                    </div>\n                    <div\n                      className='page-icon page-icon--parties'\n                      onClick={this._selectViewParties}\n                    >\n                      Envelopes\n                    </div>\n                    <div\n                      className='page-icon page-icon--parties'\n                      onClick={this._selectViewParties}\n                    >\n                      View Details\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          {/* {this.props.subHeaderText && (\n            <h5 className='ml-1 text-truncate'>{this.props.subHeaderText}</h5>\n          )} */}\n        </div>\n      )\n    }\n\n    _selectView = async e => {\n      let active = document.getElementsByClassName('current')\n      let title = document.getElementById('titleTr')\n      ;[...active].forEach(acT => {\n        acT.classList.remove('current')\n      })\n      e.currentTarget.className += ' current'\n      switch (e.currentTarget.textContent) {\n        case 'In Progress':\n          title.innerHTML = 'Active property transaction folder.'\n          break\n        case 'Complete':\n          title.innerHTML = 'Complete transaction list.'\n          break\n        case 'Archived':\n          title.innerHTML = 'Archived transaction list.'\n          break\n\n        default:\n          break\n      }\n      this.setState({\n        selectedView: e.currentTarget.textContent\n      })\n\n      const { dispatch } = this.props\n      await dispatch(\n        authRedux.updateTest({ data: e.currentTarget.textContent })\n      )\n    }\n    // view parties\n    _selectViewParties = async e => {\n      let active = document.getElementsByClassName('current')\n      ;[...active].forEach(acT => {\n        acT.classList.remove('current')\n      })\n      e.currentTarget.className += ' current'\n      this.setState({\n        selectedViewParties: e.currentTarget.textContent\n      })\n      const { dispatch } = this.props\n      await dispatch(\n        authRedux.updateParties({ data: e.currentTarget.textContent })\n      )\n    }\n    _toggleModal = async () => {\n      this.setState({\n        isToggleModalNewTransaction: this.state.isToggleModalNewTransaction\n      })\n      const { dispatch } = this.props\n      await dispatch(\n        authRedux.updateNew({ data: this.state.isToggleModalNewTransaction })\n      )\n    }\n    // view dashboard\n    _selectViewDashboard = async e => {\n      let active = document.getElementsByClassName('current')\n      ;[...active].forEach(acT => {\n        acT.classList.remove('current')\n      })\n      e.currentTarget.className += ' current'\n      this.setState({\n        selectedViewDashboard: e.currentTarget.textContent\n      })\n      const { dispatch } = this.props\n      await dispatch(\n        authRedux.updateDashboard({ data: e.currentTarget.textContent })\n      )\n    }\n    _toggleModal = async () => {\n      this.setState({\n        isToggleModalNewTransaction: this.state.isToggleModalNewTransaction\n      })\n      const { dispatch } = this.props\n      await dispatch(\n        authRedux.updateNew({ data: this.state.isToggleModalNewTransaction })\n      )\n    }\n\n    _logout = async () => {\n      await this.props.dispatch(authRedux.logout())\n      Router.replaceRoute('/login')\n      // await location.reload()\n      if (window.Intercom) {\n        window.Intercom('shutdown')\n      }\n    }\n\n    _renderModalReferralFriend = () => {\n      const { currentUser } = this.props\n      return (\n        <Modal\n          isOpen={this.state.isToggleReferModal}\n          toggle={() => this.setState({ isToggleReferModal: false })}\n          id='invite-party-modal'\n        >\n          <div className='modal-header modal-header--change'>\n            <div className='text-center w-100'>\n              <h5\n                className='modal-title text-uppercase font-weight-bold'\n                id='exampleModalLabel'\n              >\n                Refer a friend\n              </h5>\n              <small>Invite friends to Link application</small>\n            </div>\n            <button\n              type='button'\n              className='close bg-transparent'\n              data-dismiss='modal'\n              onClick={() => this.setState({ isToggleReferModal: false })}\n            >\n              &times;\n            </button>\n          </div>\n          <Formik\n            initialValues={{\n              email: ''\n            }}\n            onSubmit={async (values, actions) => {\n              actions.setSubmitting(true)\n              const existedEmail = await userService.findUserByEmail(\n                values.email\n              )\n              if (!existedEmail) {\n                const invitedEmail = await userService.getInvitationByEmail(\n                  values.email\n                )\n                if (invitedEmail) {\n                  await userService.deleteExistedInvitation(invitedEmail.id)\n                }\n                userService.sendMailToReferFriend(currentUser.id, values.email)\n                actions.setSubmitting(false)\n                this.setState({ isToggleReferModal: false })\n                toastr.success('Sended successfully!')\n              } else {\n                toastr.warning('Already have user with this email!')\n                actions.setSubmitting(false)\n              }\n            }}\n            validate={values => {\n              let error = {}\n              const regEmail = new RegExp(\n                '^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@' +\n                  '[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'\n              )\n              if (values.email === '') {\n                error.referError = `Email is required`\n              } else if (!regEmail.test(values.email)) {\n                error.referError = 'Please enter the correct email format'\n              }\n\n              return error\n            }}\n          >\n            {({\n              values,\n              isValid,\n              errors,\n              isSubmitting,\n              handleSubmit,\n              handleChange\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <div className='modal-body px-5 mx-2'>\n                  <div>\n                    <div className='row pt-3'>\n                      <div className='col-12'>\n                        <div className='form-group'>\n                          <input\n                            className='form-control'\n                            placeholder='Email Address'\n                            name='email'\n                            onChange={handleChange}\n                            value={values.email}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {errors.referError && (\n                    <div className='text-danger text-center'>\n                      {errors.referError}\n                    </div>\n                  )}\n                  <div className='text-center my-5'>\n                    <button\n                      disabled={!isValid || isSubmitting}\n                      type='submit'\n                      className='btn bg-info text-white px-5'\n                    >\n                      {isSubmitting && (\n                        <span className='spinner-border spinner-border-sm mr-2' />\n                      )}\n                      Send Invite\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </Formik>\n        </Modal>\n      )\n    }\n\n    _renderModalWelcome = () => {\n      const { welcomeInvitation } = this.props\n      if (!this.state.isToggleModalWelcome || !welcomeInvitation) {\n        return null\n      }\n\n      return (\n        <Modal isOpen={this.state.isToggleModalWelcome}>\n          <div className='modal-header modal-header--change border-top-0'>\n            <div className='text-center w-100 '>\n              <h1 className='modal-title text-info mb-3'>Welcome to Link</h1>\n              <p>\n                {`You has been added as the \"${getRoleLabel(\n                  welcomeInvitation.role\n                )}\" for the transaction: ${this._getTransactionFullAddress(\n                  welcomeInvitation.transaction\n                )}`}\n              </p>\n              {welcomeInvitation.access === TransactionAccessType.FULL ? (\n                <p>\n                  Once your account is created, you will have full access to all\n                  documents and parties that are relevant to this transaction.\n                  <br />\n                  <br />\n                  With Full Access you will be able to view all documents,\n                  upload documents, <br />\n                  assign signors on documents you upload, and message all other\n                  parties <br />\n                  involved.\n                </p>\n              ) : (\n                <p>\n                  Once your account is created, you will have “Upload Only”\n                  capabilities for this transaction.\n                  <br />\n                  <br />\n                  With “Upload Only” you will be able to upload all documents\n                  relevant to this transaction. All parties will be notified\n                  once you upload any documents.\n                </p>\n              )}\n              <p>\n                To finish create your profile and access the transaction press\n                continue below.\n              </p>\n            </div>\n            {/* <button\n              type='button'\n              className='close bg-transparent'\n              data-dismiss='modal'\n              // onClick={this._toggleModal}\n            >\n              &times;\n            </button> */}\n          </div>\n          <div className='modal-body border-top-0 text-center'>\n            <button\n              className='btn btn-info text-white py-2 px-5'\n              onClick={this._showPartyInfoForm}\n            >\n              Continue\n            </button>\n          </div>\n        </Modal>\n      )\n    }\n\n    _showPartyInfoForm = () => {\n      this.setState({\n        isToggleModalWelcome: false,\n        isToggleModalInfo: true\n      })\n    }\n\n    _onSubmitModalInfo = async (values, action) => {\n      const { currentUser, welcomeInvitation } = this.props\n      const { setSubmitting } = action\n\n      try {\n        const {\n          firstName,\n          lastName,\n          email,\n          phoneNumber,\n          company,\n          licenseNumber\n        } = values\n\n        setSubmitting(true)\n\n        await transactionService.updateTransactionPartyInfo(\n          {\n            userId: currentUser.id,\n            transactionId: welcomeInvitation.transactionId\n          },\n          {\n            firstName,\n            lastName,\n            email,\n            phoneNumber,\n            company,\n            licenseNumber\n          }\n        )\n\n        setSubmitting(false)\n        toastr.success('Your transaction profile has been updated')\n        this.setState({ isToggleModalInfo: false })\n      } catch (e) {\n        toastr.error(e.message)\n        setSubmitting(false)\n      }\n    }\n\n    _renderModalInfo = () => {\n      const { welcomeInvitation, currentUser } = this.props\n\n      return (\n        <Modal\n          isOpen={this.state.isToggleModalInfo}\n          toggle={() => this.setState({ isToggleModalInfo: false })}\n          id='create-transaction-party-profile-modal'\n          className='th-16'\n        >\n          <div className='modal-header modal-header--change' id='bg-gr'>\n            <div className='text-center w-100'>\n              <h5 className='modal-title new-add' id='exampleModalLabel'>\n                Add Your Information\n              </h5>\n            </div>\n            <button\n              type='button'\n              className='close bg-transparent'\n              data-dismiss='modal'\n              onClick={() => this.setState({ isToggleModalInfo: false })}\n            >\n              &times;\n            </button>\n          </div>\n          <Formik\n            initialValues={{\n              firstName: currentUser.firstName,\n              lastName: currentUser.lastName,\n              email: currentUser.email,\n              phoneNumber: welcomeInvitation.phoneNumber,\n              company: '',\n              licenseNumber: ''\n            }}\n            onSubmit={this._onSubmitModalInfo}\n            validate={values => {\n              let error = {}\n              if (\n                welcomeInvitation.role !== 'seller' &&\n                welcomeInvitation.role !== 'buyer'\n              ) {\n                if (\n                  values.firstName === '' ||\n                  values.lastName === '' ||\n                  values.email === '' ||\n                  values.phoneNumber.length < 9 ||\n                  values.company === ''\n                ) {\n                  error.details = `${getRoleLabel(\n                    welcomeInvitation.role\n                  )} details are required`\n                }\n              } else {\n                if (\n                  values.firstName.length < 1 ||\n                  values.lastName.length < 1 ||\n                  values.email.length < 1 ||\n                  values.phoneNumber.length < 9\n                ) {\n                  error.details = `${getRoleLabel(\n                    welcomeInvitation.role\n                  )} details are required`\n                }\n              }\n\n              return error\n            }}\n          >\n            {({\n              values,\n              errors,\n              isValid,\n              isSubmitting,\n              handleSubmit,\n              handleChange\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <div className='modal-body px-sm-5 mx-2'>\n                  <div>\n                    <h4 className='text-center'>\n                      {getRoleLabel(welcomeInvitation.role)}\n                    </h4>\n                    <div className='row pt-3'>\n                      <div className='col-12 col-sm-6'>\n                        <div className='form-group'>\n                          <label className='tittle-mini-ver'>First Name</label>\n                          <input\n                            className='form-control'\n                            placeholder='First Name'\n                            name='firstName'\n                            onChange={handleChange}\n                            value={values.firstName}\n                            autoFocus\n                          />\n                        </div>\n                      </div>\n                      <div className='col-12 col-sm-6'>\n                        <div className='form-group'>\n                          <label className='tittle-mini-ver'>Last Name</label>\n                          <input\n                            className='form-control'\n                            placeholder='Last Name'\n                            name='lastName'\n                            onChange={handleChange}\n                            value={values.lastName}\n                          />\n                        </div>\n                      </div>\n                      <div className='col-12 col-sm-6'>\n                        <div className='form-group'>\n                          <label className='tittle-mini-ver'>Email </label>\n                          <input\n                            disabled\n                            className='form-control'\n                            placeholder='Email Address'\n                            name='email'\n                            onChange={handleChange}\n                            value={values.email}\n                          />\n                        </div>\n                      </div>\n                      <div className='col-12 col-sm-6'>\n                        <div className='form-group'>\n                          <label className='tittle-mini-ver'>\n                            Phone Number{' '}\n                          </label>\n                          <PhoneInput\n                            country={'us'}\n                            enableSearch\n                            onChange={value => {\n                              handleChange({\n                                target: { name: 'phoneNumber', value }\n                              })\n                            }}\n                            value={values.phoneNumber}\n                            placeholder='Phone Number'\n                            className='form-control'\n                          />\n                        </div>\n                      </div>\n                      {welcomeInvitation.role !== 'seller' &&\n                        welcomeInvitation.role !== 'buyer' && (\n                        <Fragment>\n                          <div className='col-12 col-sm-6'>\n                            <div className='form-group'>\n                              <label className='tittle-mini-ver'>\n                                  Company\n                              </label>\n                              <input\n                                className='form-control'\n                                placeholder='Company'\n                                name='company'\n                                onChange={handleChange}\n                                value={values.company}\n                              />\n                            </div>\n                          </div>\n                          {welcomeInvitation.access ===\n                            TransactionAccessType.FULL ? (\n                              <div className='col-12 col-sm-6'>\n                                <div className='form-group'>\n                                  <label className='tittle-mini-ver'>\n                                    License Number{' '}\n                                  </label>\n                                  <input\n                                    className='form-control'\n                                    placeholder='License Number'\n                                    name='licenseNumber'\n                                    onChange={handleChange}\n                                    value={values.licenseNumber}\n                                  />\n                                </div>\n                              </div>\n                            ) : (\n                              <></>\n                            )}\n                        </Fragment>\n                      )}\n                    </div>\n                    {errors.details && (\n                      <div className='text-danger text-center'>\n                        {errors.details}\n                      </div>\n                    )}\n                  </div>\n                  <div className='text-center my-5'>\n                    <button\n                      disabled={errors.details}\n                      type='submit'\n                      className='btn btn-info text-white py-2 px-5'\n                    >\n                      {isSubmitting && (\n                        <span className='spinner-border spinner-border-sm mr-2' />\n                      )}\n                      Access Transaction\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </Formik>\n        </Modal>\n      )\n    }\n\n    _getTransactionFullAddress = transaction => {\n      return `${transaction.address}`\n    }\n\n    _changeStatusNotification = async () => {\n      try {\n        const status = !this.state.statusNotification\n        await userService.updateStatusNotification(\n          this.props.currentUser.id,\n          status\n        )\n        await this.props.dispatch(authRedux.updateStatusNotifi(status))\n        this.setState({\n          statusNotification: status\n        })\n      } catch (error) {\n        toastr.error(error)\n      }\n    }\n  }\n\n  const mapStateToProps = state => ({\n    currentUser: selector.getLoginUser(state),\n    selectedView: selector.getTest(state),\n    selectedViewParties: selector.getViewParties(state),\n    selectedViewDashboard: selector.getViewDashboard(state),\n    isToggleModalNewTransaction: selector.getNewTransaction(state)\n  })\n  return compose(\n    connect(mapStateToProps),\n    withRouter,\n    withI18next(['user', 'common'])\n  )(UserWrapper)\n}\n\nexport default userOnly\n"]},"metadata":{},"sourceType":"module"}