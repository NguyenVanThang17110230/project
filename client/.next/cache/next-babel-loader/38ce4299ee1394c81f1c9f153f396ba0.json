{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal } from 'reactstrap';\nimport moment from 'moment';\nimport NumberFormat from 'react-number-format';\nimport classnames from 'classnames';\nimport toastr from 'toastr';\nimport { transactionService, commissionService } from '../../services';\nimport { commissionType } from '../../../common/models/CashBalance';\nimport { TransactionRole } from '../../../common/models/Transaction';\nvar AGENT_SPLIT = 0.9;\nvar TRANSACTION_COST = 350;\nvar ERROR_AND_OMISSION = 40;\n\nvar InputForm = function InputForm(_ref) {\n  var label = _ref.label,\n      isCenterLabel = _ref.isCenterLabel,\n      isDisable = _ref.isDisable,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      placeholder = _ref.placeholder,\n      description = _ref.description;\n  return React.createElement(\"div\", {\n    className: classnames('form-group', {\n      'text-center': isCenterLabel\n    })\n  }, label && React.createElement(\"label\", {\n    className: \"h5 font-weight-bold text-muted\"\n  }, label), React.createElement(NumberFormat, {\n    thousandSeparator: true,\n    disabled: !!isDisable,\n    className: \"form-control\",\n    name: name,\n    onValueChange: onChange,\n    value: value,\n    placeholder: placeholder,\n    prefix: '$ ',\n    allowNegative: false\n  }), React.createElement(\"div\", {\n    className: \"text-muted\"\n  }, React.createElement(\"small\", null, description)));\n};\n\nvar PercentInputForm = function PercentInputForm(_ref2) {\n  var label = _ref2.label,\n      name = _ref2.name,\n      value = _ref2.value,\n      handleChange = _ref2.handleChange;\n  return React.createElement(\"div\", {\n    className: \"form-group\"\n  }, label && React.createElement(\"label\", {\n    className: \"h5 font-weight-bold text-muted\"\n  }, label), React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    min: 0,\n    max: 1,\n    step: \"0.1\",\n    name: name,\n    onChange: handleChange,\n    value: value\n  }));\n};\n\nvar CloseTransactionModal = function CloseTransactionModal(_ref3) {\n  var isShow = _ref3.isShow,\n      toggle = _ref3.toggle,\n      transactionId = _ref3.transactionId,\n      currentUserId = _ref3.currentUserId,\n      transactionAgents = _ref3.transactionAgents,\n      refetchData = _ref3.refetchData;\n  var isAgents = transactionAgents.length > 1;\n  var initValue = !isAgents ? {\n    agentCommission: 0,\n    agentSplit: AGENT_SPLIT\n  } : {\n    buyerAgentCommission: 0,\n    sellerAgentCommission: 0,\n    buyerAgentSplit: AGENT_SPLIT,\n    sellerAgentSplit: AGENT_SPLIT,\n    buyerRatio: 0.5,\n    sellerRatio: 0.5\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var _useState3 = useState(_objectSpread({\n    id: null,\n    totalCommission: null,\n    regionalSplit: 0,\n    referralCost: 0,\n    dateClosing: moment(_Date$now()).format('YYYY-MM-DD')\n  }, initValue)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      values = _useState4[0],\n      setValues = _useState4[1];\n\n  var calcAgentSplit = function calcAgentSplit(agentCommission, totalCommission, ratio) {\n    if (!isAgents) {\n      // Agent Split = (Agent's commission + Transaction Cost + Errors and Omission)/Total Commission\n      return _parseFloat(((agentCommission + TRANSACTION_COST + ERROR_AND_OMISSION) / totalCommission).toFixed(1));\n    } else {\n      // Agent's Commission (Seller's Agent) = (Total Commission * Ratio of Seller's Agent * Agent's Spilt of Seller's Agent) - (Transaction Cost + Errors and Omission)\n      // Agent's Commission (Buyer's Agent) = (Total Commission * Ratio of Buyer's Agent * Agent's Spilt of Buyer's Agent) - (Transaction Cost + Errors and Omission)\n      return _parseFloat(((agentCommission + TRANSACTION_COST + ERROR_AND_OMISSION) / (totalCommission * ratio)).toFixed(1));\n    }\n  };\n\n  var calcAgentCommission = function calcAgentCommission(totalCommission, agentSplit, ratio) {\n    if (!agentSplit || agentSplit <= 0) return 0;\n    var temp = 0; // 1 Agent\n\n    if (!isAgents) {\n      // Agent's commission = (Total Commission * Agent Split) - (Transaction Cost + Errors and Omission)\n      temp = Math.round(totalCommission * agentSplit - (TRANSACTION_COST + ERROR_AND_OMISSION));\n    } else {\n      // 2 Agents\n      // Agent's Commission (Seller's Agent) = (Total Commission * Ratio of Seller's Agent  * Agent's Spilt of Seller's Agent) - (Transaction Cost + Errors and Omission)\n      // Agent's Commission (Buyer's Agent) = (Total Commission * Ratio of Buyer's Agent  * Agent's Spilt of Buyer's Agent) - (Transaction Cost + Errors and Omission)\n      temp = Math.round(totalCommission * agentSplit * ratio - (TRANSACTION_COST + ERROR_AND_OMISSION));\n    }\n\n    return temp > 0 ? temp : 0;\n  }; // handle regional split(temporarily closed)\n\n\n  var calcRegionalSplit = function calcRegionalSplit(totalCommission, agentCommission, referralCost, sellerAgentCommission, buyerAgentCommission) {\n    var temp = 0; // 1 Agent\n    // if (!isAgents) {\n    //   // Regional split = (Total commission - Agent's commission - Transaction cost - Errors and omission - Referral cost) * 0.6\n    //   temp = Math.round(\n    //     (totalCommission -\n    //       agentCommission -\n    //       TRANSACTION_COST -\n    //       ERROR_AND_OMISSION -\n    //       referralCost) *\n    //       0.6\n    //   )\n    // } else {\n    //   // 2 Agents\n    //   // Regional Split = (Total Commission - Agent's Commission of Seller's Agent - Agent's Commission of Buyer's Agent - 2*Transaction Cost - 2*Errors and Omission - Referral Cost of Seller's Agent - Referral Cost of Buyer's Agent) * 0.6\n    //   temp = Math.round(\n    //     (totalCommission -\n    //       sellerAgentCommission -\n    //       buyerAgentCommission -\n    //       2 * TRANSACTION_COST -\n    //       2 * ERROR_AND_OMISSION -\n    //       referralCost) *\n    //       0.6\n    //   )\n    // }\n\n    return temp > 0 ? temp : 0;\n  };\n\n  var fetchData =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var transactionCommission, userCommission, tempData, agentCommission, allCommission;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return commissionService.findByTransactionId(transactionId);\n\n            case 2:\n              transactionCommission = _context.sent;\n              _context.next = 5;\n              return commissionService.getCommissionByTransaction(transactionId);\n\n            case 5:\n              userCommission = _context.sent;\n\n              if (!transactionCommission) {\n                _context.next = 19;\n                break;\n              }\n\n              tempData = {}; // 1 Agent\n\n              if (isAgents) {\n                _context.next = 14;\n                break;\n              }\n\n              // Regional split = (Total commission - Agent's commission - Transaction cost - Errors and omission - Referral cost) * 0.6\n              // ==> Agent's commission =  Total commission - Regional split / 0.6 - Transaction cost - Errors and omission - Referral cost\n              // const agentCommission =\n              //   transactionCommission.totalCommission -\n              //   transactionCommission.regionalSplit / 0.6 -\n              //   TRANSACTION_COST -\n              //   ERROR_AND_OMISSION -\n              //   values.referralCost\n              agentCommission = userCommission[0].value;\n              tempData.agentSplit = calcAgentSplit(agentCommission, transactionCommission.totalCommission);\n              tempData.agentCommission = agentCommission;\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.next = 16;\n              return commissionService.getCommissionByTransaction(transactionId);\n\n            case 16:\n              allCommission = _context.sent;\n              transactionAgents.forEach(function (party) {\n                var item = allCommission.find(function (commission) {\n                  return commission.userId === party.userId;\n                });\n\n                if (item) {\n                  var agentSplit = calcAgentSplit(item.value, transactionCommission.totalCommission, item.ratio);\n\n                  if (party.role === TransactionRole.SELLER_AGENT) {\n                    tempData.sellerAgentSplit = agentSplit;\n                    tempData.sellerAgentCommission = item.value;\n                    tempData.sellerRatio = item.ratio;\n                  }\n\n                  if (party.role === TransactionRole.BUYING_AGENT) {\n                    tempData.buyerAgentSplit = agentSplit;\n                    tempData.buyerAgentCommission = item.value;\n                    tempData.buyerRatio = item.ratio;\n                  }\n                }\n              });\n\n            case 18:\n              setValues(_objectSpread({}, values, tempData, {\n                id: transactionCommission.id,\n                totalCommission: transactionCommission.totalCommission,\n                regionalSplit: transactionCommission.regionalSplit,\n                dateClosing: transactionCommission.dateClosing\n              }));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var handleChangeTotalCommission = function handleChangeTotalCommission(e) {\n    var totalCommission = e.floatValue;\n    var tempData = {};\n    var regionalSplit = values.regionalSplit; // 1 Agent\n\n    if (!isAgents) {\n      var agentCommission = calcAgentCommission(totalCommission, values.agentSplit);\n      regionalSplit = calcRegionalSplit(totalCommission, agentCommission, values.referralCost);\n      tempData = {\n        agentCommission: agentCommission\n      };\n    } else {\n      // 2 Agents\n      var sellerAgentCommission = calcAgentCommission(totalCommission, values.sellerAgentSplit, values.sellerRatio);\n      var buyerAgentCommission = calcAgentCommission(totalCommission, values.buyerAgentSplit, values.buyerRatio);\n      regionalSplit = calcRegionalSplit(totalCommission, null, values.referralCost, sellerAgentCommission, buyerAgentCommission);\n      tempData = {\n        sellerAgentCommission: sellerAgentCommission,\n        buyerAgentCommission: buyerAgentCommission\n      };\n    }\n\n    setValues(_objectSpread({}, values, tempData, {\n      totalCommission: totalCommission,\n      regionalSplit: regionalSplit\n    }));\n  }; // 1 Agent\n\n\n  var handleChangeAgentSplit = function handleChangeAgentSplit(e) {\n    var agentSplit = _parseFloat(e.target.value > 1 ? 0 : e.target.value || 0);\n\n    var agentCommission = calcAgentCommission(values.totalCommission, agentSplit);\n    var regionalSplit = calcRegionalSplit(values.totalCommission, agentCommission, values.referralCost);\n    setValues(_objectSpread({}, values, {\n      agentSplit: agentSplit,\n      agentCommission: agentCommission,\n      regionalSplit: regionalSplit\n    }));\n  }; // 2 Agents\n\n\n  var handleChangeAgentSplit2Agent = function handleChangeAgentSplit2Agent(e, role) {\n    var agentSplit = _parseFloat(e.target.value > 1 ? 0 : e.target.value || 0);\n\n    var sellerAgentCommission = values.sellerAgentCommission;\n    var buyerAgentCommission = values.buyerAgentCommission;\n    var tempAgentSplit = {};\n\n    if (role === 'seller') {\n      sellerAgentCommission = calcAgentCommission(values.totalCommission, agentSplit, values.sellerRatio);\n      tempAgentSplit = {\n        sellerAgentSplit: agentSplit\n      };\n    } else if (role === 'buyer') {\n      buyerAgentCommission = calcAgentCommission(values.totalCommission, agentSplit, values.sellerRatio);\n      tempAgentSplit = {\n        buyerAgentSplit: agentSplit\n      };\n    }\n\n    var regionalSplit = calcRegionalSplit(values.totalCommission, null, values.referralCost, sellerAgentCommission, buyerAgentCommission);\n    setValues(_objectSpread({}, values, tempAgentSplit, {\n      sellerAgentCommission: sellerAgentCommission,\n      buyerAgentCommission: buyerAgentCommission,\n      regionalSplit: regionalSplit\n    }));\n  };\n\n  var handleChangeRatio2Agent = function handleChangeRatio2Agent(e, role) {\n    var ratio = _parseFloat(e.target.value > 1 ? 0 : e.target.value || 0);\n\n    var sellerAgentCommission = values.sellerAgentCommission;\n    var buyerAgentCommission = values.buyerAgentCommission;\n    var tempRatio = {};\n\n    if (role === 'seller') {\n      var buyerRatio = _parseFloat((1 - ratio).toFixed(1));\n\n      sellerAgentCommission = calcAgentCommission(values.totalCommission, values.sellerAgentSplit, ratio);\n      buyerAgentCommission = calcAgentCommission(values.totalCommission, values.buyerAgentSplit, buyerRatio);\n      tempRatio = {\n        sellerRatio: ratio,\n        buyerRatio: buyerRatio\n      };\n    } else if (role === 'buyer') {\n      var sellerRatio = _parseFloat((1 - ratio).toFixed(1));\n\n      buyerAgentCommission = calcAgentCommission(values.totalCommission, values.buyerAgentSplit, ratio);\n      sellerAgentCommission = calcAgentCommission(values.totalCommission, values.sellerAgentSplit, sellerRatio);\n      tempRatio = {\n        buyerRatio: ratio,\n        sellerRatio: sellerRatio\n      };\n    }\n\n    var regionalSplit = calcRegionalSplit(values.totalCommission, null, values.referralCost, sellerAgentCommission, buyerAgentCommission);\n    setValues(_objectSpread({}, values, tempRatio, {\n      sellerAgentCommission: sellerAgentCommission,\n      buyerAgentCommission: buyerAgentCommission,\n      regionalSplit: regionalSplit\n    }));\n  };\n\n  var agentCommissionPromise =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var party;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!isAgents) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", transactionAgents.map(\n              /*#__PURE__*/\n              function () {\n                var _ref6 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2(party) {\n                  var commission, ratio;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          commission = 0;\n                          ratio = 0;\n\n                          if (party.role === TransactionRole.BUYING_AGENT) {\n                            commission = values.buyerAgentCommission;\n                            ratio = values.buyerRatio;\n                          } else if (party.role === TransactionRole.SELLER_AGENT) {\n                            commission = values.sellerAgentCommission;\n                            ratio = values.sellerRatio;\n                          }\n\n                          return _context2.abrupt(\"return\", commissionService.createUserCommission({\n                            cashType: commissionType.AGENT_COMMISSION,\n                            value: commission,\n                            ratio: ratio,\n                            userId: party.userId,\n                            transactionId: party.transactionId\n                          }));\n\n                        case 4:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x) {\n                  return _ref6.apply(this, arguments);\n                };\n              }()));\n\n            case 4:\n              // 1 Agent\n              party = transactionAgents[0];\n              return _context3.abrupt(\"return\", commissionService.createUserCommission({\n                cashType: commissionType.AGENT_COMMISSION,\n                value: values.agentCommission,\n                userId: party.userId,\n                transactionId: party.transactionId\n              }));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function agentCommissionPromise() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var updateAgentCommissionPromise =\n  /*#__PURE__*/\n  function () {\n    var _ref7 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var party;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!isAgents) {\n                _context5.next = 4;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", transactionAgents.map(\n              /*#__PURE__*/\n              function () {\n                var _ref8 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee4(party) {\n                  var commission, ratio;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          commission = 0;\n                          ratio = 0;\n\n                          if (party.role === TransactionRole.BUYING_AGENT) {\n                            commission = values.buyerAgentCommission;\n                            ratio = values.buyerRatio;\n                          } else if (party.role === TransactionRole.SELLER_AGENT) {\n                            commission = values.sellerAgentCommission;\n                            ratio = values.sellerRatio;\n                          }\n\n                          return _context4.abrupt(\"return\", commissionService.updateUserCommissionByTransactionIdUserId(party.transactionId, party.userId, {\n                            value: commission,\n                            ratio: ratio\n                          }));\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x2) {\n                  return _ref8.apply(this, arguments);\n                };\n              }()));\n\n            case 4:\n              // 1 Agent\n              party = transactionAgents[0];\n              return _context5.abrupt(\"return\", commissionService.updateUserCommissionByTransactionIdUserId(party.transactionId, party.userId, {\n                value: values.agentCommission\n              }));\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function updateAgentCommissionPromise() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref9 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(e) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              e.preventDefault(); // Update transaction status -> Close\n\n              _context6.prev = 1;\n              setIsSubmitting(true); // ===== CREATE =====\n\n              if (values.id) {\n                _context6.next = 10;\n                break;\n              }\n\n              _context6.next = 6;\n              return _Promise.all([// Close transaction\n              transactionService.closeTransaction(transactionId), // Create transaction commission\n              commissionService.createTransactionCommission({\n                totalCommission: values.totalCommission,\n                regionalSplit: values.regionalSplit,\n                transactionId: transactionId,\n                coordinatorId: currentUserId,\n                dateClosing: values.dateClosing\n              }), // Commission of TC\n              commissionService.createUserCommission({\n                cashType: commissionType.TC_COMMISSION,\n                value: TRANSACTION_COST + values.regionalSplit,\n                userId: currentUserId,\n                transactionId: transactionId\n              }), // Commission of Agent\n              agentCommissionPromise()]);\n\n            case 6:\n              refetchData();\n              toastr.success('Closed');\n              _context6.next = 21;\n              break;\n\n            case 10:\n              _context6.t0 = _Promise;\n              _context6.next = 13;\n              return commissionService.updateTransactionCommission(values.id, {\n                totalCommission: values.totalCommission,\n                regionalSplit: values.regionalSplit,\n                coordinatorId: currentUserId,\n                dateClosing: values.dateClosing\n              });\n\n            case 13:\n              _context6.t1 = _context6.sent;\n              _context6.t2 = // Update commission of TC\n              commissionService.updateUserCommissionByTransactionIdUserId(transactionId, currentUserId, {\n                value: TRANSACTION_COST + values.regionalSplit\n              });\n              _context6.t3 = // Update commission of Agent\n              updateAgentCommissionPromise();\n              _context6.t4 = [_context6.t1, _context6.t2, _context6.t3];\n              _context6.next = 19;\n              return _context6.t0.all.call(_context6.t0, _context6.t4);\n\n            case 19:\n              refetchData();\n              toastr.success('Updated');\n\n            case 21:\n              toggle();\n              _context6.next = 27;\n              break;\n\n            case 24:\n              _context6.prev = 24;\n              _context6.t5 = _context6[\"catch\"](1);\n              toastr.error(_context6.t5.message);\n\n            case 27:\n              _context6.prev = 27;\n              setIsSubmitting(false);\n              return _context6.finish(27);\n\n            case 30:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 24, 27, 30]]);\n    }));\n\n    return function handleSubmit(_x3) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var renderAgentCommission = function renderAgentCommission() {\n    if (!isAgents) {\n      return React.createElement(\"div\", {\n        className: \"col-xl-6 col-md-7\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"col-xl-8 col-md-7\"\n      }, React.createElement(InputForm, {\n        label: \"Agent's Commission\",\n        name: \"agentCommission\",\n        value: values.agentCommission,\n        isDisable: true\n      })), React.createElement(\"div\", {\n        className: \"col-xl-4 col-md-5\"\n      }, React.createElement(PercentInputForm, {\n        label: \"Agent's Split\",\n        name: \"agentSplit\",\n        value: values.agentSplit,\n        handleChange: function handleChange(e) {\n          return handleChangeAgentSplit(e);\n        }\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"col-12\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"col-xl-6 col-md-7\"\n      }, React.createElement(InputForm, {\n        label: \"Agent's Commission (Seller's agent)\",\n        name: \"sellerAgentCommission\",\n        value: values.sellerAgentCommission,\n        isDisable: true\n      })), React.createElement(\"div\", {\n        className: \"col-6 col-md-3\"\n      }, React.createElement(PercentInputForm, {\n        label: \"Agent's Split\",\n        name: \"sellerAgentSplit\",\n        value: values.sellerAgentSplit,\n        handleChange: function handleChange(e) {\n          return handleChangeAgentSplit2Agent(e, 'seller');\n        }\n      })), React.createElement(\"div\", {\n        className: \"col-xl-3 col-md-2 col-6\"\n      }, React.createElement(PercentInputForm, {\n        label: \"Ratio\",\n        name: \"sellerRatio\",\n        value: values.sellerRatio,\n        handleChange: function handleChange(e) {\n          return handleChangeRatio2Agent(e, 'seller');\n        }\n      })), React.createElement(\"div\", {\n        className: \"col-xl-6 col-md-7\"\n      }, React.createElement(InputForm, {\n        label: \"Agent's Commission (Buyer's agent)\",\n        name: \"buyerAgentCommission\",\n        value: values.buyerAgentCommission,\n        isDisable: true\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 col-6\"\n      }, React.createElement(PercentInputForm, {\n        label: \"Agent's Split\",\n        name: \"buyerAgentSplit\",\n        value: values.buyerAgentSplit,\n        handleChange: function handleChange(e) {\n          return handleChangeAgentSplit2Agent(e, 'buyer');\n        }\n      })), React.createElement(\"div\", {\n        className: \"col-xl-3 col-md-2 col-6\"\n      }, React.createElement(PercentInputForm, {\n        label: \"Ratio\",\n        name: \"buyerRatio\",\n        value: values.buyerRatio,\n        handleChange: function handleChange(e) {\n          return handleChangeRatio2Agent(e, 'buyer');\n        }\n      }))));\n    }\n  };\n\n  var renderTransactionCost = function renderTransactionCost() {\n    return React.createElement(InputForm, {\n      label: \"Transaction Cost\",\n      name: \"transactionCost\",\n      value: TRANSACTION_COST,\n      description: \"Transaction Coordination Cost\",\n      isDisable: true\n    });\n  };\n\n  return React.createElement(Modal, {\n    isOpen: isShow,\n    toggle: toggle,\n    id: \"lg-modal\"\n  }, React.createElement(\"div\", {\n    className: \"modal-header modal-header--change\",\n    id: \"bg-gr\"\n  }, React.createElement(\"div\", {\n    className: \"text-center w-100\"\n  }, React.createElement(\"h5\", {\n    className: \" modal-title new-add\",\n    id: \"exampleModalLabel\"\n  }, \"Cash Balance\")), React.createElement(\"div\", null, React.createElement(\"button\", {\n    id: \"close-modal\",\n    type: \"button\",\n    className: \"close bg-transparent \",\n    \"data-dismiss\": \"modal\",\n    onClick: function onClick() {\n      return toggle();\n    }\n  }, \"\\xD7\"))), React.createElement(\"div\", {\n    className: \"modal-body\",\n    id: \"main-body-add-member\"\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit\n  }, React.createElement(\"div\", {\n    className: \"px-5 box-close\"\n  }, React.createElement(\"div\", {\n    className: \"row px-3 my-4 d-flex justify-content-center\"\n  }, React.createElement(\"div\", {\n    className: \"col-12 col-md-6\"\n  }, React.createElement(InputForm, {\n    label: \"Total Commission\",\n    name: \"totalCommission\",\n    onChange: function onChange(e) {\n      return handleChangeTotalCommission(e);\n    },\n    value: values.totalCommission,\n    placeholder: \"$ Enter Commission Amount\",\n    description: \"Add the commission amount in full. Do not enter the full sale above.\"\n  })), React.createElement(\"div\", {\n    className: \"col-12 col-md-6\"\n  }, React.createElement(\"div\", {\n    className: \"form-group\"\n  }, React.createElement(\"label\", {\n    className: \"h5 font-weight-bold text-muted\"\n  }, \"Date of Closing\"), React.createElement(\"input\", {\n    name: \"dateClosing\",\n    type: \"date\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setValues(_objectSpread({}, values, _defineProperty({}, e.target.name, e.target.value)));\n    },\n    value: values.dateClosing,\n    placeholder: \"Add date of closing\"\n  })))), React.createElement(\"div\", {\n    className: \"row px-3 body-close-tran\"\n  }, renderAgentCommission(), !isAgents && React.createElement(\"div\", {\n    className: \"col-md-5 col-xl-6\"\n  }, renderTransactionCost()), React.createElement(\"div\", {\n    className: \"col-xl-6 col-md-7\"\n  }, React.createElement(\"div\", {\n    className: \"form-group\"\n  }, React.createElement(\"label\", {\n    className: \"h5 font-weight-bold text-muted\"\n  }, \"Total Referral Cost\"), React.createElement(\"div\", {\n    className: \"form-group\"\n  }, React.createElement(\"table\", {\n    className: \"table mb-0\"\n  }, React.createElement(\"thead\", {\n    className: \"bg-secondary border\"\n  }, React.createElement(\"tr\", null, React.createElement(\"th\", {\n    scope: \"col\"\n  }, \"Name\"), React.createElement(\"th\", {\n    scope: \"col\"\n  }, \"Balance\"))), React.createElement(\"tbody\", {\n    className: \"border\"\n  }, React.createElement(\"tr\", null, React.createElement(\"td\", null), React.createElement(\"td\", null), ' '))), React.createElement(\"div\", {\n    className: \"text-muted mb-5\"\n  }, React.createElement(\"small\", null, \"0 Degrees of Referrals\"))))), React.createElement(\"div\", {\n    className: \"col-xl-6 col-md-5\"\n  }, isAgents && renderTransactionCost(), React.createElement(InputForm, {\n    label: \"Errors and Omission\",\n    name: \"errorAndOmission\",\n    value: ERROR_AND_OMISSION,\n    description: \"Flat Rate Errors and Omission Cost\",\n    isDisable: true\n  }), React.createElement(\"div\", {\n    className: \"form-group\"\n  }, React.createElement(\"label\", {\n    className: \"h5 font-weight-bold text-muted\"\n  }, \"Regional Split\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"regionalSplit\",\n    type: \"text\",\n    value: \"N/A\",\n    disabled: true\n  }), React.createElement(\"div\", {\n    className: \"text-muted\"\n  }, React.createElement(\"small\", null, \"Agents Commission (60% of Brokerage Profits)\"))))), React.createElement(\"div\", {\n    className: \"my-5 d-flex justify-content-center\"\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-add-new text-white th-11 d-flex align-items-center\",\n    disabled: !values.totalCommission || isSubmitting\n  }, isSubmitting && React.createElement(\"span\", {\n    className: \"spinner-border spinner-border-sm mr-2\"\n  }), !values.id ? 'Close Transaction' : 'Save'))))));\n};\n\nexport default CloseTransactionModal;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/component/Transaction/CloseTransactionModal.js"],"names":["React","useEffect","useState","Modal","moment","NumberFormat","classnames","toastr","transactionService","commissionService","commissionType","TransactionRole","AGENT_SPLIT","TRANSACTION_COST","ERROR_AND_OMISSION","InputForm","label","isCenterLabel","isDisable","name","onChange","value","placeholder","description","PercentInputForm","handleChange","CloseTransactionModal","isShow","toggle","transactionId","currentUserId","transactionAgents","refetchData","isAgents","length","initValue","agentCommission","agentSplit","buyerAgentCommission","sellerAgentCommission","buyerAgentSplit","sellerAgentSplit","buyerRatio","sellerRatio","isSubmitting","setIsSubmitting","id","totalCommission","regionalSplit","referralCost","dateClosing","format","values","setValues","calcAgentSplit","ratio","toFixed","calcAgentCommission","temp","Math","round","calcRegionalSplit","fetchData","findByTransactionId","transactionCommission","getCommissionByTransaction","userCommission","tempData","allCommission","forEach","party","item","find","commission","userId","role","SELLER_AGENT","BUYING_AGENT","handleChangeTotalCommission","e","floatValue","handleChangeAgentSplit","target","handleChangeAgentSplit2Agent","tempAgentSplit","handleChangeRatio2Agent","tempRatio","agentCommissionPromise","map","createUserCommission","cashType","AGENT_COMMISSION","updateAgentCommissionPromise","updateUserCommissionByTransactionIdUserId","handleSubmit","preventDefault","all","closeTransaction","createTransactionCommission","coordinatorId","TC_COMMISSION","success","updateTransactionCommission","error","message","renderAgentCommission","renderTransactionCost"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Modal } from 'reactstrap'\nimport moment from 'moment'\nimport NumberFormat from 'react-number-format'\nimport classnames from 'classnames'\nimport toastr from 'toastr'\nimport { transactionService, commissionService } from '../../services'\nimport { commissionType } from '../../../common/models/CashBalance'\nimport { TransactionRole } from '../../../common/models/Transaction'\n\nconst AGENT_SPLIT = 0.9\nconst TRANSACTION_COST = 350\nconst ERROR_AND_OMISSION = 40\n\nconst InputForm = ({\n  label,\n  isCenterLabel,\n  isDisable,\n  name,\n  onChange,\n  value,\n  placeholder,\n  description\n}) => {\n  return (\n    <div className={classnames('form-group', { 'text-center': isCenterLabel })}>\n      {label && (\n        <label className='h5 font-weight-bold text-muted'>{label}</label>\n      )}\n      <NumberFormat\n        thousandSeparator\n        disabled={!!isDisable}\n        className='form-control'\n        name={name}\n        onValueChange={onChange}\n        value={value}\n        placeholder={placeholder}\n        prefix={'$ '}\n        allowNegative={false}\n      />\n      <div className='text-muted'>\n        <small>{description}</small>\n      </div>\n    </div>\n  )\n}\n\nconst PercentInputForm = ({ label, name, value, handleChange }) => {\n  return (\n    <div className='form-group'>\n      {label && (\n        <label className='h5 font-weight-bold text-muted'>{label}</label>\n      )}\n      <input\n        type='number'\n        className='form-control'\n        min={0}\n        max={1}\n        step='0.1'\n        name={name}\n        onChange={handleChange}\n        value={value}\n      />\n    </div>\n  )\n}\n\nconst CloseTransactionModal = ({\n  isShow,\n  toggle,\n  transactionId,\n  currentUserId,\n  transactionAgents,\n  refetchData\n}) => {\n  const isAgents = transactionAgents.length > 1\n  const initValue = !isAgents\n    ? { agentCommission: 0, agentSplit: AGENT_SPLIT }\n    : {\n      buyerAgentCommission: 0,\n      sellerAgentCommission: 0,\n      buyerAgentSplit: AGENT_SPLIT,\n      sellerAgentSplit: AGENT_SPLIT,\n      buyerRatio: 0.5,\n      sellerRatio: 0.5\n    }\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [values, setValues] = useState({\n    id: null,\n    totalCommission: null,\n    regionalSplit: 0,\n    referralCost: 0,\n    dateClosing: moment(Date.now()).format('YYYY-MM-DD'),\n    ...initValue\n  })\n\n  const calcAgentSplit = (agentCommission, totalCommission, ratio) => {\n    if (!isAgents) {\n      // Agent Split = (Agent's commission + Transaction Cost + Errors and Omission)/Total Commission\n      return parseFloat(\n        (\n          (agentCommission + TRANSACTION_COST + ERROR_AND_OMISSION) /\n          totalCommission\n        ).toFixed(1)\n      )\n    } else {\n      // Agent's Commission (Seller's Agent) = (Total Commission * Ratio of Seller's Agent * Agent's Spilt of Seller's Agent) - (Transaction Cost + Errors and Omission)\n      // Agent's Commission (Buyer's Agent) = (Total Commission * Ratio of Buyer's Agent * Agent's Spilt of Buyer's Agent) - (Transaction Cost + Errors and Omission)\n      return parseFloat(\n        (\n          (agentCommission + TRANSACTION_COST + ERROR_AND_OMISSION) /\n          (totalCommission * ratio)\n        ).toFixed(1)\n      )\n    }\n  }\n\n  const calcAgentCommission = (totalCommission, agentSplit, ratio) => {\n    if (!agentSplit || agentSplit <= 0) return 0\n\n    let temp = 0\n    // 1 Agent\n    if (!isAgents) {\n      // Agent's commission = (Total Commission * Agent Split) - (Transaction Cost + Errors and Omission)\n      temp = Math.round(\n        totalCommission * agentSplit - (TRANSACTION_COST + ERROR_AND_OMISSION)\n      )\n    } else {\n      // 2 Agents\n      // Agent's Commission (Seller's Agent) = (Total Commission * Ratio of Seller's Agent  * Agent's Spilt of Seller's Agent) - (Transaction Cost + Errors and Omission)\n      // Agent's Commission (Buyer's Agent) = (Total Commission * Ratio of Buyer's Agent  * Agent's Spilt of Buyer's Agent) - (Transaction Cost + Errors and Omission)\n      temp = Math.round(\n        totalCommission * agentSplit * ratio -\n          (TRANSACTION_COST + ERROR_AND_OMISSION)\n      )\n    }\n    return temp > 0 ? temp : 0\n  }\n  // handle regional split(temporarily closed)\n  const calcRegionalSplit = (\n    totalCommission,\n    agentCommission,\n    referralCost,\n    sellerAgentCommission,\n    buyerAgentCommission\n  ) => {\n    let temp = 0\n    // 1 Agent\n    // if (!isAgents) {\n    //   // Regional split = (Total commission - Agent's commission - Transaction cost - Errors and omission - Referral cost) * 0.6\n    //   temp = Math.round(\n    //     (totalCommission -\n    //       agentCommission -\n    //       TRANSACTION_COST -\n    //       ERROR_AND_OMISSION -\n    //       referralCost) *\n    //       0.6\n    //   )\n    // } else {\n    //   // 2 Agents\n    //   // Regional Split = (Total Commission - Agent's Commission of Seller's Agent - Agent's Commission of Buyer's Agent - 2*Transaction Cost - 2*Errors and Omission - Referral Cost of Seller's Agent - Referral Cost of Buyer's Agent) * 0.6\n    //   temp = Math.round(\n    //     (totalCommission -\n    //       sellerAgentCommission -\n    //       buyerAgentCommission -\n    //       2 * TRANSACTION_COST -\n    //       2 * ERROR_AND_OMISSION -\n    //       referralCost) *\n    //       0.6\n    //   )\n    // }\n\n    return temp > 0 ? temp : 0\n  }\n\n  const fetchData = async () => {\n    const transactionCommission = await commissionService.findByTransactionId(\n      transactionId\n    )\n    const userCommission = await commissionService.getCommissionByTransaction(\n      transactionId\n    )\n    if (transactionCommission) {\n      let tempData = {}\n      // 1 Agent\n      if (!isAgents) {\n        // Regional split = (Total commission - Agent's commission - Transaction cost - Errors and omission - Referral cost) * 0.6\n        // ==> Agent's commission =  Total commission - Regional split / 0.6 - Transaction cost - Errors and omission - Referral cost\n        // const agentCommission =\n        //   transactionCommission.totalCommission -\n        //   transactionCommission.regionalSplit / 0.6 -\n        //   TRANSACTION_COST -\n        //   ERROR_AND_OMISSION -\n        //   values.referralCost\n        const agentCommission = userCommission[0].value\n\n        tempData.agentSplit = calcAgentSplit(\n          agentCommission,\n          transactionCommission.totalCommission\n        )\n        tempData.agentCommission = agentCommission\n      } else {\n        // 2 Agents\n        const allCommission = await commissionService.getCommissionByTransaction(\n          transactionId\n        )\n        transactionAgents.forEach(party => {\n          let item = allCommission.find(\n            commission => commission.userId === party.userId\n          )\n          if (item) {\n            let agentSplit = calcAgentSplit(\n              item.value,\n              transactionCommission.totalCommission,\n              item.ratio\n            )\n\n            if (party.role === TransactionRole.SELLER_AGENT) {\n              tempData.sellerAgentSplit = agentSplit\n              tempData.sellerAgentCommission = item.value\n              tempData.sellerRatio = item.ratio\n            }\n            if (party.role === TransactionRole.BUYING_AGENT) {\n              tempData.buyerAgentSplit = agentSplit\n              tempData.buyerAgentCommission = item.value\n              tempData.buyerRatio = item.ratio\n            }\n          }\n        })\n      }\n      setValues({\n        ...values,\n        ...tempData,\n        id: transactionCommission.id,\n        totalCommission: transactionCommission.totalCommission,\n        regionalSplit: transactionCommission.regionalSplit,\n        dateClosing: transactionCommission.dateClosing\n      })\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const handleChangeTotalCommission = e => {\n    const totalCommission = e.floatValue\n    let tempData = {}\n    let regionalSplit = values.regionalSplit\n\n    // 1 Agent\n    if (!isAgents) {\n      const agentCommission = calcAgentCommission(\n        totalCommission,\n        values.agentSplit\n      )\n      regionalSplit = calcRegionalSplit(\n        totalCommission,\n        agentCommission,\n        values.referralCost\n      )\n      tempData = { agentCommission }\n    } else {\n      // 2 Agents\n      const sellerAgentCommission = calcAgentCommission(\n        totalCommission,\n        values.sellerAgentSplit,\n        values.sellerRatio\n      )\n      const buyerAgentCommission = calcAgentCommission(\n        totalCommission,\n        values.buyerAgentSplit,\n        values.buyerRatio\n      )\n      regionalSplit = calcRegionalSplit(\n        totalCommission,\n        null,\n        values.referralCost,\n        sellerAgentCommission,\n        buyerAgentCommission\n      )\n      tempData = {\n        sellerAgentCommission,\n        buyerAgentCommission\n      }\n    }\n\n    setValues({\n      ...values,\n      ...tempData,\n      totalCommission,\n      regionalSplit\n    })\n  }\n\n  // 1 Agent\n  const handleChangeAgentSplit = e => {\n    const agentSplit = parseFloat(e.target.value > 1 ? 0 : e.target.value || 0)\n    const agentCommission = calcAgentCommission(\n      values.totalCommission,\n      agentSplit\n    )\n    const regionalSplit = calcRegionalSplit(\n      values.totalCommission,\n      agentCommission,\n      values.referralCost\n    )\n    setValues({\n      ...values,\n      agentSplit,\n      agentCommission,\n      regionalSplit\n    })\n  }\n\n  // 2 Agents\n  const handleChangeAgentSplit2Agent = (e, role) => {\n    const agentSplit = parseFloat(e.target.value > 1 ? 0 : e.target.value || 0)\n    let sellerAgentCommission = values.sellerAgentCommission\n    let buyerAgentCommission = values.buyerAgentCommission\n    let tempAgentSplit = {}\n    if (role === 'seller') {\n      sellerAgentCommission = calcAgentCommission(\n        values.totalCommission,\n        agentSplit,\n        values.sellerRatio\n      )\n      tempAgentSplit = { sellerAgentSplit: agentSplit }\n    } else if (role === 'buyer') {\n      buyerAgentCommission = calcAgentCommission(\n        values.totalCommission,\n        agentSplit,\n        values.sellerRatio\n      )\n      tempAgentSplit = { buyerAgentSplit: agentSplit }\n    }\n    const regionalSplit = calcRegionalSplit(\n      values.totalCommission,\n      null,\n      values.referralCost,\n      sellerAgentCommission,\n      buyerAgentCommission\n    )\n\n    setValues({\n      ...values,\n      ...tempAgentSplit,\n      sellerAgentCommission,\n      buyerAgentCommission,\n      regionalSplit\n    })\n  }\n\n  const handleChangeRatio2Agent = (e, role) => {\n    const ratio = parseFloat(e.target.value > 1 ? 0 : e.target.value || 0)\n    let sellerAgentCommission = values.sellerAgentCommission\n    let buyerAgentCommission = values.buyerAgentCommission\n    let tempRatio = {}\n\n    if (role === 'seller') {\n      let buyerRatio = parseFloat((1 - ratio).toFixed(1))\n      sellerAgentCommission = calcAgentCommission(\n        values.totalCommission,\n        values.sellerAgentSplit,\n        ratio\n      )\n      buyerAgentCommission = calcAgentCommission(\n        values.totalCommission,\n        values.buyerAgentSplit,\n        buyerRatio\n      )\n      tempRatio = { sellerRatio: ratio, buyerRatio }\n    } else if (role === 'buyer') {\n      let sellerRatio = parseFloat((1 - ratio).toFixed(1))\n      buyerAgentCommission = calcAgentCommission(\n        values.totalCommission,\n        values.buyerAgentSplit,\n        ratio\n      )\n      sellerAgentCommission = calcAgentCommission(\n        values.totalCommission,\n        values.sellerAgentSplit,\n        sellerRatio\n      )\n      tempRatio = { buyerRatio: ratio, sellerRatio }\n    }\n\n    const regionalSplit = calcRegionalSplit(\n      values.totalCommission,\n      null,\n      values.referralCost,\n      sellerAgentCommission,\n      buyerAgentCommission\n    )\n\n    setValues({\n      ...values,\n      ...tempRatio,\n      sellerAgentCommission,\n      buyerAgentCommission,\n      regionalSplit\n    })\n  }\n\n  const agentCommissionPromise = async () => {\n    // 2 Agents\n    if (isAgents) {\n      return transactionAgents.map(async party => {\n        let commission = 0\n\n        let ratio = 0\n        if (party.role === TransactionRole.BUYING_AGENT) {\n          commission = values.buyerAgentCommission\n          ratio = values.buyerRatio\n        } else if (party.role === TransactionRole.SELLER_AGENT) {\n          commission = values.sellerAgentCommission\n          ratio = values.sellerRatio\n        }\n\n        return commissionService.createUserCommission({\n          cashType: commissionType.AGENT_COMMISSION,\n          value: commission,\n          ratio,\n          userId: party.userId,\n          transactionId: party.transactionId\n        })\n      })\n    } else {\n      // 1 Agent\n      const party = transactionAgents[0]\n      return commissionService.createUserCommission({\n        cashType: commissionType.AGENT_COMMISSION,\n        value: values.agentCommission,\n        userId: party.userId,\n        transactionId: party.transactionId\n      })\n    }\n  }\n\n  const updateAgentCommissionPromise = async () => {\n    // 2 Agents\n    if (isAgents) {\n      return transactionAgents.map(async party => {\n        let commission = 0\n\n        let ratio = 0\n        if (party.role === TransactionRole.BUYING_AGENT) {\n          commission = values.buyerAgentCommission\n          ratio = values.buyerRatio\n        } else if (party.role === TransactionRole.SELLER_AGENT) {\n          commission = values.sellerAgentCommission\n          ratio = values.sellerRatio\n        }\n\n        return commissionService.updateUserCommissionByTransactionIdUserId(\n          party.transactionId,\n          party.userId,\n          {\n            value: commission,\n            ratio\n          }\n        )\n      })\n    } else {\n      // 1 Agent\n      const party = transactionAgents[0]\n\n      return commissionService.updateUserCommissionByTransactionIdUserId(\n        party.transactionId,\n        party.userId,\n        {\n          value: values.agentCommission\n        }\n      )\n    }\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    // Update transaction status -> Close\n    try {\n      setIsSubmitting(true)\n      // ===== CREATE =====\n      if (!values.id) {\n        await Promise.all([\n          // Close transaction\n          transactionService.closeTransaction(transactionId),\n          // Create transaction commission\n          commissionService.createTransactionCommission({\n            totalCommission: values.totalCommission,\n            regionalSplit: values.regionalSplit,\n            transactionId: transactionId,\n            coordinatorId: currentUserId,\n            dateClosing: values.dateClosing\n          }),\n          // Commission of TC\n          commissionService.createUserCommission({\n            cashType: commissionType.TC_COMMISSION,\n            value: TRANSACTION_COST + values.regionalSplit,\n            userId: currentUserId,\n            transactionId: transactionId\n          }),\n          // Commission of Agent\n          agentCommissionPromise()\n        ])\n        refetchData()\n        toastr.success('Closed')\n      } else {\n        // ===== UPDATE =====\n        await Promise.all([\n          // Update transaction commission\n          await commissionService.updateTransactionCommission(values.id, {\n            totalCommission: values.totalCommission,\n            regionalSplit: values.regionalSplit,\n            coordinatorId: currentUserId,\n            dateClosing: values.dateClosing\n          }),\n          // Update commission of TC\n          commissionService.updateUserCommissionByTransactionIdUserId(\n            transactionId,\n            currentUserId,\n            {\n              value: TRANSACTION_COST + values.regionalSplit\n            }\n          ),\n          // Update commission of Agent\n          updateAgentCommissionPromise()\n        ])\n        refetchData()\n        toastr.success('Updated')\n      }\n      toggle()\n    } catch (e) {\n      toastr.error(e.message)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const renderAgentCommission = () => {\n    if (!isAgents) {\n      return (\n        <div className='col-xl-6 col-md-7'>\n          <div className='row'>\n            <div className='col-xl-8 col-md-7'>\n              <InputForm\n                label=\"Agent's Commission\"\n                name='agentCommission'\n                value={values.agentCommission}\n                isDisable\n              />\n            </div>\n            <div className='col-xl-4 col-md-5'>\n              <PercentInputForm\n                label=\"Agent's Split\"\n                name='agentSplit'\n                value={values.agentSplit}\n                handleChange={e => handleChangeAgentSplit(e)}\n              />\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className='col-12'>\n          <div className='row'>\n            <div className='col-xl-6 col-md-7'>\n              <InputForm\n                label=\"Agent's Commission (Seller's agent)\"\n                name='sellerAgentCommission'\n                value={values.sellerAgentCommission}\n                isDisable\n              />\n            </div>\n            <div className='col-6 col-md-3'>\n              <PercentInputForm\n                label=\"Agent's Split\"\n                name='sellerAgentSplit'\n                value={values.sellerAgentSplit}\n                handleChange={e => handleChangeAgentSplit2Agent(e, 'seller')}\n              />\n            </div>\n            <div className='col-xl-3 col-md-2 col-6'>\n              <PercentInputForm\n                label='Ratio'\n                name='sellerRatio'\n                value={values.sellerRatio}\n                handleChange={e => handleChangeRatio2Agent(e, 'seller')}\n              />\n            </div>\n            <div className='col-xl-6 col-md-7'>\n              <InputForm\n                label=\"Agent's Commission (Buyer's agent)\"\n                name='buyerAgentCommission'\n                value={values.buyerAgentCommission}\n                isDisable\n              />\n            </div>\n            <div className='col-md-3 col-6'>\n              <PercentInputForm\n                label=\"Agent's Split\"\n                name='buyerAgentSplit'\n                value={values.buyerAgentSplit}\n                handleChange={e => handleChangeAgentSplit2Agent(e, 'buyer')}\n              />\n            </div>\n            <div className='col-xl-3 col-md-2 col-6'>\n              <PercentInputForm\n                label='Ratio'\n                name='buyerRatio'\n                value={values.buyerRatio}\n                handleChange={e => handleChangeRatio2Agent(e, 'buyer')}\n              />\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  const renderTransactionCost = () => {\n    return (\n      <InputForm\n        label='Transaction Cost'\n        name='transactionCost'\n        value={TRANSACTION_COST}\n        description='Transaction Coordination Cost'\n        isDisable\n      />\n    )\n  }\n\n  return (\n    <Modal isOpen={isShow} toggle={toggle} id='lg-modal'>\n      <div className='modal-header modal-header--change' id='bg-gr'>\n        <div className='text-center w-100'>\n          <h5 className=' modal-title new-add' id='exampleModalLabel'>\n            Cash Balance\n          </h5>\n        </div>\n        <div>\n          <button\n            id='close-modal'\n            type='button'\n            className='close bg-transparent '\n            data-dismiss='modal'\n            onClick={() => toggle()}\n          >\n            &times;\n          </button>\n        </div>\n      </div>\n      <div className='modal-body' id='main-body-add-member'>\n        <form onSubmit={handleSubmit}>\n          <div className='px-5 box-close'>\n            <div className='row px-3 my-4 d-flex justify-content-center'>\n              <div className='col-12 col-md-6'>\n                <InputForm\n                  label='Total Commission'\n                  name='totalCommission'\n                  onChange={e => handleChangeTotalCommission(e)}\n                  value={values.totalCommission}\n                  placeholder='$ Enter Commission Amount'\n                  description='Add the commission amount in full. Do not enter the full sale above.'\n                />\n              </div>\n              <div className='col-12 col-md-6'>\n                <div className='form-group'>\n                  <label className='h5 font-weight-bold text-muted'>\n                    Date of Closing\n                  </label>\n                  <input\n                    name='dateClosing'\n                    type='date'\n                    className='form-control'\n                    onChange={e =>\n                      setValues({ ...values, [e.target.name]: e.target.value })\n                    }\n                    value={values.dateClosing}\n                    placeholder='Add date of closing'\n                  />\n                </div>\n              </div>\n            </div>\n            <div className='row px-3 body-close-tran'>\n              {renderAgentCommission()}\n              {!isAgents && (\n                <div className='col-md-5 col-xl-6'>\n                  {renderTransactionCost()}\n                </div>\n              )}\n              <div className='col-xl-6 col-md-7'>\n                <div className='form-group'>\n                  <label className='h5 font-weight-bold text-muted'>\n                    Total Referral Cost\n                  </label>\n                  <div className='form-group'>\n                    <table className='table mb-0'>\n                      <thead className='bg-secondary border'>\n                        <tr>\n                          <th scope='col'>Name</th>\n                          <th scope='col'>Balance</th>\n                        </tr>\n                      </thead>\n                      <tbody className='border'>\n                        <tr>\n                          <td />\n                          <td />{' '}\n                        </tr>\n                      </tbody>\n                    </table>\n                    <div className='text-muted mb-5'>\n                      <small>0 Degrees of Referrals</small>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='col-xl-6 col-md-5'>\n                {isAgents && renderTransactionCost()}\n                <InputForm\n                  label='Errors and Omission'\n                  name='errorAndOmission'\n                  value={ERROR_AND_OMISSION}\n                  description='Flat Rate Errors and Omission Cost'\n                  isDisable\n                />\n                <div className='form-group'>\n                  <label className='h5 font-weight-bold text-muted'>\n                    Regional Split\n                  </label>\n\n                  <input\n                    className='form-control'\n                    name='regionalSplit'\n                    type='text'\n                    value='N/A'\n                    disabled\n                  />\n                  <div className='text-muted'>\n                    <small>Agents Commission (60% of Brokerage Profits)</small>\n                  </div>\n                </div>\n                {/* <InputForm\n                  label='Regional Split'\n                  name='regionalSplit'\n                  value={values.regionalSplit}\n                  description='Agents Commission (60% of Brokerage Profits)'\n                  isDisable\n                /> */}\n              </div>\n            </div>\n            <div className='my-5 d-flex justify-content-center'>\n              <button\n                type='submit'\n                className='btn btn-add-new text-white th-11 d-flex align-items-center'\n                disabled={!values.totalCommission || isSubmitting}\n              >\n                {isSubmitting && (\n                  <span className='spinner-border spinner-border-sm mr-2' />\n                )}\n                {!values.id ? 'Close Transaction' : 'Save'}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  )\n}\n\nexport default CloseTransactionModal\n"]},"metadata":{},"sourceType":"module"}