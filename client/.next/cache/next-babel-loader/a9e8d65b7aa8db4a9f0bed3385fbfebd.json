{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _wrapNativeSuper from \"@babel/runtime-corejs2/helpers/wrapNativeSuper\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\n\n/**\n * @class ValidationError\n * @classdesc Contains information of all of validation error of an object\n * @type {object}\n * @property {string} name - is always \"ValidationError\"\n * @property {object} details - object with keys indicating fields having errors, and value for each\n * key indicating a list of error types of each field\n * @example\n * // return {\n * //   name: 'ValidationError',\n * //   details: {\n * //     email: ['INVALID_MIN_LENGTH', 'INVALID_EMAIL'],\n * //     password: ['INVALID_LENGTH'],\n * //     name: ['REQUIRED']\n * //   }\n * // }\n * const error = new ValidationError({\n *   email: ['INVALID_MIN_LENGTH', 'INVALID_EMAIL'],\n *   password: ['INVALID_LENGTH'],\n *   name: ['REQUIRED']\n * })\n *\n * // return {\n * //   name: 'ValidationError',\n * //   details: ['INVALID_FILE_SIZE', 'INVALID_FILE_TYPE']\n * // }\n * const error = new ValidationError(['INVALID_FILE_SIZE', 'INVALID_FILE_TYPE'])\n */\nvar ValidationError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(ValidationError, _Error);\n\n  function ValidationError(details) {\n    var _this;\n\n    _classCallCheck(this, ValidationError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ValidationError).call(this));\n    _this.name = ValidationError.name;\n    _this.details = details;\n    return _this;\n  }\n\n  return ValidationError;\n}(_wrapNativeSuper(Error));\n\n_defineProperty(ValidationError, \"name\", 'ValidationError');\n\nexport { ValidationError as default };\nexport var ErrorCode = {\n  REQUIRED: 'REQUIRED',\n  INVALID: 'INVALID',\n  EMAIL_EXISTED: 'EMAIL_EXISTED',\n  INVALID_LENGTH: 'INVALID_LENGTH',\n  INVALID_EMAIL: 'INVALID_EMAIL',\n  INVALID_FILE_TYPE: 'INVALID_FILE_TYPE',\n  INVALID_FILE_SIZE: 'INVALID_FILE_SIZE'\n};","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/errors/ValidationError.js"],"names":["ValidationError","details","name","Error","ErrorCode","REQUIRED","INVALID","EMAIL_EXISTED","INVALID_LENGTH","INVALID_EMAIL","INVALID_FILE_TYPE","INVALID_FILE_SIZE"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4BqBA,e;;;;;AAGnB,2BAAaC,OAAb,EAAsC;AAAA;;AAAA;;AACpC;AACA,UAAKC,IAAL,GAAYF,eAAe,CAACE,IAA5B;AACA,UAAKD,OAAL,GAAeA,OAAf;AAHoC;AAIrC;;;mBAP0CE,K;;gBAAxBH,e,UACL,iB;;SADKA,e;AAUrB,OAAO,IAAMI,SAAS,GAAG;AACvBC,EAAAA,QAAQ,EAAE,UADa;AAEvBC,EAAAA,OAAO,EAAE,SAFc;AAGvBC,EAAAA,aAAa,EAAE,eAHQ;AAIvBC,EAAAA,cAAc,EAAE,gBAJO;AAKvBC,EAAAA,aAAa,EAAE,eALQ;AAMvBC,EAAAA,iBAAiB,EAAE,mBANI;AAOvBC,EAAAA,iBAAiB,EAAE;AAPI,CAAlB","sourcesContent":["/**\n * @class ValidationError\n * @classdesc Contains information of all of validation error of an object\n * @type {object}\n * @property {string} name - is always \"ValidationError\"\n * @property {object} details - object with keys indicating fields having errors, and value for each\n * key indicating a list of error types of each field\n * @example\n * // return {\n * //   name: 'ValidationError',\n * //   details: {\n * //     email: ['INVALID_MIN_LENGTH', 'INVALID_EMAIL'],\n * //     password: ['INVALID_LENGTH'],\n * //     name: ['REQUIRED']\n * //   }\n * // }\n * const error = new ValidationError({\n *   email: ['INVALID_MIN_LENGTH', 'INVALID_EMAIL'],\n *   password: ['INVALID_LENGTH'],\n *   name: ['REQUIRED']\n * })\n *\n * // return {\n * //   name: 'ValidationError',\n * //   details: ['INVALID_FILE_SIZE', 'INVALID_FILE_TYPE']\n * // }\n * const error = new ValidationError(['INVALID_FILE_SIZE', 'INVALID_FILE_TYPE'])\n */\nexport default class ValidationError extends Error {\n  static name = 'ValidationError'\n\n  constructor (details: Object | Array) {\n    super()\n    this.name = ValidationError.name\n    this.details = details\n  }\n}\n\nexport const ErrorCode = {\n  REQUIRED: 'REQUIRED',\n  INVALID: 'INVALID',\n  EMAIL_EXISTED: 'EMAIL_EXISTED',\n  INVALID_LENGTH: 'INVALID_LENGTH',\n  INVALID_EMAIL: 'INVALID_EMAIL',\n  INVALID_FILE_TYPE: 'INVALID_FILE_TYPE',\n  INVALID_FILE_SIZE: 'INVALID_FILE_SIZE'\n}\n"]},"metadata":{},"sourceType":"module"}