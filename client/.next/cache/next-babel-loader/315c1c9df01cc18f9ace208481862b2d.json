{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { Modal } from 'reactstrap';\nimport { Document, Page } from 'react-pdf';\nimport toastr from 'toastr';\nimport getConfig from 'next/config';\nimport { DocumentSpecies } from '../../../common/models/Transaction';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar API_BASE_URL = \"\".concat(publicRuntimeConfig.BASE_URL, \"/api\");\n\nvar PreviewModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PreviewModal, _React$Component);\n\n  function PreviewModal(props) {\n    var _this;\n\n    _classCallCheck(this, PreviewModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PreviewModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onConfirm\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, handleConfirm, toggle;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, handleConfirm = _this$props.handleConfirm, toggle = _this$props.toggle;\n              _context.prev = 1;\n\n              _this.setState({\n                isSubmitting: true\n              });\n\n              _context.next = 5;\n              return handleConfirm();\n\n            case 5:\n              toastr.success('Success');\n              toggle();\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              toastr.error(_context.t0.message);\n\n            case 12:\n              _context.prev = 12;\n\n              _this.setState({\n                isSubmitting: false\n              });\n\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9, 12, 15]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getLinkToDownload\", function (document) {\n      if (document.signId) {\n        return \"\".concat(API_BASE_URL, \"/documentActions/\").concat(document.signId, \"/download\");\n      }\n\n      if (document.documentType === DocumentSpecies.ENVELOPE) {\n        return \"\".concat(API_BASE_URL, \"/documents/\").concat(document.id, \"/download-envelope\");\n      }\n\n      return \"\".concat(API_BASE_URL, \"/documents/\").concat(document.id, \"/download\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onDocumentLoadSuccess\", function (_ref2) {\n      var numPages = _ref2.numPages;\n\n      _this.setState({\n        numPages: numPages,\n        width: _this.refsDoc.offsetWidth\n      });\n    });\n\n    _this.state = {\n      numPages: null,\n      pageNumber: 1,\n      width: 0,\n      isAgree: false,\n      isSubmitting: false\n    };\n    return _this;\n  }\n\n  _createClass(PreviewModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          toggle = _this$props2.toggle,\n          document = _this$props2.document,\n          actionId = _this$props2.actionId;\n      var _this$state = this.state,\n          isAgree = _this$state.isAgree,\n          isSubmitting = _this$state.isSubmitting;\n      return React.createElement(Modal, {\n        isOpen: !!document,\n        id: \"new-transaction-modal\",\n        toggle: toggle\n      }, React.createElement(\"div\", {\n        className: \"modal-header\"\n      }, React.createElement(\"div\", null, React.createElement(\"a\", {\n        type: \"button\",\n        href: this.getLinkToDownload(document),\n        target: \"_blank\",\n        className: \"btn btn-sm btn-add-new text-white ml-2\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-download\"\n      }))), React.createElement(\"div\", {\n        className: \"h4\"\n      }, \"Preview document\"), React.createElement(\"div\", null, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close bg-transparent\",\n        \"data-dismiss\": \"modal\",\n        onClick: toggle\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\"\n      }, React.createElement(\"div\", {\n        className: \"text-center\"\n      }, React.createElement(\"h3\", null, React.createElement(\"b\", null, document.title || ''))), React.createElement(\"div\", {\n        ref: function ref(that) {\n          return _this2.refsDoc = that;\n        }\n      }, React.createElement(Document // file={\n      //   this.props.documentStatus\n      //     ? `${API_BASE_URL}/documentActions/${\n      //       this.props.documentId\n      //     }/download`\n      //     : `${API_BASE_URL}/documents/${this.props.documentId}/download`\n      // }\n      , {\n        file: this.getLinkToDownload(document),\n        onLoadSuccess: this._onDocumentLoadSuccess\n      }, _.range(this.state.numPages).map(function (pageNumber) {\n        return React.createElement(Page, {\n          key: \"page_\".concat(pageNumber + 1),\n          pageNumber: pageNumber + 1,\n          width: _this2.state.width\n        });\n      }))), actionId && React.createElement(\"div\", {\n        className: \"modal-footer\"\n      }, React.createElement(\"div\", {\n        className: \"form-check text-left\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"previewed\",\n        className: \"form-check-input\",\n        value: isAgree,\n        onChange: function onChange() {\n          return _this2.setState({\n            isAgree: !isAgree\n          });\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"previewed\",\n        className: \"form-check-label\"\n      }, \"Agree with the content of this document\")), React.createElement(\"div\", null, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-add-new text-white\",\n        disabled: !isAgree || isSubmitting,\n        onClick: function onClick() {\n          return _this2.onConfirm();\n        }\n      }, \"Confirm\")))));\n    }\n  }]);\n\n  return PreviewModal;\n}(React.Component);\n\nexport { PreviewModal as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/TransactionFilesPage/PreviewModal.js"],"names":["React","_","Modal","Document","Page","toastr","getConfig","DocumentSpecies","publicRuntimeConfig","API_BASE_URL","BASE_URL","PreviewModal","props","handleConfirm","toggle","setState","isSubmitting","success","error","message","document","signId","documentType","ENVELOPE","id","numPages","width","refsDoc","offsetWidth","state","pageNumber","isAgree","actionId","getLinkToDownload","title","that","_onDocumentLoadSuccess","range","map","onConfirm","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport { Modal } from 'reactstrap'\nimport { Document, Page } from 'react-pdf'\nimport toastr from 'toastr'\nimport getConfig from 'next/config'\nimport { DocumentSpecies } from '../../../common/models/Transaction'\n\nconst { publicRuntimeConfig } = getConfig()\nconst API_BASE_URL = `${publicRuntimeConfig.BASE_URL}/api`\n\nexport default class PreviewModal extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      numPages: null,\n      pageNumber: 1,\n      width: 0,\n      isAgree: false,\n      isSubmitting: false\n    }\n  }\n\n  onConfirm = async () => {\n    const { handleConfirm, toggle } = this.props\n    try {\n      this.setState({ isSubmitting: true })\n      await handleConfirm()\n      toastr.success('Success')\n      toggle()\n    } catch (e) {\n      toastr.error(e.message)\n    } finally {\n      this.setState({ isSubmitting: false })\n    }\n  }\n\n  getLinkToDownload = document => {\n    if (document.signId) {\n      return `${API_BASE_URL}/documentActions/${document.signId}/download`\n    }\n    if (document.documentType === DocumentSpecies.ENVELOPE) {\n      return `${API_BASE_URL}/documents/${document.id}/download-envelope`\n    }\n    return `${API_BASE_URL}/documents/${document.id}/download`\n  }\n\n  render () {\n    const { toggle, document, actionId } = this.props\n    const { isAgree, isSubmitting } = this.state\n\n    return (\n      <Modal isOpen={!!document} id='new-transaction-modal' toggle={toggle}>\n        <div className='modal-header'>\n          <div>\n            <a\n              type='button'\n              href={this.getLinkToDownload(document)}\n              target='_blank'\n              className='btn btn-sm btn-add-new text-white ml-2'\n            >\n              <i className='fas fa-download' />\n            </a>\n          </div>\n          <div className='h4'>Preview document</div>\n          <div>\n            <button\n              type='button'\n              className='close bg-transparent'\n              data-dismiss='modal'\n              onClick={toggle}\n            >\n              &times;\n            </button>\n          </div>\n        </div>\n        <div className='modal-body'>\n          <div className='text-center'>\n            <h3>\n              <b>{document.title || ''}</b>\n            </h3>\n          </div>\n          <div ref={that => (this.refsDoc = that)}>\n            <Document\n              // file={\n              //   this.props.documentStatus\n              //     ? `${API_BASE_URL}/documentActions/${\n              //       this.props.documentId\n              //     }/download`\n              //     : `${API_BASE_URL}/documents/${this.props.documentId}/download`\n              // }\n\n              file={this.getLinkToDownload(document)}\n              onLoadSuccess={this._onDocumentLoadSuccess}\n            >\n              {_.range(this.state.numPages).map(pageNumber => (\n                <Page\n                  key={`page_${pageNumber + 1}`}\n                  pageNumber={pageNumber + 1}\n                  width={this.state.width}\n                />\n              ))}\n            </Document>\n            {/* <p>\n            Page {this.state.pageNumber} of {this.state.numPages}\n          </p> */}\n          </div>\n\n          {/* ===== Confirmed read ===== */}\n          {actionId && (\n            <div className='modal-footer'>\n              <div className='form-check text-left'>\n                <input\n                  type='checkbox'\n                  id='previewed'\n                  className='form-check-input'\n                  value={isAgree}\n                  onChange={() => this.setState({ isAgree: !isAgree })}\n                />\n                <label htmlFor='previewed' className='form-check-label'>\n                  Agree with the content of this document\n                </label>\n              </div>\n              <div>\n                <button\n                  type='button'\n                  className='btn btn-add-new text-white'\n                  disabled={!isAgree || isSubmitting}\n                  onClick={() => this.onConfirm()}\n                >\n                  Confirm\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    )\n  }\n\n  _onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({\n      numPages,\n      width: this.refsDoc.offsetWidth\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}