{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport React, { useState, Component, useMemo } from 'react';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport toastr from 'toastr';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport Head from 'next/head';\nimport { Link } from '../../../common/routes';\nimport { commissionService, transactionService } from '../../services';\nimport { TransactionAccessType, TransactionStatus } from '../../../common/models/Transaction';\nimport userOnly from '../../hocs/userOnly';\nimport { getTransactionActivity } from '../../view-models/Transaction';\nimport { getRoleLabel } from '../../view-models/User';\nimport { isCoordinator } from '../../../common/models/User';\nimport CashBalanceModal from '../../component/CashBalance';\nimport AddNewTransactionModal from '../../component/Transaction/AddNewTransactionModal';\nimport authRedux from '../../redux/authRedux';\n\nfunction _fetchTransactions(_x) {\n  return _fetchTransactions2.apply(this, arguments);\n}\n\nfunction _fetchTransactions2() {\n  _fetchTransactions2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee11(userId) {\n    var transactions, accessType, promise, percentOfTransactions;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return transactionService.getTransactionsForUser();\n\n          case 2:\n            transactions = _context11.sent;\n            _context11.next = 5;\n            return _Promise.all(transactions.map(\n            /*#__PURE__*/\n            function () {\n              var _ref13 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee10(item) {\n                var _ref14, access;\n\n                return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.next = 2;\n                        return transactionService.getTransactionPartyByUserId(item.id, userId);\n\n                      case 2:\n                        _ref14 = _context10.sent;\n                        access = _ref14.access;\n                        return _context10.abrupt(\"return\", access);\n\n                      case 5:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              }));\n\n              return function (_x6) {\n                return _ref13.apply(this, arguments);\n              };\n            }()));\n\n          case 5:\n            accessType = _context11.sent;\n            promise = transactions.map(function (transaction) {\n              return {\n                transactionId: transaction.id,\n                percent: transaction.percentComplete || 0\n              };\n            });\n            _context11.next = 9;\n            return _Promise.all(promise);\n\n          case 9:\n            percentOfTransactions = _context11.sent;\n            return _context11.abrupt(\"return\", {\n              accessType: accessType,\n              transactions: transactions,\n              percentOfTransactions: percentOfTransactions\n            });\n\n          case 11:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _fetchTransactions2.apply(this, arguments);\n}\n\nvar PaginationComponent = function PaginationComponent(_ref) {\n  var data = _ref.data,\n      viewActive = _ref.viewActive,\n      view = _ref.view;\n\n  // const [dataPage, setDataPage] = useState([])\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState(6),\n      _useState4 = _slicedToArray(_useState3, 1),\n      itemsPerPage = _useState4[0];\n\n  var _useState5 = useState(3),\n      _useState6 = _slicedToArray(_useState5, 1),\n      pageNumberLimit = _useState6[0];\n\n  var _useState7 = useState(3),\n      _useState8 = _slicedToArray(_useState7, 2),\n      maxPageNumberLimit = _useState8[0],\n      setMaxPageNumberLimit = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      minPageNumberLimit = _useState10[0],\n      setMinPageNumberLimit = _useState10[1];\n\n  var dataSet = data;\n\n  if (view === 'In Progress') {\n    dataSet = dataSet.filter(function (x) {\n      return x.status !== TransactionStatus.CLOSED && x.status !== TransactionStatus.ARCHIVED;\n    });\n  }\n\n  if (view === 'Archived') {\n    dataSet = dataSet.filter(function (x) {\n      return x.status === TransactionStatus.ARCHIVED;\n    });\n  }\n\n  if (view === 'Complete') {\n    dataSet = dataSet.filter(function (x) {\n      return x.status === TransactionStatus.CLOSED;\n    });\n  }\n\n  var handleClick = function handleClick(dataSet) {\n    setCurrentPage(Number(dataSet.target.id));\n  };\n\n  var pages = [];\n\n  for (var i = 1; i <= Math.ceil(dataSet.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  var indexOfLastItem = useMemo(function () {\n    return currentPage * itemsPerPage;\n  }, [currentPage]);\n  var indexFirstItem = useMemo(function () {\n    return indexOfLastItem - itemsPerPage;\n  }, [indexOfLastItem]);\n  var currentItems = useMemo(function () {\n    return dataSet.slice(indexFirstItem, indexOfLastItem);\n  }, [indexFirstItem, indexOfLastItem, dataSet]);\n  var renderPageNumbers = pages.map(function (number) {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: function onClick(dataSet) {\n          return handleClick(dataSet);\n        },\n        className: currentPage === number ? 'active' : null,\n        style: {\n          marginLeft: '0.2rem',\n          cursor: 'pointer'\n        }\n      }, number);\n    } else {\n      return null;\n    }\n  });\n\n  var handleNextBtn = function handleNextBtn() {\n    setCurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  var handelPrevBtn = function handelPrevBtn() {\n    setCurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  var pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = React.createElement(\"li\", {\n      onClick: handleNextBtn,\n      style: {\n        cursor: 'pointer'\n      }\n    }, \"\\u2026\");\n  }\n\n  var pageDecrementBtn = null;\n\n  if (currentPage > 3) {\n    pageDecrementBtn = React.createElement(\"li\", {\n      onClick: handelPrevBtn,\n      style: {\n        cursor: 'pointer'\n      }\n    }, \"\\u2026\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"row new-box-transaction\",\n    style: {\n      width: '100%'\n    }\n  }, viewActive(currentItems)), currentItems.length > 0 ? React.createElement(\"ul\", {\n    className: \"pageNumbers pt-4\"\n  }, React.createElement(\"li\", {\n    className: \"\",\n    style: {\n      border: 'none'\n    }\n  }, React.createElement(\"button\", {\n    className: \"\",\n    onClick: function onClick() {\n      return handelPrevBtn();\n    },\n    disabled: currentPage === pages[0]\n  }, React.createElement(\"i\", {\n    className: \"fas fa-angle-left mr-2\"\n  }), \"Previous\")), pageDecrementBtn, renderPageNumbers, pageIncrementBtn, React.createElement(\"li\", {\n    className: \"ml-1\",\n    style: {\n      border: 'none'\n    }\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleNextBtn();\n    },\n    disabled: currentPage === pages[pages.length - 1]\n  }, \"Next\", React.createElement(\"i\", {\n    className: \"fas fa-angle-right ml-2\"\n  })))) : React.createElement(React.Fragment, null));\n};\n\nvar MyTransactionsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyTransactionsPage, _Component);\n\n  _createClass(MyTransactionsPage, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", {\n                  headerText: 'Transactions'\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MyTransactionsPage(props) {\n    var _this;\n\n    _classCallCheck(this, MyTransactionsPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyTransactionsPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_fetchData\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _ref3, accessType, transactions, percentOfTransactions;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _fetchTransactions(_this.props.currentUser.id);\n\n            case 2:\n              _ref3 = _context2.sent;\n              accessType = _ref3.accessType;\n              transactions = _ref3.transactions;\n              percentOfTransactions = _ref3.percentOfTransactions;\n\n              _this.setState({\n                accessType: accessType,\n                transactions: transactions,\n                percentOfTransactions: percentOfTransactions,\n                setTransaction: 1\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getAllCompleteCommission\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return commissionService.getAllTransactionCommission();\n\n            case 2:\n              data = _context3.sent;\n\n              _this.setState({\n                dataTransactionCommission: data\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"_previewImage\", function (image) {\n      var img = document.querySelector('.new-image');\n      var pre = document.querySelector('.preview-image');\n      var preI = document.querySelector('.view-input'); // const inp = document.querySelector(\"image-update\");\n\n      if (image !== null) {\n        var reader = new window.FileReader();\n        reader.addEventListener('load', function () {\n          var result = reader.result;\n          img.classList.add('hide-ne');\n          pre.src = result;\n          preI.src = result;\n        });\n        reader.readAsDataURL(image);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewAvatar\", function (party) {\n      var currentUser = _this.props.currentUser;\n\n      if (party) {\n        if (party.length === 0) {\n          return React.createElement(\"img\", {\n            className: \"demo-image\",\n            src: currentUser.avatar ? currentUser.avatar : '/static/images/default-avatar.png',\n            alt: \"\"\n          });\n        } else {\n          return party.map(function (party, index) {\n            return React.createElement(\"img\", {\n              key: index,\n              className: \"demo-image\",\n              src: party.user ? party.user.avatar ? party.user.avatar : '/static/images/default-avatar.png' : '/static/images/default-avatar.png',\n              alt: \"\"\n            });\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_toggleCashBalance\", function () {\n      _this.setState({\n        toggleCashBalance: !_this.state.toggleCashBalance\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleCreateMainImage\",\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(e) {\n        var src;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (e.target.files.length) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                // const { t } = this.props\n                src = URL.createObjectURL(e.target.files[0]);\n\n                _this.setState({\n                  srcImage: src,\n                  createMainImage: true,\n                  file: e.target.files[0]\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderHeaderButton\", function (index, transaction) {\n      if (_this.state.accessType[index] === TransactionAccessType.FULL && !transaction.status) {\n        return React.createElement(UncontrolledDropdown, null, React.createElement(DropdownToggle, {\n          tag: \"a\",\n          className: \"nav-link mr-3 p-0\"\n        }, React.createElement(\"i\", {\n          className: \"fa fa-angle-down\"\n        })), React.createElement(DropdownMenu, {\n          className: \"p-0\",\n          right: true\n        }, React.createElement(DropdownItem, {\n          className: \"border-bottom\",\n          onClick: function onClick() {\n            return _this._archiveTransaction(transaction.id);\n          }\n        }, React.createElement(\"i\", {\n          className: \"fas fa-ban mr-3\"\n        }), \"Archive\"), isCoordinator(_this.props.currentUser) && React.createElement(DropdownItem, {\n          onClick:\n          /*#__PURE__*/\n          _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee5() {\n            var allAgents;\n            return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    if (!isCoordinator(_this.props.currentUser)) {\n                      _context5.next = 5;\n                      break;\n                    }\n\n                    _context5.next = 3;\n                    return transactionService.getAllAgents(transaction.id);\n\n                  case 3:\n                    allAgents = _context5.sent;\n\n                    if (allAgents.transactionAgents.length === 0) {\n                      toastr.error('Nead at least 1 Link Agent to close this transaction!');\n                    } else {\n                      _this.setState({\n                        toggleCashBalance: !_this.state.toggleCashBalance,\n                        selectedTransactionId: transaction.id\n                      });\n                    }\n\n                  case 5:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5);\n          }))\n        }, React.createElement(\"i\", {\n          className: \"far fa-times-circle mr-3\"\n        }), \"Close\")));\n      } else return React.createElement(\"button\", {\n        className: \"btn text-muted\",\n        disabled: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_percentOfTransaction\", function (transactionId) {\n      var percentOfTransaction = _this.state.percentOfTransactions.find(function (item) {\n        return item.transactionId === transactionId;\n      });\n\n      if (percentOfTransaction) {\n        return percentOfTransaction.percent;\n      }\n\n      return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewStatus\", function (transactionId) {\n      switch (transactionId) {\n        case 'pre-offer':\n          return 'Pre-offer';\n\n        case 'under-contract':\n          return 'Under contract';\n\n        case 'sold':\n          return 'Sold';\n\n        case 'terminated':\n          return 'Terminated';\n\n        case 'withdrawn':\n          return 'Withdrawn';\n\n        case 'archived':\n          return 'Archived';\n\n        case 'pre-listing':\n          return 'Pre-listing';\n\n        case 'active-listing':\n          return 'Active listing';\n\n        case 'private-listing':\n          return 'Private listing';\n\n        case 'leased':\n          return 'Leased';\n\n        case 'new':\n          return 'New';\n\n        case 'in-process':\n          return 'In-process';\n\n        case 'done':\n          return 'Done';\n\n        default:\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderTimeline\", function () {\n      var groupTimes = _.groupBy(_this.state.activities, function (item) {\n        return moment(item.createdAt).format('L');\n      });\n\n      var groupTimesArray = _.chain(groupTimes).toPairs().sort(function (a, b) {\n        return b - a;\n      }).value();\n\n      return groupTimesArray.map(function (activity, index) {\n        return React.createElement(React.Fragment, {\n          key: index\n        }, React.createElement(\"p\", {\n          className: \"mt-3 ml-2\"\n        }, activity[0]), activity[1].map(function (itemTime, index) {\n          return React.createElement(\"div\", {\n            className: \"border-bottom p-0 row\",\n            key: index\n          }, React.createElement(\"div\", {\n            className: \"col-2 col-sm-1 col-md-1 col-xl-2  row align-items-center position-relative\"\n          }, React.createElement(\"div\", {\n            className: \"circle-timeline position-absolute timeline-sidebar_circle\"\n          })), React.createElement(\"div\", {\n            className: \"col-10 col-sm-11 col-md-11 col-xl-10 text-left \"\n          }, React.createElement(\"div\", null, React.createElement(\"b\", null, getRoleLabel(itemTime.role))), React.createElement(\"span\", {\n            className: \"card-text \"\n          }, React.createElement(\"b\", null, moment(itemTime.createdAt).format('LT'))), React.createElement(\"br\", null), React.createElement(\"span\", null, \"\".concat(itemTime.data ? itemTime.data.title : '', \" \").concat(getTransactionActivity(itemTime.type), \" \").concat(itemTime.data ? getRoleLabel(itemTime.data.currentRole) : ''))));\n        }));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_toggleModal\", function () {\n      _this.setState({\n        toggleModal: !_this.state.toggleModal // toggleModal: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_selectView\", function (e) {\n      _this.setState({\n        isArchivedView: e.currentTarget.textContent === 'Archived',\n        selectedView: e.currentTarget.textContent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_selectSort\", function (e) {\n      var sort = '';\n      var active = document.getElementsByClassName('activeB');\n\n      _toConsumableArray(active).forEach(function (acT) {\n        acT.classList.remove('activeB');\n      });\n\n      e.currentTarget.className += ' activeB';\n\n      switch (e.currentTarget.textContent) {\n        case 'Name A-Z':\n          sort = 'A-Z';\n          break;\n\n        case 'Name Z-A':\n          sort = 'Z-A';\n          break;\n\n        case 'Recent':\n          sort = 'Recent';\n          break;\n\n        case 'Oldest':\n          sort = 'Oldest';\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState({\n        selectedSort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_archiveTransaction\",\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(transactionId) {\n        var _ref8, accessType, transactions, percentOfTransactions;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return transactionService.archiveTransaction(transactionId);\n\n              case 2:\n                toastr.success('Archived');\n                _context6.next = 5;\n                return _fetchTransactions(_this.props.currentUser.id);\n\n              case 5:\n                _ref8 = _context6.sent;\n                accessType = _ref8.accessType;\n                transactions = _ref8.transactions;\n                percentOfTransactions = _ref8.percentOfTransactions;\n\n                _this.setState({\n                  accessType: accessType,\n                  transactions: transactions,\n                  percentOfTransactions: percentOfTransactions\n                });\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x4) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_closeTransaction\",\n    /*#__PURE__*/\n    function () {\n      var _ref9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(transactionId) {\n        var _ref10, accessType, transactions, percentOfTransactions;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return transactionService.closeTransaction(transactionId);\n\n              case 2:\n                toastr.success('Closed');\n                _context7.next = 5;\n                return _fetchTransactions(_this.props.currentUser.id);\n\n              case 5:\n                _ref10 = _context7.sent;\n                accessType = _ref10.accessType;\n                transactions = _ref10.transactions;\n                percentOfTransactions = _ref10.percentOfTransactions;\n\n                _this.setState({\n                  accessType: accessType,\n                  transactions: transactions,\n                  percentOfTransactions: percentOfTransactions\n                });\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x5) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_getClosingDate\", function (transactionId) {\n      var dataTransactionCommission = _this.state.dataTransactionCommission;\n      var data = dataTransactionCommission.find(function (commission) {\n        return commission.transactionId === transactionId;\n      });\n\n      if (data) {\n        return data.dateClosing || data.createdAt;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderTransactions\", function () {\n      if (_this.props.selectedView === 'Complete') {\n        return React.createElement(React.Fragment, null, _this.state.setTransaction === 1 ? React.createElement(PaginationComponent, {\n          data: _this.state.transactions,\n          view: \"Complete\",\n          viewActive: function viewActive(currentItems) {\n            return _this._viewComplete(currentItems);\n          }\n        }) : React.createElement(\"div\", null, \"Load data\"), React.createElement(\"br\", null));\n      }\n\n      if (_this.props.selectedView === 'Archived') {\n        return React.createElement(React.Fragment, null, _this.state.setTransaction === 1 ? React.createElement(PaginationComponent, {\n          data: _this.state.transactions,\n          view: \"Archived\",\n          viewActive: function viewActive(currentItems) {\n            return _this._viewArchived(currentItems);\n          }\n        }) : React.createElement(\"div\", null, \"Load data\"), React.createElement(\"br\", null));\n      }\n\n      if (_this.props.selectedView === 'In Progress') {\n        return React.createElement(React.Fragment, null, _this.state.setTransaction === 1 ? React.createElement(PaginationComponent, {\n          data: _this.state.transactions,\n          view: \"In Progress\",\n          viewActive: function viewActive(currentItems) {\n            return _this._viewActive(currentItems);\n          }\n        }) : React.createElement(\"div\", null, \"Load data\"), React.createElement(\"br\", null));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewArchived\", function (currentItems) {\n      return currentItems.map(function (transaction, index) {\n        if (transaction.status === TransactionStatus.ARCHIVED) {\n          return React.createElement(\"div\", {\n            className: \"demo\",\n            key: index\n          }, React.createElement(\"div\", {\n            className: \"box-demo\"\n          }, React.createElement(\"div\", {\n            className: \"percent\"\n          }, React.createElement(\"div\", {\n            \"data-progress\": _this._percentOfTransaction(transaction.id),\n            className: \"th-17 d-flex justify-content-center align-items-center display-6 text-white\",\n            style: {\n              '&::after': {\n                backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n              }\n            }\n          })), React.createElement(\"p\", {\n            className: \"demo-title\"\n          }, transaction.address), React.createElement(\"a\", {\n            className: \"demo-link\",\n            href: \"\".concat(transaction.url)\n          }, transaction.url), React.createElement(\"div\", {\n            className: \"state-demo\"\n          }, moment(transaction.closingDate).format('ll') === 'Jan 1, 1970' ? 'None' : moment(transaction.closingDate).format('ll')), React.createElement(\"div\", {\n            className: \"demo-des\"\n          }, transaction.description), React.createElement(Link, {\n            route: \"/my-transactions/\".concat(transaction.id)\n          }, React.createElement(\"div\", {\n            className: \"demo-button-view\"\n          }, \"View Project\"))));\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewActive\", function (currentItems) {\n      if (currentItems.length > 0) {\n        return currentItems.map(function (transaction, index) {\n          if (transaction.status !== TransactionStatus.CLOSED && transaction.status !== TransactionStatus.ARCHIVED) {\n            return React.createElement(\"div\", {\n              className: \"demo\",\n              key: index\n            }, React.createElement(\"div\", {\n              className: \"box-demo\"\n            }, React.createElement(\"div\", {\n              className: \"percent\"\n            }, React.createElement(\"div\", {\n              \"data-progress\": _this._percentOfTransaction(transaction.id),\n              className: \"th-17 d-flex justify-content-center align-items-center display-6 text-white\",\n              style: {\n                '&::after': {\n                  backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                }\n              }\n            })), React.createElement(\"p\", {\n              className: \"demo-title\"\n            }, transaction.address), React.createElement(\"a\", {\n              className: \"demo-link\",\n              href: \"\".concat(transaction.url)\n            }, transaction.url), React.createElement(\"div\", {\n              className: \"state-demo\"\n            }, _this._viewStatus(transaction.transactionTypeStatus)), React.createElement(\"div\", {\n              className: \"demo-des\"\n            }, transaction.description), React.createElement(\"div\", {\n              className: \"demo-image-parties\"\n            }, _this._viewAvatar(transaction.parties)), React.createElement(Link, {\n              route: \"/my-transactions/\".concat(transaction.id)\n            }, React.createElement(\"div\", {\n              className: \"demo-button-view\"\n            }, \"View Project\"))));\n          }\n        });\n      } else {\n        return React.createElement(React.Fragment, null, _this.props.currentUser.roles[0].name !== 'user' ? React.createElement(\"div\", {\n          className: \"demo-2\",\n          onClick: function onClick() {\n            _this.setState({\n              isToggleModalNewTransaction: true\n            });\n          }\n        }, React.createElement(\"div\", {\n          className: \"box-demo2\"\n        }, React.createElement(\"div\", null, \"+\"), React.createElement(\"h4\", null, \"New Transaction\"))) : null);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_viewComplete\", function (currentItems) {\n      if (currentItems.length > 0) {\n        return currentItems.map(function (transaction, index) {\n          return React.createElement(\"div\", {\n            className: \"demo\",\n            key: index\n          }, React.createElement(\"div\", {\n            className: \"box-demo\"\n          }, React.createElement(\"div\", {\n            className: \"percent\"\n          }, React.createElement(\"div\", {\n            \"data-progress\": _this._percentOfTransaction(transaction.id),\n            className: \"th-17 d-flex justify-content-center align-items-center display-6 text-white\",\n            style: {\n              '&::after': {\n                backgroundImage: 'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n              }\n            }\n          })), React.createElement(\"p\", {\n            className: \"demo-title\"\n          }, transaction.address), React.createElement(\"a\", {\n            className: \"demo-link\",\n            href: \"\".concat(transaction.url)\n          }, transaction.url), React.createElement(\"div\", {\n            className: \"state-demo\"\n          }, moment(_this._getClosingDate(transaction.id)).format('ll')), React.createElement(\"div\", {\n            className: \"demo-des\"\n          }, transaction.description), React.createElement(Link, {\n            route: \"/my-transactions/\".concat(transaction.id)\n          }, React.createElement(\"div\", {\n            className: \"demo-button-view\",\n            onClick:\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee9() {\n              var dispatch;\n              return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      dispatch = _this.props.dispatch;\n                      setTimeout(\n                      /*#__PURE__*/\n                      _asyncToGenerator(\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function _callee8() {\n                        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                          while (1) {\n                            switch (_context8.prev = _context8.next) {\n                              case 0:\n                                _context8.next = 2;\n                                return dispatch(authRedux.updateTest({\n                                  data: 'In Progress'\n                                }));\n\n                              case 2:\n                              case \"end\":\n                                return _context8.stop();\n                            }\n                          }\n                        }, _callee8);\n                      })), 2000);\n\n                    case 2:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9);\n            }))\n          }, \"View Project\"))));\n        });\n      } else {\n        return React.createElement(\"div\", {\n          style: {\n            height: '510px'\n          }\n        });\n      }\n    });\n\n    _this.state = {\n      selectedView: 'In Progress',\n      selectedSort: 'A-Z',\n      isArchivedView: false,\n      isSubmit: true,\n      selectedTransactionId: null,\n      toggleModal: false,\n      toggleCashBalance: false,\n      accessType: [],\n      transactions: [],\n      activities: [],\n      percentOfTransactions: [],\n      percent: 0,\n      pageNumber: 0,\n      setPageNumber: 0,\n      srcImage: null,\n      createMainImage: false,\n      file: null,\n      isToggleModalNewTransaction: false,\n      setTransaction: 0,\n      dataTransactionCommission: []\n    };\n    return _this;\n  }\n\n  _createClass(MyTransactionsPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        setTransaction: 1\n      });\n\n      this._fetchData();\n\n      this._getAllCompleteCommission();\n\n      this.setState({\n        setTransaction: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isToggleModalNewTransaction = this.state.isToggleModalNewTransaction;\n      return React.createElement(\"div\", {\n        className: \"box-main\"\n      }, React.createElement(Head, null, React.createElement(\"title\", null, \"Transactions\")), React.createElement(\"div\", {\n        className: \"row m-0\"\n      }, React.createElement(\"div\", {\n        className: \"abc\",\n        style: {\n          width: '100%'\n        }\n      }, this._renderTransactions())), React.createElement(\"footer\", {\n        className: \"footer-card\",\n        style: {\n          padding: '2rem 0'\n        }\n      }, React.createElement(\"div\", {\n        className: \"footer-page\"\n      }, React.createElement(\"div\", {\n        className: \"footer-p1\"\n      }, \"\\xA9 Copyright Link Management Systems. All rights reserved\"), React.createElement(\"div\", {\n        className: \"footer-p2\"\n      }, \"Powered by Link Brokerages\"))), this.state.toggleCashBalance && React.createElement(CashBalanceModal, {\n        toggle: this._toggleCashBalance,\n        currentUser: this.props.currentUser,\n        selectedTransactionId: this.state.selectedTransactionId,\n        handleCloseTransaction: this._closeTransaction\n      }), isToggleModalNewTransaction && React.createElement(AddNewTransactionModal, {\n        currentUser: this.props.currentUser,\n        isToggleModalNewTransaction: isToggleModalNewTransaction,\n        toggleMemberModal: function toggleMemberModal() {\n          return _this2.setState({\n            isToggleModalNewTransaction: !isToggleModalNewTransaction\n          });\n        }\n      }));\n    }\n  }]);\n\n  return MyTransactionsPage;\n}(Component); // test\n\n\nexport default userOnly(MyTransactionsPage);","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/MyTransactionsPage/index.js"],"names":["React","useState","Component","useMemo","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","toastr","moment","_","Head","Link","commissionService","transactionService","TransactionAccessType","TransactionStatus","userOnly","getTransactionActivity","getRoleLabel","isCoordinator","CashBalanceModal","AddNewTransactionModal","authRedux","_fetchTransactions","userId","getTransactionsForUser","transactions","all","map","item","getTransactionPartyByUserId","id","access","accessType","promise","transaction","transactionId","percent","percentComplete","percentOfTransactions","PaginationComponent","data","viewActive","view","currentPage","setCurrentPage","itemsPerPage","pageNumberLimit","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","dataSet","filter","x","status","CLOSED","ARCHIVED","handleClick","Number","target","pages","i","Math","ceil","length","push","indexOfLastItem","indexFirstItem","currentItems","slice","renderPageNumbers","number","marginLeft","cursor","handleNextBtn","handelPrevBtn","pageIncrementBtn","pageDecrementBtn","width","border","MyTransactionsPage","ctx","headerText","props","currentUser","setState","setTransaction","getAllTransactionCommission","dataTransactionCommission","image","img","document","querySelector","pre","preI","reader","window","FileReader","addEventListener","result","classList","add","src","readAsDataURL","party","avatar","index","user","toggleCashBalance","state","e","files","URL","createObjectURL","srcImage","createMainImage","file","FULL","_archiveTransaction","getAllAgents","allAgents","transactionAgents","error","selectedTransactionId","percentOfTransaction","find","groupTimes","groupBy","activities","createdAt","format","groupTimesArray","chain","toPairs","sort","a","b","value","activity","itemTime","role","title","type","currentRole","toggleModal","isArchivedView","currentTarget","textContent","selectedView","active","getElementsByClassName","forEach","acT","remove","className","selectedSort","archiveTransaction","success","closeTransaction","commission","dateClosing","_viewComplete","_viewArchived","_viewActive","_percentOfTransaction","backgroundImage","address","url","closingDate","description","_viewStatus","transactionTypeStatus","_viewAvatar","parties","roles","name","isToggleModalNewTransaction","_getClosingDate","dispatch","setTimeout","updateTest","height","isSubmit","pageNumber","setPageNumber","_fetchData","_getAllCompleteCommission","_renderTransactions","padding","_toggleCashBalance","_closeTransaction"],"mappings":"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","sourcesContent":["import React, { useState, Component, useMemo } from 'react'\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap'\nimport toastr from 'toastr'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport Head from 'next/head'\nimport { Link } from '../../../common/routes'\nimport { commissionService, transactionService } from '../../services'\nimport {\n  TransactionAccessType,\n  TransactionStatus\n} from '../../../common/models/Transaction'\nimport userOnly from '../../hocs/userOnly'\nimport { getTransactionActivity } from '../../view-models/Transaction'\nimport { getRoleLabel } from '../../view-models/User'\nimport { isCoordinator } from '../../../common/models/User'\nimport CashBalanceModal from '../../component/CashBalance'\nimport AddNewTransactionModal from '../../component/Transaction/AddNewTransactionModal'\nimport authRedux from '../../redux/authRedux'\n\nasync function _fetchTransactions (userId) {\n  const transactions = await transactionService.getTransactionsForUser()\n  const accessType = await Promise.all(\n    transactions.map(async item => {\n      const { access } = await transactionService.getTransactionPartyByUserId(\n        item.id,\n        userId\n      )\n      return access\n    })\n  )\n\n  const promise = transactions.map(transaction => {\n    return {\n      transactionId: transaction.id,\n      percent: transaction.percentComplete || 0\n    }\n  })\n  const percentOfTransactions = await Promise.all(promise)\n\n  return {\n    accessType,\n    transactions,\n    percentOfTransactions\n  }\n}\n\nconst PaginationComponent = ({ data, viewActive, view }) => {\n  // const [dataPage, setDataPage] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsPerPage] = useState(6)\n\n  const [pageNumberLimit] = useState(3)\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(3)\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0)\n  let dataSet = data\n  if (view === 'In Progress') {\n    dataSet = dataSet.filter(\n      x =>\n        x.status !== TransactionStatus.CLOSED &&\n        x.status !== TransactionStatus.ARCHIVED\n    )\n  }\n  if (view === 'Archived') {\n    dataSet = dataSet.filter(x => x.status === TransactionStatus.ARCHIVED)\n  }\n  if (view === 'Complete') {\n    dataSet = dataSet.filter(x => x.status === TransactionStatus.CLOSED)\n  }\n\n  const handleClick = dataSet => {\n    setCurrentPage(Number(dataSet.target.id))\n  }\n\n  const pages = []\n  for (let i = 1; i <= Math.ceil(dataSet.length / itemsPerPage); i++) {\n    pages.push(i)\n  }\n\n  const indexOfLastItem = useMemo(() => {\n    return currentPage * itemsPerPage\n  }, [currentPage])\n  const indexFirstItem = useMemo(() => {\n    return indexOfLastItem - itemsPerPage\n  }, [indexOfLastItem])\n\n  const currentItems = useMemo(() => {\n    return dataSet.slice(indexFirstItem, indexOfLastItem)\n  }, [indexFirstItem, indexOfLastItem, dataSet])\n\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={dataSet => handleClick(dataSet)}\n          className={currentPage === number ? 'active' : null}\n          style={{ marginLeft: '0.2rem', cursor: 'pointer' }}\n        >\n          {number}\n        </li>\n      )\n    } else {\n      return null\n    }\n  })\n\n  const handleNextBtn = () => {\n    setCurrentPage(currentPage + 1)\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit)\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit)\n    }\n  }\n\n  const handelPrevBtn = () => {\n    setCurrentPage(currentPage - 1)\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit)\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit)\n    }\n  }\n  let pageIncrementBtn = null\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = (\n      <li onClick={handleNextBtn} style={{ cursor: 'pointer' }}>\n        &hellip;\n      </li>\n    )\n  }\n  let pageDecrementBtn = null\n  if (currentPage > 3) {\n    pageDecrementBtn = (\n      <li onClick={handelPrevBtn} style={{ cursor: 'pointer' }}>\n        &hellip;\n      </li>\n    )\n  }\n\n  return (\n    <>\n      <div\n        className='row new-box-transaction'\n        style={{\n          width: '100%'\n        }}\n      >\n        {viewActive(currentItems)}\n      </div>\n      {currentItems.length > 0 ? (\n        <ul className='pageNumbers pt-4'>\n          <li className='' style={{ border: 'none' }}>\n            <button\n              className=''\n              onClick={() => handelPrevBtn()}\n              disabled={currentPage === pages[0]}\n            >\n              <i className='fas fa-angle-left mr-2' />\n              Previous\n            </button>\n          </li>\n          {pageDecrementBtn}\n          {renderPageNumbers}\n          {pageIncrementBtn}\n          <li className='ml-1' style={{ border: 'none' }}>\n            <button\n              onClick={() => handleNextBtn()}\n              disabled={currentPage === pages[pages.length - 1]}\n            >\n              Next\n              <i className='fas fa-angle-right ml-2' />\n            </button>\n          </li>\n        </ul>\n      ) : (\n        <></>\n      )}\n    </>\n  )\n}\n\nclass MyTransactionsPage extends Component {\n  static async getInitialProps (ctx) {\n    return {\n      headerText: 'Transactions'\n    }\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      selectedView: 'In Progress',\n      selectedSort: 'A-Z',\n      isArchivedView: false,\n      isSubmit: true,\n      selectedTransactionId: null,\n      toggleModal: false,\n      toggleCashBalance: false,\n      accessType: [],\n      transactions: [],\n      activities: [],\n      percentOfTransactions: [],\n      percent: 0,\n      pageNumber: 0,\n      setPageNumber: 0,\n      srcImage: null,\n      createMainImage: false,\n      file: null,\n      isToggleModalNewTransaction: false,\n      setTransaction: 0,\n      dataTransactionCommission: []\n    }\n  }\n\n  componentDidMount () {\n    this.setState({ setTransaction: 1 })\n    this._fetchData()\n    this._getAllCompleteCommission()\n    this.setState({ setTransaction: 0 })\n  }\n\n  _fetchData = async () => {\n    const {\n      accessType,\n      transactions,\n      percentOfTransactions\n    } = await _fetchTransactions(this.props.currentUser.id)\n    this.setState({\n      accessType: accessType,\n      transactions: transactions,\n      percentOfTransactions: percentOfTransactions,\n      setTransaction: 1\n    })\n  }\n\n  _getAllCompleteCommission = async () => {\n    const data = await commissionService.getAllTransactionCommission()\n\n    this.setState({\n      dataTransactionCommission: data\n    })\n  }\n\n  render () {\n    const { isToggleModalNewTransaction } = this.state\n    return (\n      <div className='box-main'>\n        <Head>\n          <title>Transactions</title>\n        </Head>\n        <div className='row m-0'>\n          <div\n            className='abc'\n            style={{\n              width: '100%'\n            }}\n          >\n            {this._renderTransactions()}\n          </div>\n        </div>\n        <footer className='footer-card' style={{ padding: '2rem 0' }}>\n          <div className='footer-page'>\n            <div className='footer-p1'>\n              © Copyright Link Management Systems. All rights reserved\n            </div>\n            <div className='footer-p2'>Powered by Link Brokerages</div>\n          </div>\n        </footer>\n        {this.state.toggleCashBalance && (\n          <CashBalanceModal\n            toggle={this._toggleCashBalance}\n            currentUser={this.props.currentUser}\n            selectedTransactionId={this.state.selectedTransactionId}\n            handleCloseTransaction={this._closeTransaction}\n          />\n        )}\n        {isToggleModalNewTransaction && (\n          <AddNewTransactionModal\n            currentUser={this.props.currentUser}\n            isToggleModalNewTransaction={isToggleModalNewTransaction}\n            toggleMemberModal={() =>\n              this.setState({\n                isToggleModalNewTransaction: !isToggleModalNewTransaction\n              })\n            }\n          />\n        )}\n      </div>\n    )\n  }\n\n  _previewImage = image => {\n    const img = document.querySelector('.new-image')\n    const pre = document.querySelector('.preview-image')\n    const preI = document.querySelector('.view-input')\n\n    // const inp = document.querySelector(\"image-update\");\n\n    if (image !== null) {\n      const reader = new window.FileReader()\n      reader.addEventListener('load', function () {\n        const result = reader.result\n        img.classList.add('hide-ne')\n        pre.src = result\n        preI.src = result\n      })\n      reader.readAsDataURL(image)\n    }\n  }\n  _viewAvatar = party => {\n    const { currentUser } = this.props\n    if (party) {\n      if (party.length === 0) {\n        return (\n          <img\n            className='demo-image'\n            src={\n              currentUser.avatar\n                ? currentUser.avatar\n                : '/static/images/default-avatar.png'\n            }\n            alt=''\n          />\n        )\n      } else {\n        return party.map((party, index) => (\n          <img\n            key={index}\n            className='demo-image'\n            src={\n              party.user\n                ? party.user.avatar\n                  ? party.user.avatar\n                  : '/static/images/default-avatar.png'\n                : '/static/images/default-avatar.png'\n            }\n            alt=''\n          />\n        ))\n      }\n    }\n  }\n\n  _toggleCashBalance = () => {\n    this.setState({\n      toggleCashBalance: !this.state.toggleCashBalance\n    })\n  }\n  _handleCreateMainImage = async e => {\n    if (!e.target.files.length) return\n    // const { t } = this.props\n    const src = URL.createObjectURL(e.target.files[0])\n    this.setState({\n      srcImage: src,\n      createMainImage: true,\n      file: e.target.files[0]\n    })\n  }\n\n  _renderHeaderButton = (index, transaction) => {\n    if (\n      this.state.accessType[index] === TransactionAccessType.FULL &&\n      !transaction.status\n    ) {\n      return (\n        <UncontrolledDropdown>\n          <DropdownToggle tag='a' className='nav-link mr-3 p-0'>\n            <i className='fa fa-angle-down' />\n          </DropdownToggle>\n          <DropdownMenu className='p-0' right>\n            <DropdownItem\n              className='border-bottom'\n              onClick={() => this._archiveTransaction(transaction.id)}\n            >\n              <i className='fas fa-ban mr-3' />\n              Archive\n            </DropdownItem>\n\n            {isCoordinator(this.props.currentUser) && (\n              <DropdownItem\n                onClick={async () => {\n                  if (isCoordinator(this.props.currentUser)) {\n                    const allAgents = await transactionService.getAllAgents(\n                      transaction.id\n                    )\n                    if (allAgents.transactionAgents.length === 0) {\n                      toastr.error(\n                        'Nead at least 1 Link Agent to close this transaction!'\n                      )\n                    } else {\n                      this.setState({\n                        toggleCashBalance: !this.state.toggleCashBalance,\n                        selectedTransactionId: transaction.id\n                      })\n                    }\n                  }\n                }}\n              >\n                <i className='far fa-times-circle mr-3' />\n                Close\n              </DropdownItem>\n            )}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )\n    } else return <button className='btn text-muted' disabled />\n  }\n\n  _percentOfTransaction = transactionId => {\n    const percentOfTransaction = this.state.percentOfTransactions.find(\n      item => item.transactionId === transactionId\n    )\n    if (percentOfTransaction) {\n      return percentOfTransaction.percent\n    }\n    return 0\n  }\n  _viewStatus = transactionId => {\n    switch (transactionId) {\n      case 'pre-offer':\n        return 'Pre-offer'\n      case 'under-contract':\n        return 'Under contract'\n      case 'sold':\n        return 'Sold'\n      case 'terminated':\n        return 'Terminated'\n      case 'withdrawn':\n        return 'Withdrawn'\n      case 'archived':\n        return 'Archived'\n      case 'pre-listing':\n        return 'Pre-listing'\n      case 'active-listing':\n        return 'Active listing'\n      case 'private-listing':\n        return 'Private listing'\n      case 'leased':\n        return 'Leased'\n      case 'new':\n        return 'New'\n      case 'in-process':\n        return 'In-process'\n      case 'done':\n        return 'Done'\n      default:\n    }\n  }\n\n  _renderTimeline = () => {\n    let groupTimes = _.groupBy(this.state.activities, function (item) {\n      return moment(item.createdAt).format('L')\n    })\n    let groupTimesArray = _.chain(groupTimes)\n      .toPairs()\n      .sort(function (a, b) {\n        return b - a\n      })\n      .value()\n    return groupTimesArray.map((activity, index) => (\n      <React.Fragment key={index}>\n        <p className='mt-3 ml-2'>{activity[0]}</p>\n        {activity[1].map((itemTime, index) => (\n          <div className='border-bottom p-0 row' key={index}>\n            <div className='col-2 col-sm-1 col-md-1 col-xl-2  row align-items-center position-relative'>\n              <div className='circle-timeline position-absolute timeline-sidebar_circle' />\n            </div>\n            <div className='col-10 col-sm-11 col-md-11 col-xl-10 text-left '>\n              <div>\n                <b>{getRoleLabel(itemTime.role)}</b>\n              </div>\n              <span className='card-text '>\n                <b>{moment(itemTime.createdAt).format('LT')}</b>\n              </span>\n              <br />\n              <span>\n                {`${\n                  itemTime.data ? itemTime.data.title : ''\n                } ${getTransactionActivity(itemTime.type)} ${\n                  itemTime.data ? getRoleLabel(itemTime.data.currentRole) : ''\n                }`}\n              </span>\n            </div>\n          </div>\n        ))}\n      </React.Fragment>\n    ))\n  }\n\n  _toggleModal = () => {\n    this.setState({\n      toggleModal: !this.state.toggleModal\n      // toggleModal: true\n    })\n  }\n\n  _selectView = e => {\n    this.setState({\n      isArchivedView: e.currentTarget.textContent === 'Archived',\n      selectedView: e.currentTarget.textContent\n    })\n  }\n  _selectSort = e => {\n    let sort = ''\n    let active = document.getElementsByClassName('activeB')\n    ;[...active].forEach(acT => {\n      acT.classList.remove('activeB')\n    })\n    e.currentTarget.className += ' activeB'\n    switch (e.currentTarget.textContent) {\n      case 'Name A-Z':\n        sort = 'A-Z'\n        break\n      case 'Name Z-A':\n        sort = 'Z-A'\n        break\n      case 'Recent':\n        sort = 'Recent'\n        break\n      case 'Oldest':\n        sort = 'Oldest'\n        break\n      default:\n        break\n    }\n    this.setState({\n      selectedSort: sort\n    })\n  }\n  _archiveTransaction = async transactionId => {\n    await transactionService.archiveTransaction(transactionId)\n    toastr.success('Archived')\n    const {\n      accessType,\n      transactions,\n\n      percentOfTransactions\n    } = await _fetchTransactions(this.props.currentUser.id)\n\n    this.setState({\n      accessType,\n      transactions,\n\n      percentOfTransactions\n    })\n  }\n\n  _closeTransaction = async transactionId => {\n    await transactionService.closeTransaction(transactionId)\n    toastr.success('Closed')\n    const {\n      accessType,\n      transactions,\n      percentOfTransactions\n    } = await _fetchTransactions(this.props.currentUser.id)\n\n    this.setState({\n      accessType,\n      transactions,\n      percentOfTransactions\n    })\n  }\n\n  _getClosingDate = transactionId => {\n    const { dataTransactionCommission } = this.state\n    const data = dataTransactionCommission.find(\n      commission => commission.transactionId === transactionId\n    )\n    if (data) {\n      return data.dateClosing || data.createdAt\n    }\n  }\n\n  _renderTransactions = () => {\n    if (this.props.selectedView === 'Complete') {\n      return (\n        <>\n          {this.state.setTransaction === 1 ? (\n            <PaginationComponent\n              data={this.state.transactions}\n              view='Complete'\n              viewActive={currentItems => this._viewComplete(currentItems)}\n            />\n          ) : (\n            <div>Load data</div>\n          )}\n          <br />\n        </>\n      )\n    }\n    if (this.props.selectedView === 'Archived') {\n      return (\n        <>\n          {this.state.setTransaction === 1 ? (\n            <PaginationComponent\n              data={this.state.transactions}\n              view='Archived'\n              viewActive={currentItems => this._viewArchived(currentItems)}\n            />\n          ) : (\n            <div>Load data</div>\n          )}\n          <br />\n        </>\n      )\n    }\n    if (this.props.selectedView === 'In Progress') {\n      return (\n        <>\n          {this.state.setTransaction === 1 ? (\n            <PaginationComponent\n              data={this.state.transactions}\n              view='In Progress'\n              viewActive={currentItems => this._viewActive(currentItems)}\n            />\n          ) : (\n            <div>Load data</div>\n          )}\n          <br />\n        </>\n      )\n    }\n  }\n  _viewArchived = currentItems =>\n    currentItems.map((transaction, index) => {\n      if (transaction.status === TransactionStatus.ARCHIVED) {\n        return (\n          <div className='demo' key={index}>\n            <div className='box-demo'>\n              <div className='percent'>\n                <div\n                  data-progress={this._percentOfTransaction(transaction.id)}\n                  className='th-17 d-flex justify-content-center align-items-center display-6 text-white'\n                  style={{\n                    '&::after': {\n                      backgroundImage:\n                        'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                    }\n                  }}\n                />\n              </div>\n              <p className='demo-title'>{transaction.address}</p>\n              <a className='demo-link' href={`${transaction.url}`}>\n                {transaction.url}\n              </a>\n              <div className='state-demo'>\n                {moment(transaction.closingDate).format('ll') === 'Jan 1, 1970'\n                  ? 'None'\n                  : moment(transaction.closingDate).format('ll')}\n              </div>\n              <div className='demo-des'>{transaction.description}</div>\n              <Link route={`/my-transactions/${transaction.id}`}>\n                <div className='demo-button-view'>View Project</div>\n              </Link>\n            </div>\n          </div>\n        )\n      }\n    })\n\n  _viewActive = currentItems => {\n    if (currentItems.length > 0) {\n      return currentItems.map((transaction, index) => {\n        if (\n          transaction.status !== TransactionStatus.CLOSED &&\n          transaction.status !== TransactionStatus.ARCHIVED\n        ) {\n          return (\n            <div className='demo' key={index}>\n              <div className='box-demo'>\n                <div className='percent'>\n                  <div\n                    data-progress={this._percentOfTransaction(transaction.id)}\n                    className='th-17 d-flex justify-content-center align-items-center display-6 text-white'\n                    style={{\n                      '&::after': {\n                        backgroundImage:\n                          'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                      }\n                    }}\n                  />\n                </div>\n                <p className='demo-title'>{transaction.address}</p>\n                <a className='demo-link' href={`${transaction.url}`}>\n                  {transaction.url}\n                </a>\n                <div className='state-demo'>\n                  {this._viewStatus(transaction.transactionTypeStatus)}\n                </div>\n                <div className='demo-des'>{transaction.description}</div>\n                <div className='demo-image-parties'>\n                  {this._viewAvatar(transaction.parties)}\n                </div>\n\n                <Link route={`/my-transactions/${transaction.id}`}>\n                  <div className='demo-button-view'>View Project</div>\n                </Link>\n              </div>\n            </div>\n          )\n        }\n      })\n    } else {\n      return (\n        <>\n          {this.props.currentUser.roles[0].name !== 'user' ? (\n            <div\n              className='demo-2'\n              onClick={() => {\n                this.setState({ isToggleModalNewTransaction: true })\n              }}\n            >\n              <div className='box-demo2'>\n                <div>+</div>\n                <h4>New Transaction</h4>\n              </div>\n            </div>\n          ) : null}\n        </>\n      )\n    }\n  }\n  _viewComplete = currentItems => {\n    if (currentItems.length > 0) {\n      return currentItems.map((transaction, index) => (\n        <div className='demo' key={index}>\n          <div className='box-demo'>\n            <div className='percent'>\n              <div\n                data-progress={this._percentOfTransaction(transaction.id)}\n                className='th-17 d-flex justify-content-center align-items-center display-6 text-white'\n                style={{\n                  '&::after': {\n                    backgroundImage:\n                      'linear-gradient(90deg, #ddd 50%, transparent 50%, transparent), linear-gradient(180deg, #0083ff 50%, #ddd 50%, #ddd)'\n                  }\n                }}\n              />\n            </div>\n            <p className='demo-title'>{transaction.address}</p>\n            <a className='demo-link' href={`${transaction.url}`}>\n              {transaction.url}\n            </a>\n            <div className='state-demo'>\n              {moment(this._getClosingDate(transaction.id)).format('ll')}\n            </div>\n            <div className='demo-des'>{transaction.description}</div>\n            <Link route={`/my-transactions/${transaction.id}`}>\n              <div\n                className='demo-button-view'\n                onClick={async () => {\n                  const { dispatch } = this.props\n                  setTimeout(async () => {\n                    await dispatch(\n                      authRedux.updateTest({ data: 'In Progress' })\n                    )\n                  }, 2000)\n                }}\n              >\n                View Project\n              </div>\n            </Link>\n          </div>\n        </div>\n      ))\n    } else {\n      return <div style={{ height: '510px' }} />\n    }\n  }\n}\n\n// test\n\nexport default userOnly(MyTransactionsPage)\n"]},"metadata":{},"sourceType":"module"}