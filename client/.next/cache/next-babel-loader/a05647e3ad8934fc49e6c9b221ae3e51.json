{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/slicedToArray\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Modal } from 'reactstrap';\nimport { isEmpty, isEqual, uniqWith } from 'lodash';\nimport { Formik } from 'formik';\nimport toastr from 'toastr';\nimport Dropzone from 'react-dropzone';\nimport { DataAccessType, MEGABYTE, MAX_FILE_SIZE, FILE_TYPE, DocumentSpecies } from '../../../common/models/Transaction';\nimport { transactionService } from '../../services';\nimport { getDataAccessType } from '../../../common/view-models/Transaction'; // ===== Select Input =====\n\nvar SelectInput = function SelectInput(_ref) {\n  var label = _ref.label,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      options = _ref.options;\n  return React.createElement(\"div\", {\n    className: \"form-group\"\n  }, label && React.createElement(\"label\", {\n    className: \"tittle-mini-ver\"\n  }, label), React.createElement(\"select\", {\n    className: \"form-control\",\n    name: name,\n    onChange: onChange,\n    value: value\n  }, options.map(function (option, index) {\n    return React.createElement(\"option\", {\n      key: \"option-\".concat(index),\n      value: option.value\n    }, option.label);\n  })));\n}; // ===== Form =====\n\n\nvar Form = function Form(_ref2) {\n  var partiesOfTransaction = _ref2.partiesOfTransaction,\n      toggle = _ref2.toggle,\n      currentParty = _ref2.currentParty;\n  var defaultRecipientOption = {\n    value: '',\n    label: 'Name'\n  };\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1]; // ===== Dropdown to select document =====\n  // Document options\n  // const documentOptions = documentList.map(doc => ({\n  //   value: doc.id,\n  //   label: doc.title\n  // }))\n  // Action options\n\n\n  var actionOptions = [{\n    value: DataAccessType.VIEW_ONLY,\n    label: getDataAccessType(DataAccessType.VIEW_ONLY)\n  }, {\n    value: DataAccessType.REVIEW_DOCUMENT,\n    label: getDataAccessType(DataAccessType.REVIEW_DOCUMENT)\n  }, {\n    value: DataAccessType.SIGN_DOCUMENT,\n    label: getDataAccessType(DataAccessType.SIGN_DOCUMENT)\n  }];\n\n  var _useState3 = useState([1, 2, 3, 4]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      recipientNumbers = _useState4[0],\n      setRecipientNumbers = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      partyOptions = _useState6[0],\n      setPartyOptions = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      signerInfo = _useState8[0],\n      setSignerInfo = _useState8[1];\n\n  var _useState9 = useState({\n    title: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      initialValues = _useState10[0],\n      setInitialValues = _useState10[1];\n\n  useEffect(function () {\n    var tempOptions = [];\n    var tempInfo = {};\n    partiesOfTransaction.forEach(function (party) {\n      // PartyOption\n      tempOptions.push({\n        value: party.id,\n        label: party.name\n      }); // User info\n\n      tempInfo[party.id] = {\n        email: party.email,\n        name: party.name,\n        id: party.id\n      };\n    });\n    setPartyOptions([defaultRecipientOption].concat(tempOptions));\n    setSignerInfo(tempInfo); // Initial values\n\n    var tempInitialValues = {};\n    recipientNumbers.forEach(function (index) {\n      tempInitialValues[\"recipient\".concat(index)] = {\n        party: defaultRecipientOption.value,\n        action: actionOptions[0].value\n      };\n    });\n    setInitialValues(_objectSpread({}, initialValues, tempInitialValues));\n  }, []);\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(values, action) {\n      var setSubmitting, newDocument, signGroups, otherGroups, signers, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = action.setSubmitting;\n              setSubmitting(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return transactionService.createFileDocument({\n                file: files[0],\n                title: values.title,\n                role: currentParty.role,\n                creatorId: currentParty.id,\n                partyId: currentParty.id,\n                transactionId: currentParty.transactionId,\n                documentType: DocumentSpecies.ENVELOPE\n              });\n\n            case 5:\n              newDocument = _context.sent;\n\n              if (!newDocument) {\n                _context.next = 21;\n                break;\n              }\n\n              // \"Remove empty element\" & \"Filter by group\"\n              signGroups = [];\n              otherGroups = [];\n              signers = [];\n              recipientNumbers.forEach(function (index) {\n                var action = values[\"recipient\".concat(index)].action;\n                var assignedPartyId = values[\"recipient\".concat(index)].party;\n\n                if (action && !isEmpty(assignedPartyId)) {\n                  var actionData = {\n                    creatorId: currentParty.id,\n                    documentId: newDocument.id,\n                    action: action,\n                    assignedPartyId: assignedPartyId\n                  };\n\n                  if (action === DataAccessType.SIGN_DOCUMENT) {\n                    signGroups.push(actionData);\n                    signers.push(signerInfo[assignedPartyId]);\n                  } else {\n                    otherGroups.push(actionData);\n                  }\n                }\n              }); // Remove duplicate object from array\n\n              otherGroups = uniqWith(otherGroups, isEqual); // Create action for otherGroups\n\n              _context.next = 14;\n              return transactionService.createDocumentsAction(otherGroups);\n\n            case 14:\n              if (!(signers.length > 0)) {\n                _context.next = 21;\n                break;\n              }\n\n              // Remove duplicate object from array\n              signGroups = uniqWith(signGroups, isEqual);\n              signers = uniqWith(signers, isEqual);\n              _context.next = 19;\n              return transactionService.getUriToSignDocument(newDocument.id, {\n                signers: signers,\n                creatorId: currentParty.id\n              });\n\n            case 19:\n              res = _context.sent;\n\n              if (res && res.url) {\n                if (window) {\n                  window.open(res.url, '_blank');\n                }\n              }\n\n            case 21:\n              toggle();\n              toastr.success('Success');\n              _context.next = 28;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t0 = _context[\"catch\"](2);\n              toastr.error(_context.t0.message);\n\n            case 28:\n              _context.prev = 28;\n              setSubmitting(false);\n              return _context.finish(28);\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 25, 28, 31]]);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleAddARecipient = function handleAddARecipient(values) {\n    var index = recipientNumbers.length + 1; // Add recipient numbers\n\n    setRecipientNumbers([].concat(_toConsumableArray(recipientNumbers), [index])); // Update initialValues\n\n    setInitialValues(_objectSpread({}, values, _defineProperty({}, \"recipient\".concat(index), {\n      party: defaultRecipientOption.value,\n      action: actionOptions[0].value\n    })));\n  };\n\n  var onDrop = useCallback(function (files) {\n    setFiles(files);\n  }, [setFiles]);\n\n  var fileTooLarge = function fileTooLarge() {\n    setFiles('large');\n  };\n\n  var renderUploadDocument = function renderUploadDocument(handleChange) {\n    return React.createElement(\"div\", null, React.createElement(\"div\", {\n      className: \"form-group\"\n    }, React.createElement(\"label\", {\n      className: \"tittle-mini-ver\"\n    }, \" Document information\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Type here\",\n      name: \"title\",\n      onChange: handleChange,\n      maxLength: 150\n    })), React.createElement(\"div\", null, React.createElement(\"label\", {\n      className: \"tittle-mini-ver\"\n    }, \"Upload\"), React.createElement(\"div\", {\n      className: \"card transaction-card transaction-card--add text-center\",\n      style: {\n        backgroundColor: 'rgb(239 239 239)'\n      }\n    }, React.createElement(\"div\", {\n      className: \"card-body p-2\"\n    }, React.createElement(\"div\", {\n      className: \"transaction-add d-flex justify-content-center align-items-center display-6 text-\"\n    }, React.createElement(Dropzone, {\n      accept: FILE_TYPE,\n      maxSizeBytes: MAX_FILE_SIZE,\n      onDrop: onDrop\n    }, function (_ref4) {\n      var getRootProps = _ref4.getRootProps,\n          getInputProps = _ref4.getInputProps;\n      return React.createElement(\"section\", {\n        className: \"container\"\n      }, React.createElement(\"div\", getRootProps(), React.createElement(\"input\", getInputProps()), React.createElement(\"span\", {\n        className: \"w-100 u-clickable\"\n      }, React.createElement(\"img\", {\n        style: {\n          height: 60,\n          width: 'auto'\n        },\n        src: \"/static/images/upload_document.png\"\n      }))), files && files[0] && React.createElement(\"div\", null, files[0].size > MAX_FILE_SIZE ? React.createElement(\"div\", null, fileTooLarge()) : React.createElement(\"h5\", {\n        className: \"list-unstyled\"\n      }, files[0].name)));\n    }))))));\n  };\n\n  var checkDisable = function checkDisable(values) {\n    if (isEmpty(values.title) || !files || files === 'large' || !files[0]) {\n      return true;\n    }\n\n    var recipientGroups = recipientNumbers.filter(function (index) {\n      return values[\"recipient\".concat(index)] && values[\"recipient\".concat(index)].action && values[\"recipient\".concat(index)].party;\n    });\n    if (recipientGroups.length === 0) return true;\n    return false;\n  };\n\n  return React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: initialValues,\n    onSubmit: handleSubmit\n  }, function (_ref5) {\n    var isSubmitting = _ref5.isSubmitting,\n        isValid = _ref5.isValid,\n        values = _ref5.values,\n        handleChange = _ref5.handleChange,\n        handleSubmit = _ref5.handleSubmit;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit\n    }, React.createElement(\"div\", {\n      className: \"row\"\n    }, React.createElement(\"div\", {\n      className: \"col\"\n    }, renderUploadDocument(handleChange))), React.createElement(\"div\", {\n      className: \"row\"\n    }, recipientNumbers.map(function (index) {\n      return values[\"recipient\".concat(index)] && React.createElement(\"div\", {\n        key: \"recipient-\".concat(index),\n        className: \"col-12 col-md-6 col-lg-6\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"tittle-mini-ver\"\n      }, \"Recipient \".concat(index)), React.createElement(SelectInput, {\n        name: \"recipient\".concat(index, \".party\"),\n        onChange: handleChange,\n        value: values[\"recipient\".concat(index)].party,\n        options: partyOptions\n      }), React.createElement(SelectInput, {\n        name: \"recipient\".concat(index, \".action\"),\n        onChange: handleChange,\n        value: values[\"recipient\".concat(index)].action,\n        options: actionOptions\n      })));\n    })), React.createElement(\"div\", null, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn p-0 text--primary\",\n      style: {\n        letterSpacing: 'normal'\n      },\n      onClick: function onClick() {\n        return handleAddARecipient(values);\n      }\n    }, React.createElement(\"i\", {\n      className: \"far fa-plus-square\"\n    }), \"\\xA0 Add a Recipient\")), React.createElement(\"div\", {\n      className: \"text-danger text-center mt-3\"\n    }, files === 'large' && React.createElement(\"small\", null, \"Only allows file size smaller than \".concat(MEGABYTE, \" megabytes\"))), React.createElement(\"div\", {\n      className: \"my-5 d-flex justify-content-center\"\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-add-new text-white th-11 d-flex align-items-center\",\n      disabled: isSubmitting || !isValid || checkDisable(values)\n    }, isSubmitting && React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm mr-2\"\n    }), \"Save\")));\n  });\n};\n\nvar AddNewEnvelopeModal = function AddNewEnvelopeModal(_ref6) {\n  var isShow = _ref6.isShow,\n      toggle = _ref6.toggle,\n      partiesOfTransaction = _ref6.partiesOfTransaction,\n      currentParty = _ref6.currentParty;\n  return React.createElement(Modal, {\n    isOpen: isShow,\n    toggle: toggle\n  }, React.createElement(\"div\", {\n    className: \"modal-header modal-header--change\",\n    id: \"bg-gr\"\n  }, React.createElement(\"div\", {\n    className: \"text-center w-100\"\n  }, React.createElement(\"h5\", {\n    className: \" modal-title new-add\",\n    id: \"exampleModalLabel\"\n  }, \"Add New Envelope\")), React.createElement(\"div\", null, React.createElement(\"button\", {\n    id: \"close-modal\",\n    type: \"button\",\n    className: \"close bg-transparent \",\n    \"data-dismiss\": \"modal\",\n    onClick: function onClick() {\n      return toggle();\n    }\n  }, \"\\xD7\"))), React.createElement(\"div\", {\n    className: \"modal-body px-5 mx-2\",\n    id: \"main-body-add-member\"\n  }, React.createElement(Form, {\n    toggle: toggle,\n    partiesOfTransaction: partiesOfTransaction,\n    currentParty: currentParty\n  })));\n};\n\nexport default AddNewEnvelopeModal;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/component/Transaction/AddNewEnvelopeModal.js"],"names":["React","useCallback","useEffect","useState","Modal","isEmpty","isEqual","uniqWith","Formik","toastr","Dropzone","DataAccessType","MEGABYTE","MAX_FILE_SIZE","FILE_TYPE","DocumentSpecies","transactionService","getDataAccessType","SelectInput","label","name","onChange","value","options","map","option","index","Form","partiesOfTransaction","toggle","currentParty","defaultRecipientOption","files","setFiles","actionOptions","VIEW_ONLY","REVIEW_DOCUMENT","SIGN_DOCUMENT","recipientNumbers","setRecipientNumbers","partyOptions","setPartyOptions","signerInfo","setSignerInfo","title","initialValues","setInitialValues","tempOptions","tempInfo","forEach","party","push","id","email","tempInitialValues","action","handleSubmit","values","setSubmitting","createFileDocument","file","role","creatorId","partyId","transactionId","documentType","ENVELOPE","newDocument","signGroups","otherGroups","signers","assignedPartyId","actionData","documentId","createDocumentsAction","length","getUriToSignDocument","res","url","window","open","success","error","message","handleAddARecipient","onDrop","fileTooLarge","renderUploadDocument","handleChange","backgroundColor","getRootProps","getInputProps","height","width","size","checkDisable","recipientGroups","filter","isSubmitting","isValid","letterSpacing","AddNewEnvelopeModal","isShow"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal } from 'reactstrap'\nimport { isEmpty, isEqual, uniqWith } from 'lodash'\nimport { Formik } from 'formik'\nimport toastr from 'toastr'\nimport Dropzone from 'react-dropzone'\nimport {\n  DataAccessType,\n  MEGABYTE,\n  MAX_FILE_SIZE,\n  FILE_TYPE,\n  DocumentSpecies\n} from '../../../common/models/Transaction'\nimport { transactionService } from '../../services'\nimport { getDataAccessType } from '../../../common/view-models/Transaction'\n\n// ===== Select Input =====\nconst SelectInput = ({ label, name, onChange, value, options }) => {\n  return (\n    <div className='form-group'>\n      {label && <label className='tittle-mini-ver'>{label}</label>}\n      <select\n        className='form-control'\n        name={name}\n        onChange={onChange}\n        value={value}\n      >\n        {options.map((option, index) => (\n          <option key={`option-${index}`} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\n// ===== Form =====\nconst Form = ({ partiesOfTransaction, toggle, currentParty }) => {\n  const defaultRecipientOption = { value: '', label: 'Name' }\n  const [files, setFiles] = useState(null)\n\n  // ===== Dropdown to select document =====\n  // Document options\n  // const documentOptions = documentList.map(doc => ({\n  //   value: doc.id,\n  //   label: doc.title\n  // }))\n\n  // Action options\n  const actionOptions = [\n    {\n      value: DataAccessType.VIEW_ONLY,\n      label: getDataAccessType(DataAccessType.VIEW_ONLY)\n    },\n    {\n      value: DataAccessType.REVIEW_DOCUMENT,\n      label: getDataAccessType(DataAccessType.REVIEW_DOCUMENT)\n    },\n    {\n      value: DataAccessType.SIGN_DOCUMENT,\n      label: getDataAccessType(DataAccessType.SIGN_DOCUMENT)\n    }\n  ]\n\n  const [recipientNumbers, setRecipientNumbers] = useState([1, 2, 3, 4])\n  const [partyOptions, setPartyOptions] = useState([])\n  const [signerInfo, setSignerInfo] = useState({})\n  const [initialValues, setInitialValues] = useState({\n    title: ''\n  })\n\n  useEffect(() => {\n    let tempOptions = []\n    let tempInfo = {}\n    partiesOfTransaction.forEach(party => {\n      // PartyOption\n      tempOptions.push({\n        value: party.id,\n        label: party.name\n      })\n\n      // User info\n      tempInfo[party.id] = {\n        email: party.email,\n        name: party.name,\n        id: party.id\n      }\n    })\n    setPartyOptions([defaultRecipientOption, ...tempOptions])\n    setSignerInfo(tempInfo)\n\n    // Initial values\n    let tempInitialValues = {}\n    recipientNumbers.forEach(index => {\n      tempInitialValues[`recipient${index}`] = {\n        party: defaultRecipientOption.value,\n        action: actionOptions[0].value\n      }\n    })\n    setInitialValues({ ...initialValues, ...tempInitialValues })\n  }, [])\n\n  const handleSubmit = async (values, action) => {\n    const { setSubmitting } = action\n    setSubmitting(true)\n\n    try {\n      // Upload document\n      const newDocument = await transactionService.createFileDocument({\n        file: files[0],\n        title: values.title,\n        role: currentParty.role,\n        creatorId: currentParty.id,\n        partyId: currentParty.id,\n        transactionId: currentParty.transactionId,\n        documentType: DocumentSpecies.ENVELOPE\n      })\n\n      if (newDocument) {\n        // \"Remove empty element\" & \"Filter by group\"\n        let signGroups = []\n        let otherGroups = []\n        let signers = []\n\n        recipientNumbers.forEach(index => {\n          const action = values[`recipient${index}`].action\n          const assignedPartyId = values[`recipient${index}`].party\n          if (action && !isEmpty(assignedPartyId)) {\n            const actionData = {\n              creatorId: currentParty.id,\n              documentId: newDocument.id,\n              action,\n              assignedPartyId\n            }\n\n            if (action === DataAccessType.SIGN_DOCUMENT) {\n              signGroups.push(actionData)\n              signers.push(signerInfo[assignedPartyId])\n            } else {\n              otherGroups.push(actionData)\n            }\n          }\n        })\n\n        // Remove duplicate object from array\n        otherGroups = uniqWith(otherGroups, isEqual)\n\n        // Create action for otherGroups\n        await transactionService.createDocumentsAction(otherGroups)\n\n        // Create action for signGroups + Redirect docusign\n        if (signers.length > 0) {\n          // Remove duplicate object from array\n          signGroups = uniqWith(signGroups, isEqual)\n          signers = uniqWith(signers, isEqual)\n\n          const res = await transactionService.getUriToSignDocument(\n            newDocument.id,\n            {\n              signers,\n              creatorId: currentParty.id\n            }\n          )\n\n          if (res && res.url) {\n            if (window) {\n              window.open(res.url, '_blank')\n            }\n          }\n        }\n      }\n\n      toggle()\n      toastr.success('Success')\n    } catch (e) {\n      toastr.error(e.message)\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  const handleAddARecipient = values => {\n    const index = recipientNumbers.length + 1\n    // Add recipient numbers\n    setRecipientNumbers([...recipientNumbers, index])\n\n    // Update initialValues\n    setInitialValues({\n      ...values,\n      [`recipient${index}`]: {\n        party: defaultRecipientOption.value,\n        action: actionOptions[0].value\n      }\n    })\n  }\n\n  const onDrop = useCallback(files => {\n    setFiles(files)\n  }, [setFiles])\n\n  const fileTooLarge = () => {\n    setFiles('large')\n  }\n\n  const renderUploadDocument = handleChange => {\n    return (\n      <div>\n        <div className='form-group'>\n          <label className='tittle-mini-ver'> Document information</label>\n          <input\n            className='form-control'\n            placeholder='Type here'\n            name='title'\n            onChange={handleChange}\n            maxLength={150}\n          />\n        </div>\n        <div>\n          <label className='tittle-mini-ver'>Upload</label>\n          <div\n            className='card transaction-card transaction-card--add text-center'\n            style={{ backgroundColor: 'rgb(239 239 239)' }}\n          >\n            <div className='card-body p-2'>\n              <div className='transaction-add d-flex justify-content-center align-items-center display-6 text-'>\n                <Dropzone\n                  accept={FILE_TYPE}\n                  maxSizeBytes={MAX_FILE_SIZE}\n                  onDrop={onDrop}\n                >\n                  {({ getRootProps, getInputProps }) => (\n                    <section className='container'>\n                      <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <span className='w-100 u-clickable'>\n                          <img\n                            style={{\n                              height: 60,\n                              width: 'auto'\n                            }}\n                            src='/static/images/upload_document.png'\n                          />\n                        </span>\n                      </div>\n                      {files && files[0] && (\n                        <div>\n                          {files[0].size > MAX_FILE_SIZE ? (\n                            <div>{fileTooLarge()}</div>\n                          ) : (\n                            <h5 className='list-unstyled'>{files[0].name}</h5>\n                          )}\n                        </div>\n                      )}\n                    </section>\n                  )}\n                </Dropzone>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const checkDisable = values => {\n    if (isEmpty(values.title) || !files || files === 'large' || !files[0]) {\n      return true\n    }\n\n    const recipientGroups = recipientNumbers.filter(\n      index =>\n        values[`recipient${index}`] &&\n        values[`recipient${index}`].action &&\n        values[`recipient${index}`].party\n    )\n    if (recipientGroups.length === 0) return true\n\n    return false\n  }\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting, isValid, values, handleChange, handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <div className='row'>\n            <div className='col'>\n              {/* ===== Dropdown to select document ===== */}\n              {/* <SelectInput\n                label='File'\n                name='file'\n                onChange={handleChange}\n                value={values.file}\n                options={documentOptions}\n              /> */}\n              {renderUploadDocument(handleChange)}\n            </div>\n          </div>\n          <div className='row'>\n            {recipientNumbers.map(\n              index =>\n                values[`recipient${index}`] && (\n                  <div\n                    key={`recipient-${index}`}\n                    className='col-12 col-md-6 col-lg-6'\n                  >\n                    <div className='form-group'>\n                      <label className='tittle-mini-ver'>{`Recipient ${index}`}</label>\n                      <SelectInput\n                        name={`recipient${index}.party`}\n                        onChange={handleChange}\n                        value={values[`recipient${index}`].party}\n                        options={partyOptions}\n                      />\n                      <SelectInput\n                        name={`recipient${index}.action`}\n                        onChange={handleChange}\n                        value={values[`recipient${index}`].action}\n                        options={actionOptions}\n                      />\n                    </div>\n                  </div>\n                )\n            )}\n          </div>\n          <div>\n            <button\n              type='button'\n              className='btn p-0 text--primary'\n              style={{ letterSpacing: 'normal' }}\n              onClick={() => handleAddARecipient(values)}\n            >\n              <i className='far fa-plus-square' />\n              &nbsp; Add a Recipient\n            </button>\n          </div>\n          <div className='text-danger text-center mt-3'>\n            {files === 'large' && (\n              <small>{`Only allows file size smaller than ${MEGABYTE} megabytes`}</small>\n            )}\n          </div>\n          <div className='my-5 d-flex justify-content-center'>\n            <button\n              type='submit'\n              className='btn btn-add-new text-white th-11 d-flex align-items-center'\n              disabled={isSubmitting || !isValid || checkDisable(values)}\n            >\n              {isSubmitting && (\n                <span className='spinner-border spinner-border-sm mr-2' />\n              )}\n              Save\n            </button>\n          </div>\n        </form>\n      )}\n    </Formik>\n  )\n}\n\nconst AddNewEnvelopeModal = ({\n  isShow,\n  toggle,\n  partiesOfTransaction,\n  currentParty\n}) => {\n  return (\n    <Modal isOpen={isShow} toggle={toggle}>\n      <div className='modal-header modal-header--change' id='bg-gr'>\n        <div className='text-center w-100'>\n          <h5 className=' modal-title new-add' id='exampleModalLabel'>\n            Add New Envelope\n          </h5>\n        </div>\n        <div>\n          <button\n            id='close-modal'\n            type='button'\n            className='close bg-transparent '\n            data-dismiss='modal'\n            onClick={() => toggle()}\n          >\n            &times;\n          </button>\n        </div>\n      </div>\n      <div className='modal-body px-5 mx-2' id='main-body-add-member'>\n        <Form\n          toggle={toggle}\n          partiesOfTransaction={partiesOfTransaction}\n          currentParty={currentParty}\n        />\n      </div>\n    </Modal>\n  )\n}\n\nexport default AddNewEnvelopeModal\n"]},"metadata":{},"sourceType":"module"}