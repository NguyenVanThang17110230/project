{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar MessageService =\n/*#__PURE__*/\nfunction () {\n  function MessageService(options) {\n    _classCallCheck(this, MessageService);\n\n    this.messageGateway = options.messageGateway;\n  }\n\n  _createClass(MessageService, [{\n    key: \"listenToMyNewMessages\",\n    value: function listenToMyNewMessages(userId, callback) {\n      this.messageGateway.listenToMyNewMessages(userId, callback);\n    }\n  }, {\n    key: \"unlistenToMyNewMessages\",\n    value: function unlistenToMyNewMessages(userId) {}\n  }, {\n    key: \"sendToNewMessage\",\n    value: function () {\n      var _sendToNewMessage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var content, senderId, recipientId, type;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                content = _ref.content, senderId = _ref.senderId, recipientId = _ref.recipientId, type = _ref.type;\n                return _context.abrupt(\"return\", this.messageGateway.sendToNewMessage({\n                  content: content,\n                  senderId: senderId,\n                  recipientId: recipientId,\n                  type: type\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function sendToNewMessage(_x) {\n        return _sendToNewMessage.apply(this, arguments);\n      }\n\n      return sendToNewMessage;\n    }()\n  }, {\n    key: \"sendToFile\",\n    value: function () {\n      var _sendToFile = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref2) {\n        var file, senderId, recipientId, type;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                file = _ref2.file, senderId = _ref2.senderId, recipientId = _ref2.recipientId, type = _ref2.type;\n                return _context2.abrupt(\"return\", this.messageGateway.sendToFile({\n                  file: file,\n                  senderId: senderId,\n                  recipientId: recipientId,\n                  type: type\n                }));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function sendToFile(_x2) {\n        return _sendToFile.apply(this, arguments);\n      }\n\n      return sendToFile;\n    }()\n  }, {\n    key: \"getMyMessagesWithUser\",\n    value: function () {\n      var _getMyMessagesWithUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(userId, recipientId, level) {\n        var limit,\n            page,\n            order,\n            where,\n            total,\n            data,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                limit = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : 15;\n                page = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : 0;\n                order = _args3.length > 5 && _args3[5] !== undefined ? _args3[5] : 'createdAt DESC';\n                where = {\n                  or: [{\n                    senderId: userId,\n                    recipientId: recipientId\n                  }, {\n                    senderId: recipientId,\n                    recipientId: userId\n                  }]\n                };\n                _context3.next = 6;\n                return this.messageGateway.count(where);\n\n              case 6:\n                total = _context3.sent;\n                _context3.next = 9;\n                return this.messageGateway.find({\n                  where: where,\n                  limit: limit * level,\n                  order: order,\n                  skip: page * limit * level\n                });\n\n              case 9:\n                data = _context3.sent;\n                return _context3.abrupt(\"return\", {\n                  messages: data.reverse(),\n                  totalPage: Math.ceil(total / limit)\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getMyMessagesWithUser(_x3, _x4, _x5) {\n        return _getMyMessagesWithUser.apply(this, arguments);\n      }\n\n      return getMyMessagesWithUser;\n    }()\n  }]);\n\n  return MessageService;\n}();\n\nexport { MessageService as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/services/MessageService.js"],"names":["MessageService","options","messageGateway","userId","callback","listenToMyNewMessages","content","senderId","recipientId","type","sendToNewMessage","file","sendToFile","level","limit","page","order","where","or","count","total","find","skip","data","messages","reverse","totalPage","Math","ceil"],"mappings":";;;;;IAAqBA,c;;;AACnB,0BAAaC,OAAb,EAAsB;AAAA;;AACpB,SAAKC,cAAL,GAAsBD,OAAO,CAACC,cAA9B;AACD;;;;0CAEsBC,M,EAAQC,Q,EAAU;AACvC,WAAKF,cAAL,CAAoBG,qBAApB,CAA0CF,MAA1C,EAAkDC,QAAlD;AACD;;;4CAEwBD,M,EAAQ,CAAE;;;;;;;;;;;;AAETG,gBAAAA,O,QAAAA,O,EAASC,Q,QAAAA,Q,EAAUC,W,QAAAA,W,EAAaC,I,QAAAA,I;iDACjD,KAAKP,cAAL,CAAoBQ,gBAApB,CAAqC;AAC1CJ,kBAAAA,OAAO,EAAPA,OAD0C;AAE1CC,kBAAAA,QAAQ,EAARA,QAF0C;AAG1CC,kBAAAA,WAAW,EAAXA,WAH0C;AAI1CC,kBAAAA,IAAI,EAAJA;AAJ0C,iBAArC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQWE,gBAAAA,I,SAAAA,I,EAAMJ,Q,SAAAA,Q,EAAUC,W,SAAAA,W,EAAaC,I,SAAAA,I;kDACxC,KAAKP,cAAL,CAAoBU,UAApB,CAA+B;AACpCD,kBAAAA,IAAI,EAAJA,IADoC;AAEpCJ,kBAAAA,QAAQ,EAARA,QAFoC;AAGpCC,kBAAAA,WAAW,EAAXA,WAHoC;AAIpCC,kBAAAA,IAAI,EAAJA;AAJoC,iBAA/B,C;;;;;;;;;;;;;;;;;;;;;iDASPN,M,EACAK,W,EACAK,K;;;;;;;;;;;;AACAC,gBAAAA,K,8DAAQ,E;AACRC,gBAAAA,I,8DAAO,C;AACPC,gBAAAA,K,8DAAQ,gB;AAEFC,gBAAAA,K,GAAQ;AACZC,kBAAAA,EAAE,EAAE,CACF;AAAEX,oBAAAA,QAAQ,EAAEJ,MAAZ;AAAoBK,oBAAAA,WAAW,EAAEA;AAAjC,mBADE,EAEF;AAAED,oBAAAA,QAAQ,EAAEC,WAAZ;AAAyBA,oBAAAA,WAAW,EAAEL;AAAtC,mBAFE;AADQ,iB;;uBAMM,KAAKD,cAAL,CAAoBiB,KAApB,CAA0BF,KAA1B,C;;;AAAdG,gBAAAA,K;;uBACa,KAAKlB,cAAL,CAAoBmB,IAApB,CAAyB;AAC1CJ,kBAAAA,KAAK,EAALA,KAD0C;AAE1CH,kBAAAA,KAAK,EAAEA,KAAK,GAAGD,KAF2B;AAG1CG,kBAAAA,KAAK,EAALA,KAH0C;AAI1CM,kBAAAA,IAAI,EAAEP,IAAI,GAAGD,KAAP,GAAeD;AAJqB,iBAAzB,C;;;AAAbU,gBAAAA,I;kDAMC;AAAEC,kBAAAA,QAAQ,EAAED,IAAI,CAACE,OAAL,EAAZ;AAA4BC,kBAAAA,SAAS,EAAEC,IAAI,CAACC,IAAL,CAAUR,KAAK,GAAGN,KAAlB;AAAvC,iB;;;;;;;;;;;;;;;;;;;;;SAlDUd,c","sourcesContent":["export default class MessageService {\n  constructor (options) {\n    this.messageGateway = options.messageGateway\n  }\n\n  listenToMyNewMessages (userId, callback) {\n    this.messageGateway.listenToMyNewMessages(userId, callback)\n  }\n\n  unlistenToMyNewMessages (userId) {}\n\n  async sendToNewMessage ({ content, senderId, recipientId, type }) {\n    return this.messageGateway.sendToNewMessage({\n      content,\n      senderId,\n      recipientId,\n      type\n    })\n  }\n\n  async sendToFile ({ file, senderId, recipientId, type }) {\n    return this.messageGateway.sendToFile({\n      file,\n      senderId,\n      recipientId,\n      type\n    })\n  }\n\n  async getMyMessagesWithUser (\n    userId,\n    recipientId,\n    level,\n    limit = 15,\n    page = 0,\n    order = 'createdAt DESC'\n  ) {\n    const where = {\n      or: [\n        { senderId: userId, recipientId: recipientId },\n        { senderId: recipientId, recipientId: userId }\n      ]\n    }\n    const total = await this.messageGateway.count(where)\n    const data = await this.messageGateway.find({\n      where,\n      limit: limit * level,\n      order,\n      skip: page * limit * level\n    })\n    return { messages: data.reverse(), totalPage: Math.ceil(total / limit) }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}