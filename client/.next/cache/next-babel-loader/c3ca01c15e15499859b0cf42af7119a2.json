{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\n\nvar EventGateway =\n/*#__PURE__*/\nfunction () {\n  function EventGateway(_ref) {\n    var restConnector = _ref.restConnector;\n\n    _classCallCheck(this, EventGateway);\n\n    this.restConnector = restConnector;\n  }\n\n  _createClass(EventGateway, [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restConnector.post('/events', event);\n\n              case 2:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                return _context.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"deleteById\",\n    value: function () {\n      var _deleteById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var _ref3, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.restConnector[\"delete\"](\"/events/\".concat(id));\n\n              case 2:\n                _ref3 = _context2.sent;\n                data = _ref3.data;\n                return _context2.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function deleteById(_x2) {\n        return _deleteById.apply(this, arguments);\n      }\n\n      return deleteById;\n    }()\n  }, {\n    key: \"find\",\n    value: function () {\n      var _find = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(where) {\n        var filter, _ref4, data;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                filter = {\n                  where: where\n                };\n                _context3.next = 3;\n                return this.restConnector.get(\"/events?filter=\".concat(_JSON$stringify(filter)));\n\n              case 3:\n                _ref4 = _context3.sent;\n                data = _ref4.data;\n                return _context3.abrupt(\"return\", data);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function find(_x3) {\n        return _find.apply(this, arguments);\n      }\n\n      return find;\n    }()\n  }, {\n    key: \"patch\",\n    value: function () {\n      var _patch = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(event) {\n        var _ref5, data;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.restConnector.patch('/events', event);\n\n              case 2:\n                _ref5 = _context4.sent;\n                data = _ref5.data;\n                return _context4.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function patch(_x4) {\n        return _patch.apply(this, arguments);\n      }\n\n      return patch;\n    }()\n  }]);\n\n  return EventGateway;\n}();\n\nexport { EventGateway as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/gateways/EventGateway.js"],"names":["EventGateway","restConnector","event","post","data","id","where","filter","get","patch"],"mappings":";;;;;;IAAqBA,Y;;;AACnB,8BAAgC;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AAC9B,SAAKA,aAAL,GAAqBA,aAArB;AACD;;;;;;;gDAEaC,K;;;;;;;;uBACW,KAAKD,aAAL,CAAmBE,IAAnB,CAAwB,SAAxB,EAAmCD,KAAnC,C;;;;AAAfE,gBAAAA,I,SAAAA,I;iDACDA,I;;;;;;;;;;;;;;;;;;;;;iDAESC,E;;;;;;;;uBACO,KAAKJ,aAAL,6BAAqCI,EAArC,E;;;;AAAfD,gBAAAA,I,SAAAA,I;kDACDA,I;;;;;;;;;;;;;;;;;;;;;iDAEGE,K;;;;;;;AACJC,gBAAAA,M,GAAS;AAAED,kBAAAA,KAAK,EAALA;AAAF,iB;;uBACQ,KAAKL,aAAL,CAAmBO,GAAnB,0BACH,gBAAeD,MAAf,CADG,E;;;;AAAfH,gBAAAA,I,SAAAA,I;kDAGDA,I;;;;;;;;;;;;;;;;;;;;;iDAEIF,K;;;;;;;;uBACY,KAAKD,aAAL,CAAmBQ,KAAnB,CAAyB,SAAzB,EAAoCP,KAApC,C;;;;AAAfE,gBAAAA,I,SAAAA,I;kDACDA,I;;;;;;;;;;;;;;;;;;;;;SAtBUJ,Y","sourcesContent":["export default class EventGateway {\n  constructor ({ restConnector }) {\n    this.restConnector = restConnector\n  }\n\n  async create (event) {\n    const { data } = await this.restConnector.post('/events', event)\n    return data\n  }\n  async deleteById (id) {\n    const { data } = await this.restConnector.delete(`/events/${id}`)\n    return data\n  }\n  async find (where) {\n    const filter = { where }\n    const { data } = await this.restConnector.get(\n      `/events?filter=${JSON.stringify(filter)}`\n    )\n    return data\n  }\n  async patch (event) {\n    const { data } = await this.restConnector.patch('/events', event)\n    return data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}