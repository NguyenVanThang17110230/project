{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Modal } from 'reactstrap';\nimport NumberFormat from 'react-number-format';\nimport _ from 'lodash';\nimport toastr from 'toastr';\nimport { transactionService, userService, commissionService } from '../../services';\nimport { getRoleLabel } from '../../view-models/User';\nimport { isCoordinator } from '../../../common/models/User';\nimport { TRANSACTION_COST, ERRORS_AND_OMISSION, commissionType } from '../../../common/models/CashBalance';\n\nvar CashBalanceModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CashBalanceModal, _Component);\n\n  function CashBalanceModal(props) {\n    var _this;\n\n    _classCallCheck(this, CashBalanceModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CashBalanceModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_countDecimals\", function (value) {\n      if (Math.floor(value) === value) return 0;\n      return value.toString().split('.')[1].length || 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getAgentCommissionWhenEdit\", function (listUser, userId) {\n      return _.find(listUser, {\n        userId: userId\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderReferrer\", function (referrers, totalCommission, agentSplit) {\n      var restCommission = (totalCommission || 0) * (1 - agentSplit);\n\n      if (referrers.length === 0) {\n        return React.createElement(\"tr\", null, React.createElement(\"td\", {\n          colSpan: \"2\"\n        }));\n      } else {\n        return referrers.map(function (referrer, index) {\n          return index < 2 && React.createElement(\"tr\", {\n            key: index\n          }, React.createElement(\"td\", null, referrer.name), React.createElement(\"td\", null, \"$ \", _this._calculateReferralCost(index === 0, restCommission)));\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeOn1Agent\", function (totalCommission, agentSplit, setValue) {\n      if (totalCommission < 0 || agentSplit > 1 || agentSplit < 0) return;\n      var referrers = _this.state.referrers;\n\n      var _totalCommission = totalCommission || 0;\n\n      var restCommission = _totalCommission * (1 - agentSplit);\n\n      var agentCommission = _this._calculateAgentCommission(_totalCommission, agentSplit);\n\n      var totalReferralCost = _this._calculateTotalReferralCost(referrers, restCommission);\n\n      var regionalSplit = _this._calculateRegionalSplit(restCommission, totalReferralCost);\n\n      setValue('totalReferralCost', totalReferralCost);\n      setValue('totalCommission', totalCommission);\n      setValue('agentSplit', agentSplit);\n      setValue('agentCommission', agentCommission < 0 ? 0 : agentCommission);\n      setValue('regionalSplit', regionalSplit);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeOn2Agents\", function (totalCommission, agentSplit1, agentSplit2, ratio1, ratio2, setValue) {\n      if (totalCommission < 0 || ratio1 > 1 || ratio2 < 0 || agentSplit1 > 1 || agentSplit1 < 0 || agentSplit2 > 1 || agentSplit2 < 0) {\n        return;\n      }\n\n      var _totalCommission = totalCommission || 0;\n\n      var _this$state = _this.state,\n          referrers1 = _this$state.referrers1,\n          referrers2 = _this$state.referrers2;\n\n      var agentCommission1 = _this._calculateAgentCommission(totalCommission * ratio1, agentSplit1);\n\n      var agentCommission2 = _this._calculateAgentCommission(totalCommission * ratio2, agentSplit2);\n\n      var totalReferralCost1 = _this._calculateTotalReferralCost(referrers1, _totalCommission * ratio1 * (1 - agentSplit1));\n\n      var totalReferralCost2 = _this._calculateTotalReferralCost(referrers2, _totalCommission * ratio2 * (1 - agentSplit2));\n\n      var regionalSplit1 = _this._calculateRegionalSplit(_totalCommission * ratio1 * (1 - agentSplit1), totalReferralCost1);\n\n      var regionalSplit2 = _this._calculateRegionalSplit(_totalCommission * ratio2 * (1 - agentSplit2), totalReferralCost2);\n\n      setValue('ratio1', ratio1);\n      setValue('ratio2', ratio2);\n      setValue('totalReferralCost1', totalReferralCost1);\n      setValue('totalReferralCost2', totalReferralCost2);\n      setValue('totalCommission', totalCommission);\n      setValue('agentSplit1', agentSplit1);\n      setValue('agentSplit2', agentSplit2);\n      setValue('agentCommission1', agentCommission1 < 0 ? 0 : agentCommission1);\n      setValue('agentCommission2', agentCommission2 < 0 ? 0 : agentCommission2);\n      setValue('regionalSplit', regionalSplit1 + regionalSplit2);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateAgentSplit\", function (agentCommission, totalCommission) {\n      return (agentCommission + ERRORS_AND_OMISSION + TRANSACTION_COST) / totalCommission;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateReferralCost\", function (isFirstReferral, restCommission) {\n      var tmp = _parseFloat((restCommission * (isFirstReferral ? 0.04 : 0.02)).toFixed(3));\n\n      return tmp;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateAgentCommission\", function (totalCommission, agentSplit) {\n      return totalCommission ? _parseFloat((totalCommission * agentSplit - TRANSACTION_COST - ERRORS_AND_OMISSION).toFixed(1)) : 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateTotalReferralCost\", function (referrers, restCommission) {\n      var totalReferralCost = referrers.reduce(function (result, current, index) {\n        result = result + _this._calculateReferralCost(index === 0, restCommission);\n        return _parseFloat(result.toFixed(3));\n      }, 0);\n      return totalReferralCost;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateRegionalSplit\", function (restCommission, totalReferralCost) {\n      return _parseFloat(((restCommission - totalReferralCost) * 0.6).toFixed(4));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deleteAllInfo\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state2, transactionCommission, allUserCommission, promise;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state2 = _this.state, transactionCommission = _this$state2.transactionCommission, allUserCommission = _this$state2.allUserCommission;\n              _context2.next = 3;\n              return commissionService.deleteTransactionCommission(transactionCommission.id);\n\n            case 3:\n              promise = allUserCommission.map(\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(item) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return commissionService.deleteUserCommission(item.id);\n\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              _context2.next = 6;\n              return _Promise.all(promise);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _this.state = {\n      allAgents: null\n    };\n    return _this;\n  }\n\n  _createClass(CashBalanceModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isShow = _this$props.isShow,\n          toggle = _this$props.toggle,\n          currentUser = _this$props.currentUser,\n          selectedTransactionId = _this$props.selectedTransactionId,\n          handleCloseTransaction = _this$props.handleCloseTransaction;\n      var _this$state3 = this.state,\n          isEditting = _this$state3.isEditting,\n          totalCommission = _this$state3.totalCommission,\n          regionalSplit = _this$state3.regionalSplit,\n          agentCommission = _this$state3.agentCommission,\n          allAgents = _this$state3.allAgents,\n          referrers = _this$state3.referrers,\n          referrers1 = _this$state3.referrers1,\n          referrers2 = _this$state3.referrers2,\n          numberOfAgents = _this$state3.numberOfAgents;\n      return React.createElement(Modal, {\n        isOpen: isShow,\n        toggle: toggle,\n        id: \"new-transaction-modal\"\n      }, React.createElement(\"div\", null, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close bg-transparent pt-3 px-3\",\n        \"data-dismiss\": \"modal\",\n        onClick: toggle\n      }, \"\\xD7\")), numberOfAgents === 1 && React.createElement(Formik, {\n        initialValues: {\n          totalCommission: totalCommission || null,\n          agentCommission: agentCommission ? agentCommission[0].value : 0,\n          agentSplit: agentCommission ? this._calculateAgentSplit(agentCommission[0].value, totalCommission) : 0.7,\n          totalReferralCost: agentCommission ? this._calculateTotalReferralCost(referrers, agentCommission[0].value) : 0,\n          regionalSplit: regionalSplit || 0\n        },\n        onSubmit:\n        /*#__PURE__*/\n        function () {\n          var _ref3 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4(values, action) {\n            var setSubmitting, transactionCommission, tcCommission, _agentCommission, profitShare, referral;\n\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    setSubmitting = action.setSubmitting;\n\n                    if (values.totalCommission) {\n                      _context4.next = 6;\n                      break;\n                    }\n\n                    setSubmitting(true);\n                    toastr.error('Total commission can not be empty');\n                    setSubmitting(false);\n                    return _context4.abrupt(\"return\");\n\n                  case 6:\n                    _context4.prev = 6;\n                    setSubmitting(true);\n\n                    if (!isEditting) {\n                      _context4.next = 11;\n                      break;\n                    }\n\n                    _context4.next = 11;\n                    return _this2._deleteAllInfo();\n\n                  case 11:\n                    // Save total commission, regional split\n                    transactionCommission = commissionService.createTransactionCommission({\n                      totalCommission: values.totalCommission,\n                      regionalSplit: values.regionalSplit,\n                      transactionId: selectedTransactionId,\n                      coordinatorId: currentUser.id\n                    }); // Save transaction cost\n\n                    tcCommission = commissionService.createUserCommission({\n                      cashType: commissionType.TC_COMMISSION,\n                      value: TRANSACTION_COST,\n                      userId: currentUser.id,\n                      transactionId: selectedTransactionId\n                    }); // Save agent commission\n\n                    _agentCommission = commissionService.createUserCommission({\n                      cashType: commissionType.AGENT_COMMISSION,\n                      value: values.agentCommission,\n                      userId: allAgents[0].userId,\n                      transactionId: selectedTransactionId\n                    }); // Save Profit-Share\n\n                    profitShare = values.totalReferralCost > 0 && commissionService.createUserCommission({\n                      cashType: commissionType.PROFIT_SHARE,\n                      value: values.totalReferralCost,\n                      userId: allAgents[0].userId,\n                      transactionId: selectedTransactionId\n                    }); // Save Referral\n\n                    referral = _Promise.all(referrers.map(\n                    /*#__PURE__*/\n                    function () {\n                      var _ref4 = _asyncToGenerator(\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function _callee3(referrer, index) {\n                        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                          while (1) {\n                            switch (_context3.prev = _context3.next) {\n                              case 0:\n                                _context3.next = 2;\n                                return commissionService.createUserCommission({\n                                  cashType: commissionType.REFERRAL,\n                                  value: _this2._calculateReferralCost(index === 0, (values.totalCommission || 0) * (1 - values.agentSplit)),\n                                  userId: referrer.id,\n                                  transactionId: selectedTransactionId\n                                });\n\n                              case 2:\n                              case \"end\":\n                                return _context3.stop();\n                            }\n                          }\n                        }, _callee3);\n                      }));\n\n                      return function (_x4, _x5) {\n                        return _ref4.apply(this, arguments);\n                      };\n                    }())); // Promise all\n\n                    _context4.next = 18;\n                    return _Promise.all([transactionCommission, tcCommission, _agentCommission, profitShare, referral]);\n\n                  case 18:\n                    handleCloseTransaction(selectedTransactionId);\n                    toggle();\n                    _context4.next = 25;\n                    break;\n\n                  case 22:\n                    _context4.prev = 22;\n                    _context4.t0 = _context4[\"catch\"](6);\n                    console.error(_context4.t0);\n\n                  case 25:\n                    setSubmitting(false);\n\n                  case 26:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, null, [[6, 22]]);\n          }));\n\n          return function (_x2, _x3) {\n            return _ref3.apply(this, arguments);\n          };\n        }()\n      }, function (_ref5) {\n        var values = _ref5.values,\n            isSubmitting = _ref5.isSubmitting,\n            handleSubmit = _ref5.handleSubmit,\n            setFieldValue = _ref5.setFieldValue;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, React.createElement(\"div\", {\n          className: \"modal-body px-5 mx-2\"\n        }, React.createElement(\"div\", null, React.createElement(\"h3\", {\n          className: \"text-center font-weight-bold mb-5\"\n        }, \"Cash Balance\"), React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"col-12 text-center\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Total Commission\"), React.createElement(\"div\", {\n          className: \"form-group col-12 col-md-6 mx-auto\"\n        }, React.createElement(NumberFormat, {\n          readOnly: !isCoordinator(currentUser),\n          placeholder: \"$ Enter Commission Amount\",\n          thousandSeparator: true,\n          autoFocus: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          allowNegative: false,\n          value: values.totalCommission,\n          onValueChange: function onValueChange(val) {\n            _this2._handleChangeOn1Agent(val.floatValue, values.agentSplit, setFieldValue);\n          }\n        }), React.createElement(\"p\", {\n          className: \"text-muted mb-5\"\n        }, React.createElement(\"small\", null, \"Add the commission amount in full. Do not enter the full sale above.\")))), React.createElement(\"div\", {\n          className: \"col-6 px-4\"\n        }, React.createElement(\"div\", null, React.createElement(\"div\", {\n          className: \"form-row mb-5\"\n        }, React.createElement(\"div\", {\n          className: \"col-8\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Agent's Commission\"), React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: values.agentCommission\n        })), React.createElement(\"div\", {\n          className: \"col-4\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Agent's Split\"), React.createElement(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.1\",\n          className: \"form-control\",\n          value: values.agentSplit,\n          onChange: function onChange(e) {\n            var agentSplit = Number(e.target.value);\n\n            if (_this2._countDecimals(agentSplit) > 1) {\n              return;\n            }\n\n            _this2._handleChangeOn1Agent(values.totalCommission, agentSplit, setFieldValue);\n          }\n        })))), React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Total Referral Cost\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"table\", {\n          className: \"table rounded-pill m-0\",\n          style: {\n            borderRadius: '100'\n          }\n        }, React.createElement(\"thead\", {\n          className: \"bg-secondary border\"\n        }, React.createElement(\"tr\", null, React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Name\"), React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Balance\"))), React.createElement(\"tbody\", {\n          className: \"border\"\n        }, _this2._renderReferrer(referrers, values.totalCommission, values.agentSplit))), React.createElement(\"p\", {\n          className: \"text-muted\"\n        }, React.createElement(\"small\", null, referrers.length <= 1 ? \"\".concat(referrers.length, \" Degree\") : \"\".concat(referrers.length, \" Degrees\"), ' ', \"of Referrals\")))), React.createElement(\"div\", {\n          className: \"col-6 px-4\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Transaction Cost\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: TRANSACTION_COST\n        }), React.createElement(\"p\", {\n          className: \"text-muted\"\n        }, React.createElement(\"small\", null, \"Transaction Coordination Cost\"))), React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Errors and Omission\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: ERRORS_AND_OMISSION\n        }), React.createElement(\"p\", {\n          className: \"text-muted\"\n        }, React.createElement(\"small\", null, \"Flat Rate Errors and Omission Cost\"))), React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Regional Split\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: values.regionalSplit\n        }), React.createElement(\"p\", {\n          className: \"text-muted\"\n        }, React.createElement(\"small\", null, \"Agents Commission (60% of Brokerage Profits)\")))))), React.createElement(\"div\", {\n          className: \"text-center my-5\"\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn text-white py-2 px-3\"\n        }, isSubmitting && React.createElement(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-2\"\n        }), \"Close Transaction\"))));\n      }), numberOfAgents === 2 && React.createElement(Formik, {\n        initialValues: {\n          totalCommission: totalCommission || null,\n          agentCommission1: agentCommission ? this._getAgentCommissionWhenEdit(agentCommission, allAgents[0].userId).value : 0,\n          ratio1: agentCommission ? this._getAgentCommissionWhenEdit(agentCommission, allAgents[0].userId).ratio : 0.5,\n          ratio2: agentCommission ? this._getAgentCommissionWhenEdit(agentCommission, allAgents[1].userId).ratio : 0.5,\n          agentCommission2: agentCommission ? this._getAgentCommissionWhenEdit(agentCommission, allAgents[1].userId).value : 0,\n          totalReferralCost1: agentCommission ? this._calculateTotalReferralCost(referrers1, this._getAgentCommissionWhenEdit(agentCommission, allAgents[0].userId)) : 0,\n          totalReferralCost2: agentCommission ? this._calculateTotalReferralCost(referrers2, this._getAgentCommissionWhenEdit(agentCommission, allAgents[1].userId)) : 0,\n          agentSplit1: agentCommission ? this._calculateAgentSplit(this._getAgentCommissionWhenEdit(agentCommission, allAgents[0].userId).value, totalCommission * this._getAgentCommissionWhenEdit(agentCommission, allAgents[0].userId).ratio) : 0.9,\n          agentSplit2: agentCommission ? this._calculateAgentSplit(this._getAgentCommissionWhenEdit(agentCommission, allAgents[1].userId).value, totalCommission * this._getAgentCommissionWhenEdit(agentCommission, allAgents[1].userId).ratio) : 0.9,\n          regionalSplit: regionalSplit || 0\n        },\n        onSubmit:\n        /*#__PURE__*/\n        function () {\n          var _ref6 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee7(values, action) {\n            var setSubmitting, transactionCommission, tcCommission1, tcCommission2, agentCommission1, agentCommission2, profitShare1, profitShare2, referral1, referral2;\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    setSubmitting = action.setSubmitting;\n\n                    if (values.totalCommission) {\n                      _context7.next = 6;\n                      break;\n                    }\n\n                    setSubmitting(true);\n                    toastr.error('Total commission can not be empty');\n                    setSubmitting(false);\n                    return _context7.abrupt(\"return\");\n\n                  case 6:\n                    _context7.prev = 6;\n                    setSubmitting(true);\n\n                    if (!isEditting) {\n                      _context7.next = 11;\n                      break;\n                    }\n\n                    _context7.next = 11;\n                    return _this2._deleteAllInfo();\n\n                  case 11:\n                    _context7.next = 13;\n                    return commissionService.createTransactionCommission({\n                      totalCommission: values.totalCommission,\n                      regionalSplit: values.regionalSplit,\n                      transactionId: selectedTransactionId,\n                      coordinatorId: currentUser.id\n                    });\n\n                  case 13:\n                    transactionCommission = _context7.sent;\n                    _context7.next = 16;\n                    return commissionService.createUserCommission({\n                      cashType: commissionType.TC_COMMISSION,\n                      value: TRANSACTION_COST,\n                      userId: currentUser.id,\n                      transactionId: selectedTransactionId\n                    });\n\n                  case 16:\n                    tcCommission1 = _context7.sent;\n                    _context7.next = 19;\n                    return commissionService.createUserCommission({\n                      cashType: commissionType.TC_COMMISSION,\n                      value: TRANSACTION_COST,\n                      userId: currentUser.id,\n                      transactionId: selectedTransactionId\n                    });\n\n                  case 19:\n                    tcCommission2 = _context7.sent;\n                    _context7.next = 22;\n                    return commissionService.createUserCommission({\n                      cashType: commissionType.AGENT_COMMISSION,\n                      value: values.agentCommission1,\n                      userId: allAgents[0].userId,\n                      transactionId: selectedTransactionId,\n                      ratio: values.ratio1\n                    });\n\n                  case 22:\n                    agentCommission1 = _context7.sent;\n                    _context7.next = 25;\n                    return commissionService.createUserCommission({\n                      cashType: commissionType.AGENT_COMMISSION,\n                      value: values.agentCommission2,\n                      userId: allAgents[1].userId,\n                      transactionId: selectedTransactionId,\n                      ratio: values.ratio2\n                    });\n\n                  case 25:\n                    agentCommission2 = _context7.sent;\n                    _context7.t0 = values.totalReferralCost1 > 0;\n\n                    if (!_context7.t0) {\n                      _context7.next = 31;\n                      break;\n                    }\n\n                    _context7.next = 30;\n                    return commissionService.createUserCommission({\n                      cashType: commissionType.PROFIT_SHARE,\n                      value: values.totalReferralCost1,\n                      userId: allAgents[0].userId,\n                      transactionId: selectedTransactionId\n                    });\n\n                  case 30:\n                    _context7.t0 = _context7.sent;\n\n                  case 31:\n                    profitShare1 = _context7.t0;\n                    _context7.t1 = values.totalReferralCost2 > 0;\n\n                    if (!_context7.t1) {\n                      _context7.next = 37;\n                      break;\n                    }\n\n                    _context7.next = 36;\n                    return commissionService.createUserCommission({\n                      cashType: commissionType.PROFIT_SHARE,\n                      value: values.totalReferralCost2,\n                      userId: allAgents[1].userId,\n                      transactionId: selectedTransactionId\n                    });\n\n                  case 36:\n                    _context7.t1 = _context7.sent;\n\n                  case 37:\n                    profitShare2 = _context7.t1;\n                    _context7.next = 40;\n                    return _Promise.all(referrers1.map(\n                    /*#__PURE__*/\n                    function () {\n                      var _ref7 = _asyncToGenerator(\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function _callee5(referrer, index) {\n                        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                          while (1) {\n                            switch (_context5.prev = _context5.next) {\n                              case 0:\n                                _context5.next = 2;\n                                return commissionService.createUserCommission({\n                                  cashType: commissionType.REFERRAL,\n                                  value: _this2._calculateReferralCost(index === 0, values.agentCommission1),\n                                  userId: referrer.id,\n                                  transactionId: selectedTransactionId\n                                });\n\n                              case 2:\n                              case \"end\":\n                                return _context5.stop();\n                            }\n                          }\n                        }, _callee5);\n                      }));\n\n                      return function (_x8, _x9) {\n                        return _ref7.apply(this, arguments);\n                      };\n                    }()));\n\n                  case 40:\n                    referral1 = _context7.sent;\n                    _context7.next = 43;\n                    return _Promise.all(referrers2.map(\n                    /*#__PURE__*/\n                    function () {\n                      var _ref8 = _asyncToGenerator(\n                      /*#__PURE__*/\n                      _regeneratorRuntime.mark(function _callee6(referrer, index) {\n                        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                          while (1) {\n                            switch (_context6.prev = _context6.next) {\n                              case 0:\n                                _context6.next = 2;\n                                return commissionService.createUserCommission({\n                                  cashType: commissionType.REFERRAL,\n                                  value: _this2._calculateReferralCost(index === 0, values.agentCommission2),\n                                  userId: referrer.id,\n                                  transactionId: selectedTransactionId\n                                });\n\n                              case 2:\n                              case \"end\":\n                                return _context6.stop();\n                            }\n                          }\n                        }, _callee6);\n                      }));\n\n                      return function (_x10, _x11) {\n                        return _ref8.apply(this, arguments);\n                      };\n                    }()));\n\n                  case 43:\n                    referral2 = _context7.sent;\n                    _context7.next = 46;\n                    return _Promise.all([transactionCommission, tcCommission1, tcCommission2, agentCommission1, agentCommission2, profitShare1, profitShare2, referral1, referral2]);\n\n                  case 46:\n                    handleCloseTransaction(selectedTransactionId);\n                    toggle();\n                    _context7.next = 53;\n                    break;\n\n                  case 50:\n                    _context7.prev = 50;\n                    _context7.t2 = _context7[\"catch\"](6);\n                    console.error(_context7.t2);\n\n                  case 53:\n                    setSubmitting(false);\n\n                  case 54:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7, null, [[6, 50]]);\n          }));\n\n          return function (_x6, _x7) {\n            return _ref6.apply(this, arguments);\n          };\n        }()\n      }, function (_ref9) {\n        var values = _ref9.values,\n            isSubmitting = _ref9.isSubmitting,\n            handleSubmit = _ref9.handleSubmit,\n            setFieldValue = _ref9.setFieldValue;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, React.createElement(\"div\", {\n          className: \"modal-body px-5 mx-2\"\n        }, React.createElement(\"div\", null, React.createElement(\"h3\", {\n          className: \"text-center font-weight-bold mb-5\"\n        }, \"Cash Balance\"), React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"col-12 text-center\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Total Commission\"), React.createElement(\"div\", {\n          className: \"form-group col-md-6 mx-auto\"\n        }, React.createElement(NumberFormat, {\n          readOnly: !isCoordinator(currentUser),\n          placeholder: \"$ Enter Commission Amount\",\n          thousandSeparator: true,\n          autoFocus: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          allowNegative: false,\n          value: values.totalCommission,\n          onValueChange: function onValueChange(val) {\n            _this2._handleChangeOn2Agents(val.floatValue, values.agentSplit1, values.agentSplit2, values.ratio1, values.ratio2, setFieldValue);\n          }\n        }), React.createElement(\"p\", {\n          className: \"text-muted mb-5\"\n        }, React.createElement(\"small\", null, \"Add the commission amount in full. Do not enter the full sale above.\")))), React.createElement(\"div\", {\n          className: \"col-12 px-4\"\n        }, React.createElement(\"div\", {\n          className: \"form-row mb-5\"\n        }, React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Agent's Commission (\", getRoleLabel(allAgents[0].role), \")\"), React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: values.agentCommission1\n        })), React.createElement(\"div\", {\n          className: \"col-3\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Agent's Split\"), React.createElement(\"input\", {\n          type: \"number\",\n          min: 0,\n          max: 1,\n          step: \"0.1\",\n          className: \"form-control\",\n          value: values.agentSplit1,\n          onkeydown: \"false\",\n          onChange: function onChange(e) {\n            var agentSplit1 = Number(e.target.value);\n            if (_this2._countDecimals(agentSplit1) > 1) return;\n\n            _this2._handleChangeOn2Agents(values.totalCommission, agentSplit1, values.agentSplit2, values.ratio1, values.ratio2, setFieldValue);\n          }\n        })), React.createElement(\"div\", {\n          className: \"col-3\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Ratio\"), React.createElement(\"input\", {\n          type: \"number\",\n          min: 0,\n          max: 1,\n          step: \"0.1\",\n          className: \"form-control\",\n          value: values.ratio1,\n          onkeydown: \"return false\",\n          onChange: function onChange(e) {\n            var ratio1 = Number(e.target.value);\n\n            var ratio2 = _parseFloat((1 - ratio1).toFixed(1));\n\n            if (_this2._countDecimals(ratio1) > 1) return;\n\n            _this2._handleChangeOn2Agents(values.totalCommission, values.agentSplit1, values.agentSplit2, ratio1, ratio2, setFieldValue);\n          }\n        }))), React.createElement(\"div\", {\n          className: \"form-row mb-5\"\n        }, React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Agent's Commission (\", getRoleLabel(allAgents[1].role), \")\"), React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: values.agentCommission2\n        })), React.createElement(\"div\", {\n          className: \"col-3\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Agent's Split\"), React.createElement(\"input\", {\n          type: \"number\",\n          min: 0,\n          max: 1,\n          step: \"0.1\",\n          className: \"form-control\",\n          value: values.agentSplit2,\n          onkeydown: \"return false\",\n          onChange: function onChange(e) {\n            var agentSplit2 = Number(e.target.value);\n            if (_this2._countDecimals(agentSplit2) > 1) return;\n\n            _this2._handleChangeOn2Agents(values.totalCommission, values.agentSplit1, agentSplit2, values.ratio1, values.ratio2, setFieldValue);\n          }\n        })), React.createElement(\"div\", {\n          className: \"col-3\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Ratio\"), React.createElement(\"input\", {\n          type: \"number\",\n          min: 0,\n          max: 1,\n          step: \"0.1\",\n          className: \"form-control\",\n          value: values.ratio2,\n          onkeydown: \"return false\",\n          onChange: function onChange(e) {\n            var ratio2 = Number(e.target.value);\n\n            var ratio1 = _parseFloat((1 - ratio2).toFixed(1));\n\n            if (_this2._countDecimals(ratio2) > 1) return;\n\n            _this2._handleChangeOn2Agents(values.totalCommission, values.agentSplit1, values.agentSplit2, ratio1, ratio2, setFieldValue);\n          }\n        })))), React.createElement(\"div\", {\n          className: \"col-6 px-4\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Referral Cost (\", getRoleLabel(allAgents[0].role), \")\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"table\", {\n          className: \"table rounded-pill m-0\"\n        }, React.createElement(\"thead\", {\n          className: \"bg-secondary border\"\n        }, React.createElement(\"tr\", null, React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Name\"), React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Balance\"))), React.createElement(\"tbody\", {\n          className: \"border\"\n        }, _this2._renderReferrer(referrers1, values.totalCommission * values.ratio1, values.agentSplit1))), React.createElement(\"p\", {\n          className: \"text-muted\"\n        }, React.createElement(\"small\", null, referrers1.length <= 1 ? \"\".concat(referrers1.length, \" Degree\") : \"\".concat(referrers1.length, \" Degrees\"), ' ', \"of Referrals\"))), React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Referral Cost (\", getRoleLabel(allAgents[1].role), \")\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"table\", {\n          className: \"table rounded-pill m-0\"\n        }, React.createElement(\"thead\", {\n          className: \"bg-secondary border\"\n        }, React.createElement(\"tr\", null, React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Name\"), React.createElement(\"th\", {\n          scope: \"col\"\n        }, \"Balance\"))), React.createElement(\"tbody\", {\n          className: \"border\"\n        }, _this2._renderReferrer(referrers2, values.totalCommission * values.ratio2, values.agentSplit2))), React.createElement(\"p\", {\n          className: \"text-muted mb-5\"\n        }, React.createElement(\"small\", null, referrers2.length <= 1 ? \"\".concat(referrers2.length, \" Degree\") : \"\".concat(referrers2.length, \" Degrees\"), ' ', \"of Referrals\")))), React.createElement(\"div\", {\n          className: \"col-6 px-4\"\n        }, React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Transaction Cost\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: TRANSACTION_COST\n        }), React.createElement(\"p\", {\n          className: \"text-muted mb-5\"\n        }, React.createElement(\"small\", null, \"Transaction Coordination Cost\"))), React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Errors and Omission\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: ERRORS_AND_OMISSION\n        }), React.createElement(\"p\", {\n          className: \"text-muted mb-5\"\n        }, React.createElement(\"small\", null, \"Flat Rate Errors and Omission Cost\"))), React.createElement(\"label\", {\n          className: \"h5 font-weight-bold text-muted\"\n        }, \"Regional Split\"), React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(NumberFormat, {\n          readOnly: true,\n          thousandSeparator: true,\n          prefix: '$ ',\n          className: \"form-control\",\n          value: values.regionalSplit\n        }), React.createElement(\"p\", {\n          className: \"text-muted mb-5\"\n        }, React.createElement(\"small\", null, \"Agents Commission (60% of Brokerage Profits)\")))))), React.createElement(\"div\", {\n          className: \"text-center\"\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn text-white px-5 mb-3\"\n        }, isSubmitting && React.createElement(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-2\"\n        }), \"Close Transaction\"))));\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var selectedTransactionId, transactionCommission, allUserCommission, agentCommission, allAgents, promise, allReferrers;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                selectedTransactionId = this.props.selectedTransactionId;\n                _context9.next = 3;\n                return commissionService.findByTransactionId(selectedTransactionId);\n\n              case 3:\n                transactionCommission = _context9.sent;\n\n                if (!transactionCommission) {\n                  _context9.next = 10;\n                  break;\n                }\n\n                _context9.next = 7;\n                return commissionService.getCommissionByTransaction(selectedTransactionId);\n\n              case 7:\n                allUserCommission = _context9.sent;\n                agentCommission = allUserCommission.filter(function (item) {\n                  return item.cashType === commissionType.AGENT_COMMISSION;\n                });\n                this.setState({\n                  transactionCommission: transactionCommission,\n                  allUserCommission: allUserCommission,\n                  isEditting: true,\n                  agentCommission: agentCommission,\n                  totalCommission: transactionCommission.totalCommission,\n                  regionalSplit: transactionCommission.regionalSplit\n                });\n\n              case 10:\n                _context9.next = 12;\n                return transactionService.getAllAgents(selectedTransactionId);\n\n              case 12:\n                allAgents = _context9.sent;\n                promise = allAgents.transactionAgents.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref10 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee8(item) {\n                    var referrer;\n                    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            _context8.next = 2;\n                            return userService.getAllReferrer(item.userId);\n\n                          case 2:\n                            referrer = _context8.sent;\n                            return _context8.abrupt(\"return\", referrer.referrers);\n\n                          case 4:\n                          case \"end\":\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8);\n                  }));\n\n                  return function (_x12) {\n                    return _ref10.apply(this, arguments);\n                  };\n                }());\n                _context9.next = 16;\n                return _Promise.all(promise);\n\n              case 16:\n                allReferrers = _context9.sent;\n\n                if (allAgents.transactionAgents.length >= 2) {\n                  this.setState({\n                    allAgents: allAgents.transactionAgents,\n                    numberOfAgents: allAgents.transactionAgents.length,\n                    referrers1: allReferrers[0] && allReferrers[0].slice(0, 2),\n                    referrers2: allReferrers[1] && allReferrers[1].slice(0, 2)\n                  });\n                } else {\n                  this.setState({\n                    allAgents: allAgents.transactionAgents,\n                    numberOfAgents: allAgents.transactionAgents.length,\n                    referrers: allReferrers[0] && allReferrers[0].slice(0, 2)\n                  });\n                }\n\n              case 18:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }]);\n\n  return CashBalanceModal;\n}(Component);\n\nexport default CashBalanceModal;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/component/CashBalance/index.js"],"names":["React","Component","Formik","Modal","NumberFormat","_","toastr","transactionService","userService","commissionService","getRoleLabel","isCoordinator","TRANSACTION_COST","ERRORS_AND_OMISSION","commissionType","CashBalanceModal","props","value","Math","floor","toString","split","length","listUser","userId","find","referrers","totalCommission","agentSplit","restCommission","map","referrer","index","name","_calculateReferralCost","setValue","state","_totalCommission","agentCommission","_calculateAgentCommission","totalReferralCost","_calculateTotalReferralCost","regionalSplit","_calculateRegionalSplit","agentSplit1","agentSplit2","ratio1","ratio2","referrers1","referrers2","agentCommission1","agentCommission2","totalReferralCost1","totalReferralCost2","regionalSplit1","regionalSplit2","isFirstReferral","tmp","toFixed","reduce","result","current","transactionCommission","allUserCommission","deleteTransactionCommission","id","promise","item","deleteUserCommission","all","allAgents","isShow","toggle","currentUser","selectedTransactionId","handleCloseTransaction","isEditting","numberOfAgents","_calculateAgentSplit","values","action","setSubmitting","error","_deleteAllInfo","createTransactionCommission","transactionId","coordinatorId","tcCommission","createUserCommission","cashType","TC_COMMISSION","AGENT_COMMISSION","profitShare","PROFIT_SHARE","referral","REFERRAL","console","isSubmitting","handleSubmit","setFieldValue","val","_handleChangeOn1Agent","floatValue","e","Number","target","_countDecimals","borderRadius","_renderReferrer","_getAgentCommissionWhenEdit","ratio","tcCommission1","tcCommission2","profitShare1","profitShare2","referral1","referral2","_handleChangeOn2Agents","role","findByTransactionId","getCommissionByTransaction","filter","setState","getAllAgents","transactionAgents","getAllReferrer","allReferrers","slice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik } from 'formik'\nimport { Modal } from 'reactstrap'\nimport NumberFormat from 'react-number-format'\nimport _ from 'lodash'\nimport toastr from 'toastr'\nimport {\n  transactionService,\n  userService,\n  commissionService\n} from '../../services'\nimport { getRoleLabel } from '../../view-models/User'\nimport { isCoordinator } from '../../../common/models/User'\nimport {\n  TRANSACTION_COST,\n  ERRORS_AND_OMISSION,\n  commissionType\n} from '../../../common/models/CashBalance'\n\nclass CashBalanceModal extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      allAgents: null\n    }\n  }\n  render () {\n    const {\n      isShow,\n      toggle,\n      currentUser,\n      selectedTransactionId,\n      handleCloseTransaction\n    } = this.props\n    const {\n      isEditting,\n      totalCommission,\n      regionalSplit,\n      agentCommission,\n      allAgents,\n      referrers,\n      referrers1,\n      referrers2,\n      numberOfAgents\n    } = this.state\n\n    return (\n      <Modal isOpen={isShow} toggle={toggle} id='new-transaction-modal'>\n        <div>\n          <button\n            type='button'\n            className='close bg-transparent pt-3 px-3'\n            data-dismiss='modal'\n            onClick={toggle}\n          >\n            &times;\n          </button>\n        </div>\n        {numberOfAgents === 1 && (\n          <Formik\n            initialValues={{\n              totalCommission: totalCommission || null,\n              agentCommission: agentCommission ? agentCommission[0].value : 0,\n              agentSplit: agentCommission\n                ? this._calculateAgentSplit(\n                  agentCommission[0].value,\n                  totalCommission\n                )\n                : 0.7,\n              totalReferralCost: agentCommission\n                ? this._calculateTotalReferralCost(\n                  referrers,\n                  agentCommission[0].value\n                )\n                : 0,\n              regionalSplit: regionalSplit || 0\n            }}\n            onSubmit={async (values, action) => {\n              const { setSubmitting } = action\n              if (!values.totalCommission) {\n                setSubmitting(true)\n                toastr.error('Total commission can not be empty')\n                setSubmitting(false)\n                return\n              }\n              try {\n                setSubmitting(true)\n                if (isEditting) {\n                  await this._deleteAllInfo()\n                }\n                // Save total commission, regional split\n                let transactionCommission = commissionService.createTransactionCommission(\n                  {\n                    totalCommission: values.totalCommission,\n                    regionalSplit: values.regionalSplit,\n                    transactionId: selectedTransactionId,\n                    coordinatorId: currentUser.id\n                  }\n                )\n\n                // Save transaction cost\n                let tcCommission = commissionService.createUserCommission({\n                  cashType: commissionType.TC_COMMISSION,\n                  value: TRANSACTION_COST,\n                  userId: currentUser.id,\n                  transactionId: selectedTransactionId\n                })\n\n                // Save agent commission\n                let agentCommission = commissionService.createUserCommission({\n                  cashType: commissionType.AGENT_COMMISSION,\n                  value: values.agentCommission,\n                  userId: allAgents[0].userId,\n                  transactionId: selectedTransactionId\n                })\n\n                // Save Profit-Share\n                let profitShare =\n                  values.totalReferralCost > 0 &&\n                  commissionService.createUserCommission({\n                    cashType: commissionType.PROFIT_SHARE,\n                    value: values.totalReferralCost,\n                    userId: allAgents[0].userId,\n                    transactionId: selectedTransactionId\n                  })\n\n                // Save Referral\n                let referral = Promise.all(\n                  referrers.map(async (referrer, index) => {\n                    await commissionService.createUserCommission({\n                      cashType: commissionType.REFERRAL,\n                      value: this._calculateReferralCost(\n                        index === 0,\n                        (values.totalCommission || 0) * (1 - values.agentSplit)\n                      ),\n                      userId: referrer.id,\n                      transactionId: selectedTransactionId\n                    })\n                  })\n                )\n                // Promise all\n                await Promise.all([\n                  transactionCommission,\n                  tcCommission,\n                  agentCommission,\n                  profitShare,\n                  referral\n                ])\n                handleCloseTransaction(selectedTransactionId)\n                toggle()\n              } catch (error) {\n                console.error(error)\n              }\n              setSubmitting(false)\n            }}\n          >\n            {({ values, isSubmitting, handleSubmit, setFieldValue }) => (\n              <form onSubmit={handleSubmit}>\n                <div className='modal-body px-5 mx-2'>\n                  <div>\n                    <h3 className='text-center font-weight-bold mb-5'>\n                      Cash Balance\n                    </h3>\n                    <div className='row'>\n                      <div className='col-12 text-center'>\n                        <label className='h5 font-weight-bold text-muted'>\n                          Total Commission\n                        </label>\n                        <div className='form-group col-12 col-md-6 mx-auto'>\n                          <NumberFormat\n                            readOnly={!isCoordinator(currentUser)}\n                            placeholder='$ Enter Commission Amount'\n                            thousandSeparator\n                            autoFocus\n                            prefix={'$ '}\n                            className='form-control'\n                            allowNegative={false}\n                            value={values.totalCommission}\n                            onValueChange={val => {\n                              this._handleChangeOn1Agent(\n                                val.floatValue,\n                                values.agentSplit,\n                                setFieldValue\n                              )\n                            }}\n                          />\n                          <p className='text-muted mb-5'>\n                            <small>\n                              Add the commission amount in full. Do not enter\n                              the full sale above.\n                            </small>\n                          </p>\n                        </div>\n                      </div>\n                      <div className='col-6 px-4'>\n                        <div>\n                          <div className='form-row mb-5'>\n                            <div className='col-8'>\n                              <label className='h5 font-weight-bold text-muted'>\n                                Agent's Commission\n                              </label>\n                              <NumberFormat\n                                readOnly\n                                thousandSeparator\n                                prefix={'$ '}\n                                className='form-control'\n                                value={values.agentCommission}\n                              />\n                            </div>\n                            <div className='col-4'>\n                              <label className='h5 font-weight-bold text-muted'>\n                                Agent's Split\n                              </label>\n                              <input\n                                type='number'\n                                min='0'\n                                max='1'\n                                step='0.1'\n                                className='form-control'\n                                value={values.agentSplit}\n                                onChange={e => {\n                                  let agentSplit = Number(e.target.value)\n                                  if (this._countDecimals(agentSplit) > 1) {\n                                    return\n                                  }\n                                  this._handleChangeOn1Agent(\n                                    values.totalCommission,\n                                    agentSplit,\n                                    setFieldValue\n                                  )\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        <label className='h5 font-weight-bold text-muted'>\n                          Total Referral Cost\n                        </label>\n                        <div className='form-group'>\n                          <table\n                            className='table rounded-pill m-0'\n                            style={{ borderRadius: '100' }}\n                          >\n                            <thead className='bg-secondary border'>\n                              <tr>\n                                <th scope='col'>Name</th>\n                                <th scope='col'>Balance</th>\n                              </tr>\n                            </thead>\n                            <tbody className='border'>\n                              {this._renderReferrer(\n                                referrers,\n                                values.totalCommission,\n                                values.agentSplit\n                              )}\n                            </tbody>\n                          </table>\n                          <p className='text-muted'>\n                            <small>\n                              {referrers.length <= 1\n                                ? `${referrers.length} Degree`\n                                : `${referrers.length} Degrees`}{' '}\n                              of Referrals\n                            </small>\n                          </p>\n                        </div>\n                      </div>\n                      <div className='col-6 px-4'>\n                        <label className='h5 font-weight-bold text-muted'>\n                          Transaction Cost\n                        </label>\n                        <div className='form-group'>\n                          <NumberFormat\n                            readOnly\n                            thousandSeparator\n                            prefix={'$ '}\n                            className='form-control'\n                            value={TRANSACTION_COST}\n                          />\n                          <p className='text-muted'>\n                            <small>Transaction Coordination Cost</small>\n                          </p>\n                        </div>\n\n                        <label className='h5 font-weight-bold text-muted'>\n                          Errors and Omission\n                        </label>\n                        <div className='form-group'>\n                          <NumberFormat\n                            readOnly\n                            thousandSeparator\n                            prefix={'$ '}\n                            className='form-control'\n                            value={ERRORS_AND_OMISSION}\n                          />\n                          <p className='text-muted'>\n                            <small>Flat Rate Errors and Omission Cost</small>\n                          </p>\n                        </div>\n\n                        <label className='h5 font-weight-bold text-muted'>\n                          Regional Split\n                        </label>\n                        <div className='form-group'>\n                          <NumberFormat\n                            readOnly\n                            thousandSeparator\n                            prefix={'$ '}\n                            className='form-control'\n                            value={values.regionalSplit}\n                          />\n                          <p className='text-muted'>\n                            <small>\n                              Agents Commission (60% of Brokerage Profits)\n                            </small>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className='text-center my-5'>\n                    <button type='submit' className='btn text-white py-2 px-3'>\n                      {isSubmitting && (\n                        <span className='spinner-border spinner-border-sm mr-2' />\n                      )}\n                      Close Transaction\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </Formik>\n        )}\n        {numberOfAgents === 2 && (\n          <Formik\n            initialValues={{\n              totalCommission: totalCommission || null,\n              agentCommission1: agentCommission\n                ? this._getAgentCommissionWhenEdit(\n                  agentCommission,\n                  allAgents[0].userId\n                ).value\n                : 0,\n              ratio1: agentCommission\n                ? this._getAgentCommissionWhenEdit(\n                  agentCommission,\n                  allAgents[0].userId\n                ).ratio\n                : 0.5,\n              ratio2: agentCommission\n                ? this._getAgentCommissionWhenEdit(\n                  agentCommission,\n                  allAgents[1].userId\n                ).ratio\n                : 0.5,\n              agentCommission2: agentCommission\n                ? this._getAgentCommissionWhenEdit(\n                  agentCommission,\n                  allAgents[1].userId\n                ).value\n                : 0,\n              totalReferralCost1: agentCommission\n                ? this._calculateTotalReferralCost(\n                  referrers1,\n                  this._getAgentCommissionWhenEdit(\n                    agentCommission,\n                    allAgents[0].userId\n                  )\n                )\n                : 0,\n              totalReferralCost2: agentCommission\n                ? this._calculateTotalReferralCost(\n                  referrers2,\n                  this._getAgentCommissionWhenEdit(\n                    agentCommission,\n                    allAgents[1].userId\n                  )\n                )\n                : 0,\n              agentSplit1: agentCommission\n                ? this._calculateAgentSplit(\n                  this._getAgentCommissionWhenEdit(\n                    agentCommission,\n                    allAgents[0].userId\n                  ).value,\n                  totalCommission *\n                      this._getAgentCommissionWhenEdit(\n                        agentCommission,\n                        allAgents[0].userId\n                      ).ratio\n                )\n                : 0.9,\n              agentSplit2: agentCommission\n                ? this._calculateAgentSplit(\n                  this._getAgentCommissionWhenEdit(\n                    agentCommission,\n                    allAgents[1].userId\n                  ).value,\n                  totalCommission *\n                      this._getAgentCommissionWhenEdit(\n                        agentCommission,\n                        allAgents[1].userId\n                      ).ratio\n                )\n                : 0.9,\n              regionalSplit: regionalSplit || 0\n            }}\n            onSubmit={async (values, action) => {\n              const { setSubmitting } = action\n              if (!values.totalCommission) {\n                setSubmitting(true)\n                toastr.error('Total commission can not be empty')\n                setSubmitting(false)\n                return\n              }\n              try {\n                setSubmitting(true)\n                if (isEditting) {\n                  await this._deleteAllInfo()\n                }\n                // Save total commission, regional split\n                let transactionCommission = await commissionService.createTransactionCommission(\n                  {\n                    totalCommission: values.totalCommission,\n                    regionalSplit: values.regionalSplit,\n                    transactionId: selectedTransactionId,\n                    coordinatorId: currentUser.id\n                  }\n                )\n\n                // Save transaction cost\n                let tcCommission1 = await commissionService.createUserCommission(\n                  {\n                    cashType: commissionType.TC_COMMISSION,\n                    value: TRANSACTION_COST,\n                    userId: currentUser.id,\n                    transactionId: selectedTransactionId\n                  }\n                )\n\n                let tcCommission2 = await commissionService.createUserCommission(\n                  {\n                    cashType: commissionType.TC_COMMISSION,\n                    value: TRANSACTION_COST,\n                    userId: currentUser.id,\n                    transactionId: selectedTransactionId\n                  }\n                )\n\n                // Save agent commission\n                let agentCommission1 = await commissionService.createUserCommission(\n                  {\n                    cashType: commissionType.AGENT_COMMISSION,\n                    value: values.agentCommission1,\n                    userId: allAgents[0].userId,\n                    transactionId: selectedTransactionId,\n                    ratio: values.ratio1\n                  }\n                )\n\n                let agentCommission2 = await commissionService.createUserCommission(\n                  {\n                    cashType: commissionType.AGENT_COMMISSION,\n                    value: values.agentCommission2,\n                    userId: allAgents[1].userId,\n                    transactionId: selectedTransactionId,\n                    ratio: values.ratio2\n                  }\n                )\n\n                // Save Profit-Share\n                let profitShare1 =\n                  values.totalReferralCost1 > 0 &&\n                  (await commissionService.createUserCommission({\n                    cashType: commissionType.PROFIT_SHARE,\n                    value: values.totalReferralCost1,\n                    userId: allAgents[0].userId,\n                    transactionId: selectedTransactionId\n                  }))\n\n                let profitShare2 =\n                  values.totalReferralCost2 > 0 &&\n                  (await commissionService.createUserCommission({\n                    cashType: commissionType.PROFIT_SHARE,\n                    value: values.totalReferralCost2,\n                    userId: allAgents[1].userId,\n                    transactionId: selectedTransactionId\n                  }))\n\n                // Save Referral\n                let referral1 = await Promise.all(\n                  referrers1.map(async (referrer, index) => {\n                    await commissionService.createUserCommission({\n                      cashType: commissionType.REFERRAL,\n                      value: this._calculateReferralCost(\n                        index === 0,\n                        values.agentCommission1\n                      ),\n                      userId: referrer.id,\n                      transactionId: selectedTransactionId\n                    })\n                  })\n                )\n\n                let referral2 = await Promise.all(\n                  referrers2.map(async (referrer, index) => {\n                    await commissionService.createUserCommission({\n                      cashType: commissionType.REFERRAL,\n                      value: this._calculateReferralCost(\n                        index === 0,\n                        values.agentCommission2\n                      ),\n                      userId: referrer.id,\n                      transactionId: selectedTransactionId\n                    })\n                  })\n                )\n                // Promise all\n                await Promise.all([\n                  transactionCommission,\n                  tcCommission1,\n                  tcCommission2,\n                  agentCommission1,\n                  agentCommission2,\n                  profitShare1,\n                  profitShare2,\n                  referral1,\n                  referral2\n                ])\n\n                handleCloseTransaction(selectedTransactionId)\n                toggle()\n              } catch (error) {\n                console.error(error)\n              }\n              setSubmitting(false)\n            }}\n          >\n            {({ values, isSubmitting, handleSubmit, setFieldValue }) => (\n              <form onSubmit={handleSubmit}>\n                <div className='modal-body px-5 mx-2'>\n                  <div>\n                    <h3 className='text-center font-weight-bold mb-5'>\n                      Cash Balance\n                    </h3>\n                    <div className='row'>\n                      <div className='col-12 text-center'>\n                        <label className='h5 font-weight-bold text-muted'>\n                          Total Commission\n                        </label>\n                        <div className='form-group col-md-6 mx-auto'>\n                          <NumberFormat\n                            readOnly={!isCoordinator(currentUser)}\n                            placeholder='$ Enter Commission Amount'\n                            thousandSeparator\n                            autoFocus\n                            prefix={'$ '}\n                            className='form-control'\n                            allowNegative={false}\n                            value={values.totalCommission}\n                            onValueChange={val => {\n                              this._handleChangeOn2Agents(\n                                val.floatValue,\n                                values.agentSplit1,\n                                values.agentSplit2,\n                                values.ratio1,\n                                values.ratio2,\n                                setFieldValue\n                              )\n                            }}\n                          />\n                          <p className='text-muted mb-5'>\n                            <small>\n                              Add the commission amount in full. Do not enter\n                              the full sale above.\n                            </small>\n                          </p>\n                        </div>\n                      </div>\n                      <div className='col-12 px-4'>\n                        <div className='form-row mb-5'>\n                          <div className='col-6'>\n                            <label className='h5 font-weight-bold text-muted'>\n                              Agent's Commission (\n                              {getRoleLabel(allAgents[0].role)})\n                            </label>\n                            <NumberFormat\n                              readOnly\n                              thousandSeparator\n                              prefix={'$ '}\n                              className='form-control'\n                              value={values.agentCommission1}\n                            />\n                          </div>\n                          <div className='col-3'>\n                            <label className='h5 font-weight-bold text-muted'>\n                              Agent's Split\n                            </label>\n                            <input\n                              type='number'\n                              min={0}\n                              max={1}\n                              step='0.1'\n                              className='form-control'\n                              value={values.agentSplit1}\n                              onkeydown='false'\n                              onChange={e => {\n                                let agentSplit1 = Number(e.target.value)\n                                if (this._countDecimals(agentSplit1) > 1) return\n                                this._handleChangeOn2Agents(\n                                  values.totalCommission,\n                                  agentSplit1,\n                                  values.agentSplit2,\n                                  values.ratio1,\n                                  values.ratio2,\n                                  setFieldValue\n                                )\n                              }}\n                            />\n                          </div>\n                          <div className='col-3'>\n                            <label className='h5 font-weight-bold text-muted'>\n                              Ratio\n                            </label>\n                            <input\n                              type='number'\n                              min={0}\n                              max={1}\n                              step='0.1'\n                              className='form-control'\n                              value={values.ratio1}\n                              onkeydown='return false'\n                              onChange={e => {\n                                let ratio1 = Number(e.target.value)\n                                let ratio2 = parseFloat((1 - ratio1).toFixed(1))\n                                if (this._countDecimals(ratio1) > 1) return\n                                this._handleChangeOn2Agents(\n                                  values.totalCommission,\n                                  values.agentSplit1,\n                                  values.agentSplit2,\n                                  ratio1,\n                                  ratio2,\n                                  setFieldValue\n                                )\n                              }}\n                            />\n                          </div>\n                        </div>\n\n                        <div className='form-row mb-5'>\n                          <div className='col-6'>\n                            <label className='h5 font-weight-bold text-muted'>\n                              Agent's Commission (\n                              {getRoleLabel(allAgents[1].role)})\n                            </label>\n                            <NumberFormat\n                              readOnly\n                              thousandSeparator\n                              prefix={'$ '}\n                              className='form-control'\n                              value={values.agentCommission2}\n                            />\n                          </div>\n                          <div className='col-3'>\n                            <label className='h5 font-weight-bold text-muted'>\n                              Agent's Split\n                            </label>\n                            <input\n                              type='number'\n                              min={0}\n                              max={1}\n                              step='0.1'\n                              className='form-control'\n                              value={values.agentSplit2}\n                              onkeydown='return false'\n                              onChange={e => {\n                                let agentSplit2 = Number(e.target.value)\n                                if (this._countDecimals(agentSplit2) > 1) return\n                                this._handleChangeOn2Agents(\n                                  values.totalCommission,\n                                  values.agentSplit1,\n                                  agentSplit2,\n                                  values.ratio1,\n                                  values.ratio2,\n                                  setFieldValue\n                                )\n                              }}\n                            />\n                          </div>\n                          <div className='col-3'>\n                            <label className='h5 font-weight-bold text-muted'>\n                              Ratio\n                            </label>\n                            <input\n                              type='number'\n                              min={0}\n                              max={1}\n                              step='0.1'\n                              className='form-control'\n                              value={values.ratio2}\n                              onkeydown='return false'\n                              onChange={e => {\n                                let ratio2 = Number(e.target.value)\n                                let ratio1 = parseFloat((1 - ratio2).toFixed(1))\n                                if (this._countDecimals(ratio2) > 1) return\n                                this._handleChangeOn2Agents(\n                                  values.totalCommission,\n                                  values.agentSplit1,\n                                  values.agentSplit2,\n                                  ratio1,\n                                  ratio2,\n                                  setFieldValue\n                                )\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col-6 px-4'>\n                        <label className='h5 font-weight-bold text-muted'>\n                          Referral Cost ({getRoleLabel(allAgents[0].role)})\n                        </label>\n                        <div className='form-group'>\n                          <table className='table rounded-pill m-0'>\n                            <thead className='bg-secondary border'>\n                              <tr>\n                                <th scope='col'>Name</th>\n                                <th scope='col'>Balance</th>\n                              </tr>\n                            </thead>\n                            <tbody className='border'>\n                              {this._renderReferrer(\n                                referrers1,\n                                values.totalCommission * values.ratio1,\n                                values.agentSplit1\n                              )}\n                            </tbody>\n                          </table>\n                          <p className='text-muted'>\n                            <small>\n                              {referrers1.length <= 1\n                                ? `${referrers1.length} Degree`\n                                : `${referrers1.length} Degrees`}{' '}\n                              of Referrals\n                            </small>\n                          </p>\n                        </div>\n                        <label className='h5 font-weight-bold text-muted'>\n                          Referral Cost ({getRoleLabel(allAgents[1].role)})\n                        </label>\n                        <div className='form-group'>\n                          <table className='table rounded-pill m-0'>\n                            <thead className='bg-secondary border'>\n                              <tr>\n                                <th scope='col'>Name</th>\n                                <th scope='col'>Balance</th>\n                              </tr>\n                            </thead>\n                            <tbody className='border'>\n                              {this._renderReferrer(\n                                referrers2,\n                                values.totalCommission * values.ratio2,\n                                values.agentSplit2\n                              )}\n                            </tbody>\n                          </table>\n                          <p className='text-muted mb-5'>\n                            <small>\n                              {referrers2.length <= 1\n                                ? `${referrers2.length} Degree`\n                                : `${referrers2.length} Degrees`}{' '}\n                              of Referrals\n                            </small>\n                          </p>\n                        </div>\n                      </div>\n                      <div className='col-6 px-4'>\n                        <label className='h5 font-weight-bold text-muted'>\n                          Transaction Cost\n                        </label>\n                        <div className='form-group'>\n                          <NumberFormat\n                            readOnly\n                            thousandSeparator\n                            prefix={'$ '}\n                            className='form-control'\n                            value={TRANSACTION_COST}\n                          />\n                          <p className='text-muted mb-5'>\n                            <small>Transaction Coordination Cost</small>\n                          </p>\n                        </div>\n\n                        <label className='h5 font-weight-bold text-muted'>\n                          Errors and Omission\n                        </label>\n                        <div className='form-group'>\n                          <NumberFormat\n                            readOnly\n                            thousandSeparator\n                            prefix={'$ '}\n                            className='form-control'\n                            value={ERRORS_AND_OMISSION}\n                          />\n                          <p className='text-muted mb-5'>\n                            <small>Flat Rate Errors and Omission Cost</small>\n                          </p>\n                        </div>\n\n                        <label className='h5 font-weight-bold text-muted'>\n                          Regional Split\n                        </label>\n                        <div className='form-group'>\n                          <NumberFormat\n                            readOnly\n                            thousandSeparator\n                            prefix={'$ '}\n                            className='form-control'\n                            value={values.regionalSplit}\n                          />\n                          <p className='text-muted mb-5'>\n                            <small>\n                              Agents Commission (60% of Brokerage Profits)\n                            </small>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className='text-center'>\n                    <button type='submit' className='btn text-white px-5 mb-3'>\n                      {isSubmitting && (\n                        <span className='spinner-border spinner-border-sm mr-2' />\n                      )}\n                      Close Transaction\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </Formik>\n        )}\n      </Modal>\n    )\n  }\n\n  _countDecimals = value => {\n    if (Math.floor(value) === value) return 0\n    return value.toString().split('.')[1].length || 0\n  }\n\n  _getAgentCommissionWhenEdit = (listUser, userId) => {\n    return _.find(listUser, { userId })\n  }\n\n  _renderReferrer = (referrers, totalCommission, agentSplit) => {\n    let restCommission = (totalCommission || 0) * (1 - agentSplit)\n    if (referrers.length === 0) {\n      return (\n        <tr>\n          <td colSpan='2' />\n        </tr>\n      )\n    } else {\n      return referrers.map(\n        (referrer, index) =>\n          index < 2 && (\n            <tr key={index}>\n              <td>{referrer.name}</td>\n              <td>\n                $ {this._calculateReferralCost(index === 0, restCommission)}\n              </td>\n            </tr>\n          )\n      )\n    }\n  }\n\n  _handleChangeOn1Agent = (totalCommission, agentSplit, setValue) => {\n    if (totalCommission < 0 || agentSplit > 1 || agentSplit < 0) return\n    const { referrers } = this.state\n    let _totalCommission = totalCommission || 0\n    let restCommission = _totalCommission * (1 - agentSplit)\n    let agentCommission = this._calculateAgentCommission(\n      _totalCommission,\n      agentSplit\n    )\n    let totalReferralCost = this._calculateTotalReferralCost(\n      referrers,\n      restCommission\n    )\n    let regionalSplit = this._calculateRegionalSplit(\n      restCommission,\n      totalReferralCost\n    )\n    setValue('totalReferralCost', totalReferralCost)\n    setValue('totalCommission', totalCommission)\n    setValue('agentSplit', agentSplit)\n    setValue('agentCommission', agentCommission < 0 ? 0 : agentCommission)\n    setValue('regionalSplit', regionalSplit)\n  }\n\n  _handleChangeOn2Agents = (\n    totalCommission,\n    agentSplit1,\n    agentSplit2,\n    ratio1,\n    ratio2,\n    setValue\n  ) => {\n    if (\n      totalCommission < 0 ||\n      ratio1 > 1 ||\n      ratio2 < 0 ||\n      agentSplit1 > 1 ||\n      agentSplit1 < 0 ||\n      agentSplit2 > 1 ||\n      agentSplit2 < 0\n    ) {\n      return\n    }\n    let _totalCommission = totalCommission || 0\n    const { referrers1, referrers2 } = this.state\n\n    let agentCommission1 = this._calculateAgentCommission(\n      totalCommission * ratio1,\n      agentSplit1\n    )\n    let agentCommission2 = this._calculateAgentCommission(\n      totalCommission * ratio2,\n      agentSplit2\n    )\n    let totalReferralCost1 = this._calculateTotalReferralCost(\n      referrers1,\n      _totalCommission * ratio1 * (1 - agentSplit1)\n    )\n    let totalReferralCost2 = this._calculateTotalReferralCost(\n      referrers2,\n      _totalCommission * ratio2 * (1 - agentSplit2)\n    )\n    let regionalSplit1 = this._calculateRegionalSplit(\n      _totalCommission * ratio1 * (1 - agentSplit1),\n      totalReferralCost1\n    )\n    let regionalSplit2 = this._calculateRegionalSplit(\n      _totalCommission * ratio2 * (1 - agentSplit2),\n      totalReferralCost2\n    )\n\n    setValue('ratio1', ratio1)\n    setValue('ratio2', ratio2)\n\n    setValue('totalReferralCost1', totalReferralCost1)\n    setValue('totalReferralCost2', totalReferralCost2)\n    setValue('totalCommission', totalCommission)\n    setValue('agentSplit1', agentSplit1)\n    setValue('agentSplit2', agentSplit2)\n    setValue('agentCommission1', agentCommission1 < 0 ? 0 : agentCommission1)\n    setValue('agentCommission2', agentCommission2 < 0 ? 0 : agentCommission2)\n    setValue('regionalSplit', regionalSplit1 + regionalSplit2)\n  }\n\n  _calculateAgentSplit = (agentCommission, totalCommission) => {\n    return (\n      (agentCommission + ERRORS_AND_OMISSION + TRANSACTION_COST) /\n      totalCommission\n    )\n  }\n\n  _calculateReferralCost = (isFirstReferral, restCommission) => {\n    let tmp = parseFloat(\n      (restCommission * (isFirstReferral ? 0.04 : 0.02)).toFixed(3)\n    )\n    return tmp\n  }\n\n  _calculateAgentCommission = (totalCommission, agentSplit) => {\n    return totalCommission\n      ? parseFloat(\n        (\n          totalCommission * agentSplit -\n            TRANSACTION_COST -\n            ERRORS_AND_OMISSION\n        ).toFixed(1)\n      )\n      : 0\n  }\n\n  _calculateTotalReferralCost = (referrers, restCommission) => {\n    let totalReferralCost = referrers.reduce((result, current, index) => {\n      result = result + this._calculateReferralCost(index === 0, restCommission)\n      return parseFloat(result.toFixed(3))\n    }, 0)\n    return totalReferralCost\n  }\n\n  _calculateRegionalSplit = (restCommission, totalReferralCost) => {\n    return parseFloat(((restCommission - totalReferralCost) * 0.6).toFixed(4))\n  }\n\n  _deleteAllInfo = async () => {\n    const { transactionCommission, allUserCommission } = this.state\n    await commissionService.deleteTransactionCommission(\n      transactionCommission.id\n    )\n    const promise = allUserCommission.map(async item => {\n      await commissionService.deleteUserCommission(item.id)\n    })\n    await Promise.all(promise)\n  }\n\n  async componentDidMount () {\n    const { selectedTransactionId } = this.props\n\n    const transactionCommission = await commissionService.findByTransactionId(\n      selectedTransactionId\n    )\n\n    if (transactionCommission) {\n      const allUserCommission = await commissionService.getCommissionByTransaction(\n        selectedTransactionId\n      )\n      const agentCommission = allUserCommission.filter(\n        item => item.cashType === commissionType.AGENT_COMMISSION\n      )\n      this.setState({\n        transactionCommission,\n        allUserCommission,\n        isEditting: true,\n        agentCommission,\n        totalCommission: transactionCommission.totalCommission,\n        regionalSplit: transactionCommission.regionalSplit\n      })\n    }\n\n    const allAgents = await transactionService.getAllAgents(\n      selectedTransactionId\n    )\n\n    const promise = allAgents.transactionAgents.map(async item => {\n      const referrer = await userService.getAllReferrer(item.userId)\n      return referrer.referrers\n    })\n\n    const allReferrers = await Promise.all(promise)\n\n    if (allAgents.transactionAgents.length >= 2) {\n      this.setState({\n        allAgents: allAgents.transactionAgents,\n        numberOfAgents: allAgents.transactionAgents.length,\n        referrers1: allReferrers[0] && allReferrers[0].slice(0, 2),\n        referrers2: allReferrers[1] && allReferrers[1].slice(0, 2)\n      })\n    } else {\n      this.setState({\n        allAgents: allAgents.transactionAgents,\n        numberOfAgents: allAgents.transactionAgents.length,\n        referrers: allReferrers[0] && allReferrers[0].slice(0, 2)\n      })\n    }\n  }\n}\n\nexport default CashBalanceModal\n"]},"metadata":{},"sourceType":"module"}