{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport React, { Component } from 'react';\nimport { Modal } from 'reactstrap';\nimport { Formik } from 'formik';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\nvar InformationInvitedModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InformationInvitedModal, _Component);\n\n  function InformationInvitedModal() {\n    _classCallCheck(this, InformationInvitedModal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InformationInvitedModal).apply(this, arguments));\n  }\n\n  _createClass(InformationInvitedModal, [{\n    key: \"render\",\n    value: function render() {\n      var _ref = this.props.toggleModalInfoTransactionParties || '',\n          firstName = _ref.firstName,\n          lastName = _ref.lastName,\n          email = _ref.email,\n          phoneNumber = _ref.phoneNumber,\n          company = _ref.company,\n          licenseNumber = _ref.licenseNumber,\n          role = _ref.role;\n\n      return React.createElement(Modal, {\n        isOpen: this.props.toggleModalInfoTransactionParties,\n        toggle: this.props._CloseInfoTransactionParties,\n        id: \"create-transaction-party-profile-modal\"\n      }, React.createElement(\"div\", {\n        className: \"modal-header modal-header--change\"\n      }, React.createElement(\"div\", {\n        className: \"text-center w-100\"\n      }, React.createElement(\"h5\", {\n        className: \"modal-title font-weight-bold\",\n        id: \"exampleModalLabel\"\n      }, \"Transaction Party Information\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close bg-transparent\",\n        \"data-dismiss\": \"modal\",\n        onClick: this.props._CloseInfoTransactionParties\n      }, \"\\xD7\")), React.createElement(Formik, {\n        initialValues: {\n          firstName: this.props.toggleModalInfoTransactionParties ? firstName : '',\n          lastName: this.props.toggleModalInfoTransactionParties ? lastName : '',\n          email: this.props.toggleModalInfoTransactionParties ? email : '',\n          phoneNumber: this.props.toggleModalInfoTransactionParties ? phoneNumber : '',\n          company: this.props.toggleModalInfoTransactionParties ? company : '',\n          licenseNumber: this.props.toggleModalInfoTransactionParties ? licenseNumber : ''\n        } // onSubmit={this._onSubmitModalUpdateMyProfile}\n        // validate={values => {\n        //   let error = {}\n        //   if (partyTarget.role !== 'seller' && partyTarget.role !== 'buyer') {\n        //     if (\n        //       values.firstName === '' ||\n        //       values.lastName === '' ||\n        //       values.email === '' ||\n        //       values.phoneNumber.length < 14 ||\n        //       values.company === '' ||\n        //       values.licenseNumber === ''\n        //     ) {\n        //       error.details = `${partyTarget.role} details are required`\n        //     }\n        //   } else {\n        //     if (\n        //       values.firstName.length < 1 ||\n        //       values.lastName.length < 1 ||\n        //       values.email.length < 1 ||\n        //       values.phoneNumber.length < 14\n        //     ) {\n        //       error.details = `${partyTarget.role} details are required`\n        //     }\n        //   }\n        //   return error\n        // }}\n\n      }, function (_ref2) {\n        var values = _ref2.values,\n            errors = _ref2.errors,\n            isValid = _ref2.isValid,\n            isSubmitting = _ref2.isSubmitting,\n            handleSubmit = _ref2.handleSubmit,\n            handleChange = _ref2.handleChange;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, React.createElement(\"div\", {\n          className: \"modal-body px-5 mx-2\"\n        }, React.createElement(\"div\", null, React.createElement(\"div\", {\n          className: \"row pt-3\"\n        }, React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"First Name\",\n          name: \"firstName\",\n          onChange: handleChange,\n          value: values.firstName,\n          disabled: true\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Last Name\",\n          name: \"lastName\",\n          onChange: handleChange,\n          value: values.lastName,\n          disabled: true\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          disabled: true,\n          className: \"form-control\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          onChange: handleChange,\n          value: values.email\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(PhoneInput, {\n          country: 'us',\n          enableSearch: true,\n          onChange: function onChange(value) {\n            handleChange({\n              target: {\n                name: 'phoneNumber',\n                value: value\n              }\n            });\n          },\n          value: values.phoneNumber,\n          placeholder: \"Phone Number\",\n          className: \"form-control\",\n          disabled: true\n        })), role !== 'seller' && role !== 'buyer' && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          disabled: true,\n          className: \"form-control\",\n          placeholder: \"Company\",\n          name: \"company\",\n          onChange: handleChange,\n          value: values.company\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          disabled: true,\n          className: \"form-control\",\n          placeholder: \"License Number\",\n          name: \"licenseNumber\",\n          onChange: handleChange,\n          value: values.licenseNumber\n        }))))), errors.details && React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, errors.details))));\n      }));\n    }\n  }]);\n\n  return InformationInvitedModal;\n}(Component);\n\nexport { InformationInvitedModal as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/TransactionPartiesPage/InformationInvitedModal.js"],"names":["React","Component","Modal","Formik","PhoneInput","InformationInvitedModal","props","toggleModalInfoTransactionParties","firstName","lastName","email","phoneNumber","company","licenseNumber","role","_CloseInfoTransactionParties","values","errors","isValid","isSubmitting","handleSubmit","handleChange","value","target","name","details"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal } from 'reactstrap'\nimport { Formik } from 'formik'\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\n\nexport default class InformationInvitedModal extends Component {\n  render () {\n    let {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      company,\n      licenseNumber,\n      role\n    } = this.props.toggleModalInfoTransactionParties || ''\n\n    return (\n      <Modal\n        isOpen={this.props.toggleModalInfoTransactionParties}\n        toggle={this.props._CloseInfoTransactionParties}\n        id='create-transaction-party-profile-modal'\n      >\n        <div className='modal-header modal-header--change'>\n          <div className='text-center w-100'>\n            <h5 className='modal-title font-weight-bold' id='exampleModalLabel'>\n              Transaction Party Information\n            </h5>\n            {/* <small>\n              Once you enter your information below, you will be able to\n              access the transaction you have been added to.\n            </small> */}\n          </div>\n          <button\n            type='button'\n            className='close bg-transparent'\n            data-dismiss='modal'\n            onClick={this.props._CloseInfoTransactionParties}\n          >\n            &times;\n          </button>\n        </div>\n        <Formik\n          initialValues={{\n            firstName: this.props.toggleModalInfoTransactionParties\n              ? firstName\n              : '',\n            lastName: this.props.toggleModalInfoTransactionParties\n              ? lastName\n              : '',\n            email: this.props.toggleModalInfoTransactionParties ? email : '',\n            phoneNumber: this.props.toggleModalInfoTransactionParties\n              ? phoneNumber\n              : '',\n            company: this.props.toggleModalInfoTransactionParties\n              ? company\n              : '',\n            licenseNumber: this.props.toggleModalInfoTransactionParties\n              ? licenseNumber\n              : ''\n          }}\n          // onSubmit={this._onSubmitModalUpdateMyProfile}\n          // validate={values => {\n          //   let error = {}\n          //   if (partyTarget.role !== 'seller' && partyTarget.role !== 'buyer') {\n          //     if (\n          //       values.firstName === '' ||\n          //       values.lastName === '' ||\n          //       values.email === '' ||\n          //       values.phoneNumber.length < 14 ||\n          //       values.company === '' ||\n          //       values.licenseNumber === ''\n          //     ) {\n          //       error.details = `${partyTarget.role} details are required`\n          //     }\n          //   } else {\n          //     if (\n          //       values.firstName.length < 1 ||\n          //       values.lastName.length < 1 ||\n          //       values.email.length < 1 ||\n          //       values.phoneNumber.length < 14\n          //     ) {\n          //       error.details = `${partyTarget.role} details are required`\n          //     }\n          //   }\n\n          //   return error\n          // }}\n        >\n          {({\n            values,\n            errors,\n            isValid,\n            isSubmitting,\n            handleSubmit,\n            handleChange\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <div className='modal-body px-5 mx-2'>\n                <div>\n                  {/* <h4 className='text-center'>{getRoleLabel(welcomeInvitation.role)}</h4> */}\n                  <div className='row pt-3'>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <input\n                          className='form-control'\n                          placeholder='First Name'\n                          name='firstName'\n                          onChange={handleChange}\n                          value={values.firstName}\n                          disabled\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <input\n                          className='form-control'\n                          placeholder='Last Name'\n                          name='lastName'\n                          onChange={handleChange}\n                          value={values.lastName}\n                          disabled\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <input\n                          disabled\n                          className='form-control'\n                          placeholder='Email Address'\n                          name='email'\n                          onChange={handleChange}\n                          value={values.email}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <PhoneInput\n                        country={'us'}\n                        enableSearch\n                        onChange={value => {\n                          handleChange({\n                            target: { name: 'phoneNumber', value }\n                          })\n                        }}\n                        value={values.phoneNumber}\n                        placeholder='Phone Number'\n                        className='form-control'\n                        disabled\n                      />\n                    </div>\n                    {role !== 'seller' && role !== 'buyer' && (\n                      <React.Fragment>\n                        <div className='col-6'>\n                          <div className='form-group'>\n                            <input\n                              disabled\n                              className='form-control'\n                              placeholder='Company'\n                              name='company'\n                              onChange={handleChange}\n                              value={values.company}\n                            />\n                          </div>\n                        </div>\n                        <div className='col-6'>\n                          <div className='form-group'>\n                            <input\n                              disabled\n                              className='form-control'\n                              placeholder='License Number'\n                              name='licenseNumber'\n                              onChange={handleChange}\n                              value={values.licenseNumber}\n                            />\n                          </div>\n                        </div>\n                      </React.Fragment>\n                    )}\n                  </div>\n                  {errors.details && (\n                    <div className='text-danger text-center'>\n                      {errors.details}\n                    </div>\n                  )}\n                </div>\n                {/* <div className='text-center my-5'>\n                  <button\n                    disabled={errors.details}\n                    type='submit'\n                    className='btn btn-info text-white py-2 px-5'\n                  >\n                    {isSubmitting && (\n                      <span className='spinner-border spinner-border-sm mr-2' />\n                    )}\n                    Access Transaction\n                  </button>\n                </div> */}\n              </div>\n            </form>\n          )}\n        </Formik>\n      </Modal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}