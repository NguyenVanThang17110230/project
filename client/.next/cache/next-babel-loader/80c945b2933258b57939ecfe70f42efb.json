{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _ from 'lodash';\nimport globalRedux from './globalRedux';\nimport uiStateRedux from './uiStateRedux';\nimport { isAdmin } from '../../common/models/User'; // import { stat } from 'fs/promises'\n\nvar actionCreators = {};\n\nactionCreators.getLoginUser = function () {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState, _ref) {\n        var authService, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                authService = _ref.authService;\n                _context.next = 3;\n                return authService.getLoginUser();\n\n              case 3:\n                user = _context.sent;\n                dispatch(actionCreators.fetchLoginUserSuccess(user));\n                return _context.abrupt(\"return\", user);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.loginWithEmail = function (_ref3) {\n  var email = _ref3.email,\n      password = _ref3.password;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState, _ref4) {\n        var authService, user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                authService = _ref4.authService;\n                _context2.next = 3;\n                return authService.loginWithEmail({\n                  email: email,\n                  password: password\n                });\n\n              case 3:\n                user = _context2.sent;\n                dispatch(actionCreators.fetchLoginUserSuccess(user));\n\n                if (isAdmin(user)) {\n                  dispatch(uiStateRedux.fetchAdminSideBarStatus());\n                }\n\n                return _context2.abrupt(\"return\", user);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x4, _x5, _x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.signupWithEmail = function (_ref6) {\n  var firstName = _ref6.firstName,\n      lastName = _ref6.lastName,\n      email = _ref6.email,\n      password = _ref6.password,\n      role = _ref6.role;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch, getState, _ref7) {\n        var authService, user;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                authService = _ref7.authService;\n                _context3.next = 3;\n                return authService.signupWithEmail({\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  password: password,\n                  role: role\n                });\n\n              case 3:\n                user = _context3.sent;\n                dispatch(actionCreators.fetchLoginUserSuccess(user));\n\n                if (isAdmin(user)) {\n                  dispatch(uiStateRedux.fetchAdminSideBarStatus());\n                }\n\n                return _context3.abrupt(\"return\", user);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref8.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.logout = function () {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref10 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch, getState, _ref9) {\n        var authService;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                authService = _ref9.authService;\n                _context4.next = 3;\n                return authService.logout();\n\n              case 3:\n                dispatch(actionCreators.fetchLoginUserSuccess(null));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x10, _x11, _x12) {\n        return _ref10.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.updateAccountInfo = function (_ref11) {\n  var name = _ref11.name,\n      email = _ref11.email,\n      preferredLanguage = _ref11.preferredLanguage;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref13 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch, getState, _ref12) {\n        var authService;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                authService = _ref12.authService;\n                _context5.next = 3;\n                return authService.updateAccountInfo({\n                  name: name,\n                  email: email,\n                  preferredLanguage: preferredLanguage\n                });\n\n              case 3:\n                dispatch(actionCreators.updateLoginUserSuccess({\n                  name: name,\n                  email: email,\n                  preferredLanguage: preferredLanguage\n                }));\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x13, _x14, _x15) {\n        return _ref13.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.updateAvatar = function (file) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref15 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch, getState, _ref14) {\n        var authService, user;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                authService = _ref14.authService;\n                _context6.next = 3;\n                return authService.uploadAvatar(file);\n\n              case 3:\n                user = _context6.sent;\n                dispatch(actionCreators.updateLoginUserSuccess({\n                  avatar: user.avatar\n                }));\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x16, _x17, _x18) {\n        return _ref15.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.createMainImage = function (file) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref17 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch, getState, _ref16) {\n        var transactionService, transaction;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                transactionService = _ref16.transactionService;\n                _context7.next = 3;\n                return transactionService.uploadAvatar(file);\n\n              case 3:\n                transaction = _context7.sent;\n                dispatch(actionCreators.updateLoginUserSuccess({\n                  imageURL: transaction.imageURL\n                }));\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x19, _x20, _x21) {\n        return _ref17.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.updateUserrAvatar = function (avatar) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref19 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(dispatch, getState, _ref18) {\n        var authService;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                authService = _ref18.authService;\n                dispatch(actionCreators.updateLoginUserSuccess({\n                  avatar: avatar\n                }));\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x22, _x23, _x24) {\n        return _ref19.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.updatePassword = function (oldPassword, newPassword) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref21 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(dispatch, getState, _ref20) {\n        var authService;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                authService = _ref20.authService;\n                _context9.next = 3;\n                return authService.updatePassword({\n                  oldPassword: oldPassword,\n                  newPassword: newPassword\n                });\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x25, _x26, _x27) {\n        return _ref21.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.updateStatusNotifi = function (statusNotification) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref23 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10(dispatch, getState, _ref22) {\n        var authService;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                authService = _ref22.authService;\n                dispatch(actionCreators.updateLoginUserSuccess({\n                  statusNotification: statusNotification\n                }));\n\n              case 2:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function (_x28, _x29, _x30) {\n        return _ref23.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.fetchLoginUserSuccess = function (user) {\n  return globalRedux.fetchSuccess({\n    id: 'loginUser',\n    data: user\n  });\n};\n\nactionCreators.updateLoginUserSuccess = function (data) {\n  return function (dispatch, getState) {\n    var newUserInfo = _objectSpread({}, getState().global.loginUser.data, data);\n\n    dispatch(actionCreators.fetchLoginUserSuccess(newUserInfo));\n  };\n}; //, Test\n\n\nactionCreators.fetchTestSuccess = function (data) {\n  return globalRedux.fetchSuccess({\n    id: 'test',\n    data: data\n  });\n};\n\nactionCreators.updateTest = function (_ref24) {\n  var data = _ref24.data;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref25 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                dispatch(actionCreators.fetchTestSuccess(data));\n                return _context11.abrupt(\"return\", data);\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x31) {\n        return _ref25.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.getTest = function () {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref26 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                dispatch(actionCreators.fetchTestSuccess()); // return 'kkkk'\n\n              case 1:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      return function (_x32) {\n        return _ref26.apply(this, arguments);\n      };\n    }()\n  );\n}; // parties view\n\n\nactionCreators.fetchPartiesSuccess = function (data) {\n  return globalRedux.fetchSuccess({\n    id: 'parties',\n    data: data\n  });\n};\n\nactionCreators.updateParties = function (_ref27) {\n  var data = _ref27.data;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref28 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee13(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                dispatch(actionCreators.fetchPartiesSuccess(data));\n                return _context13.abrupt(\"return\", data);\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function (_x33) {\n        return _ref28.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.getViewParties = function () {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref29 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee14(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                dispatch(actionCreators.fetchPartiesSuccess()); // return 'kkkk'\n\n              case 1:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      return function (_x34) {\n        return _ref29.apply(this, arguments);\n      };\n    }()\n  );\n}; // new transaction\n\n\nactionCreators.fetchTransSuccess = function (data) {\n  return globalRedux.fetchSuccess({\n    id: 'isToggleNew',\n    data: data\n  });\n};\n\nactionCreators.updateNew = function (_ref30) {\n  var data = _ref30.data;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref31 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee15(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                dispatch(actionCreators.fetchTransSuccess(data));\n                return _context15.abrupt(\"return\", data);\n\n              case 2:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      return function (_x35) {\n        return _ref31.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.getNewTransaction = function () {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref32 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee16(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                dispatch(actionCreators.fetchTransSuccess()); // return 'kkkk'\n\n              case 1:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      return function (_x36) {\n        return _ref32.apply(this, arguments);\n      };\n    }()\n  );\n}; // dashboard\n\n\nactionCreators.fetchDashboardSuccess = function (data) {\n  return globalRedux.fetchSuccess({\n    id: 'dashboard',\n    data: data\n  });\n};\n\nactionCreators.updateDashboard = function (_ref33) {\n  var data = _ref33.data;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref34 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee17(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                dispatch(actionCreators.fetchDashboardSuccess(data));\n                return _context17.abrupt(\"return\", data);\n\n              case 2:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      return function (_x37) {\n        return _ref34.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nactionCreators.getViewDashboard = function () {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref35 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee18(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                dispatch(actionCreators.fetchDashboardSuccess()); // return 'kkkk'\n\n              case 1:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      return function (_x38) {\n        return _ref35.apply(this, arguments);\n      };\n    }()\n  );\n}; // end\n\n\nexport default actionCreators;\nexport var selector = {\n  getLoginUser: function getLoginUser(state) {\n    return _.get(state, 'global.loginUser.data');\n  },\n  getTest: function getTest(state) {\n    return _.get(state, 'global.test.data');\n  },\n  getNewTransaction: function getNewTransaction(state) {\n    return _.get(state, 'global.isToggleNew.data');\n  },\n  getViewParties: function getViewParties(state) {\n    return _.get(state, 'global.parties.data');\n  },\n  getViewDashboard: function getViewDashboard(state) {\n    return _.get(state, 'global.dashboard.data');\n  }\n};","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/redux/authRedux.js"],"names":["_","globalRedux","uiStateRedux","isAdmin","actionCreators","getLoginUser","dispatch","getState","authService","user","fetchLoginUserSuccess","loginWithEmail","email","password","fetchAdminSideBarStatus","signupWithEmail","firstName","lastName","role","logout","updateAccountInfo","name","preferredLanguage","updateLoginUserSuccess","updateAvatar","file","uploadAvatar","avatar","createMainImage","transactionService","transaction","imageURL","updateUserrAvatar","updatePassword","oldPassword","newPassword","updateStatusNotifi","statusNotification","fetchSuccess","id","data","newUserInfo","global","loginUser","fetchTestSuccess","updateTest","getTest","fetchPartiesSuccess","updateParties","getViewParties","fetchTransSuccess","updateNew","getNewTransaction","fetchDashboardSuccess","updateDashboard","getViewDashboard","selector","state","get"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport globalRedux from './globalRedux'\nimport uiStateRedux from './uiStateRedux'\nimport { isAdmin } from '../../common/models/User'\n// import { stat } from 'fs/promises'\n\nconst actionCreators = {}\n\nactionCreators.getLoginUser = () => async (\n  dispatch,\n  getState,\n  { authService }\n) => {\n  const user = await authService.getLoginUser()\n  dispatch(actionCreators.fetchLoginUserSuccess(user))\n  return user\n}\n\nactionCreators.loginWithEmail = ({ email, password }) => async (\n  dispatch,\n  getState,\n  { authService }\n) => {\n  const user = await authService.loginWithEmail({ email, password })\n  dispatch(actionCreators.fetchLoginUserSuccess(user))\n\n  if (isAdmin(user)) {\n    dispatch(uiStateRedux.fetchAdminSideBarStatus())\n  }\n\n  return user\n}\n\nactionCreators.signupWithEmail = ({\n  firstName,\n  lastName,\n  email,\n  password,\n  role\n}) => async (dispatch, getState, { authService }) => {\n  const user = await authService.signupWithEmail({\n    firstName,\n    lastName,\n    email,\n    password,\n    role\n  })\n  dispatch(actionCreators.fetchLoginUserSuccess(user))\n\n  if (isAdmin(user)) {\n    dispatch(uiStateRedux.fetchAdminSideBarStatus())\n  }\n\n  return user\n}\n\nactionCreators.logout = () => async (dispatch, getState, { authService }) => {\n  await authService.logout()\n  dispatch(actionCreators.fetchLoginUserSuccess(null))\n}\n\nactionCreators.updateAccountInfo = ({\n  name,\n  email,\n  preferredLanguage\n}) => async (dispatch, getState, { authService }) => {\n  await authService.updateAccountInfo({ name, email, preferredLanguage })\n  dispatch(\n    actionCreators.updateLoginUserSuccess({\n      name,\n      email,\n      preferredLanguage\n    })\n  )\n}\n\nactionCreators.updateAvatar = file => async (\n  dispatch,\n  getState,\n  { authService }\n) => {\n  const user = await authService.uploadAvatar(file)\n  dispatch(\n    actionCreators.updateLoginUserSuccess({\n      avatar: user.avatar\n    })\n  )\n}\nactionCreators.createMainImage = file => async (\n  dispatch,\n  getState,\n  { transactionService }\n) => {\n  const transaction = await transactionService.uploadAvatar(file)\n  dispatch(\n    actionCreators.updateLoginUserSuccess({\n      imageURL: transaction.imageURL\n    })\n  )\n}\n\nactionCreators.updateUserrAvatar = avatar => async (\n  dispatch,\n  getState,\n  { authService }\n) => {\n  dispatch(actionCreators.updateLoginUserSuccess({ avatar: avatar }))\n}\n\nactionCreators.updatePassword = (oldPassword, newPassword) => async (\n  dispatch,\n  getState,\n  { authService }\n) => {\n  await authService.updatePassword({ oldPassword, newPassword })\n}\n\nactionCreators.updateStatusNotifi = statusNotification => async (\n  dispatch,\n  getState,\n  { authService }\n) => {\n  dispatch(\n    actionCreators.updateLoginUserSuccess({\n      statusNotification: statusNotification\n    })\n  )\n}\n\nactionCreators.fetchLoginUserSuccess = user =>\n  globalRedux.fetchSuccess({ id: 'loginUser', data: user })\n\nactionCreators.updateLoginUserSuccess = data => (dispatch, getState) => {\n  const newUserInfo = {\n    ...getState().global.loginUser.data,\n    ...data\n  }\n  dispatch(actionCreators.fetchLoginUserSuccess(newUserInfo))\n}\n\n//, Test\n\nactionCreators.fetchTestSuccess = data =>\n  globalRedux.fetchSuccess({ id: 'test', data })\n\nactionCreators.updateTest = ({ data }) => async dispatch => {\n  dispatch(actionCreators.fetchTestSuccess(data))\n\n  return data\n}\n\nactionCreators.getTest = () => async dispatch => {\n  dispatch(actionCreators.fetchTestSuccess())\n  // return 'kkkk'\n}\n\n// parties view\nactionCreators.fetchPartiesSuccess = data =>\n  globalRedux.fetchSuccess({ id: 'parties', data })\n\nactionCreators.updateParties = ({ data }) => async dispatch => {\n  dispatch(actionCreators.fetchPartiesSuccess(data))\n\n  return data\n}\n\nactionCreators.getViewParties = () => async dispatch => {\n  dispatch(actionCreators.fetchPartiesSuccess())\n  // return 'kkkk'\n}\n// new transaction\n\nactionCreators.fetchTransSuccess = data =>\n  globalRedux.fetchSuccess({ id: 'isToggleNew', data })\n\nactionCreators.updateNew = ({ data }) => async dispatch => {\n  dispatch(actionCreators.fetchTransSuccess(data))\n\n  return data\n}\n\nactionCreators.getNewTransaction = () => async dispatch => {\n  dispatch(actionCreators.fetchTransSuccess())\n  // return 'kkkk'\n}\n// dashboard\nactionCreators.fetchDashboardSuccess = data =>\n  globalRedux.fetchSuccess({ id: 'dashboard', data })\n\nactionCreators.updateDashboard = ({ data }) => async dispatch => {\n  dispatch(actionCreators.fetchDashboardSuccess(data))\n\n  return data\n}\n\nactionCreators.getViewDashboard = () => async dispatch => {\n  dispatch(actionCreators.fetchDashboardSuccess())\n  // return 'kkkk'\n}\n// end\nexport default actionCreators\n\nexport const selector = {\n  getLoginUser: state => _.get(state, 'global.loginUser.data'),\n  getTest: state => _.get(state, 'global.test.data'),\n  getNewTransaction: state => _.get(state, 'global.isToggleNew.data'),\n  getViewParties: state => _.get(state, 'global.parties.data'),\n  getViewDashboard: state => _.get(state, 'global.dashboard.data')\n}\n"]},"metadata":{},"sourceType":"module"}