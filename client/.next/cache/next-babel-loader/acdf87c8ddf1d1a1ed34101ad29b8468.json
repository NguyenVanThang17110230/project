{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport { Modal } from 'reactstrap';\nimport { Formik } from 'formik';\nimport toastr from 'toastr';\nimport { transactionService } from '../../services';\nimport { TransactionRole, TransactionAccessType } from '../../../common/models/Transaction';\nimport PhoneInput from 'react-phone-input-2';\n\nvar AddNewMemberModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNewMemberModal, _Component);\n\n  function AddNewMemberModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddNewMemberModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNewMemberModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(values, action) {\n        var setSubmitting, _this$props, transactionId, toggleMemberModal, fetchData, myAccess;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = action.setSubmitting;\n                _this$props = _this.props, transactionId = _this$props.transactionId, toggleMemberModal = _this$props.toggleMemberModal, fetchData = _this$props.fetchData;\n\n                if (transactionId) {\n                  _context.next = 6;\n                  break;\n                }\n\n                toastr.error('');\n                _context.next = 22;\n                break;\n\n              case 6:\n                _context.prev = 6;\n\n                if (values.role === TransactionRole.VENDORS) {\n                  myAccess = TransactionAccessType.UPLOAD_VENDOR;\n                } else {\n                  myAccess = values.access;\n                }\n\n                setSubmitting(true);\n                _context.next = 11;\n                return transactionService.createTransactionParty({\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  email: values.email,\n                  phoneNumber: values.phoneNumber,\n                  access: myAccess,\n                  role: values.role,\n                  transactionId: transactionId\n                });\n\n              case 11:\n                toggleMemberModal();\n                fetchData();\n                toastr.success('Success');\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](6);\n                toastr.error(_context.t0.message);\n\n              case 19:\n                _context.prev = 19;\n                setSubmitting(false);\n                return _context.finish(19);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 16, 19, 22]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_displayFirstNameAndLastNameByMail\", function (data) {\n      var dataAllUser = _this.props.dataAllUser;\n      var dataSe = dataAllUser.filter(function (x) {\n        return x.email === data;\n      });\n\n      if (dataSe && dataSe[0]) {\n        if (dataSe[0].firstName && dataSe[0].lastName) {\n          return [dataSe[0].firstName, dataSe[0].lastName];\n        } else {\n          if (dataSe[0].firstName) {\n            return dataSe[0].firstName;\n          }\n\n          if (dataSe[0].lastName) {\n            return dataSe[0].lastName;\n          } else {\n            if (dataSe[0].name) {\n              var name = dataSe[0].name.split(' ');\n              return [name[0], name[1]];\n            }\n          }\n        }\n      } else {\n        return null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_displayPhoneNumberByMail\", function (data) {\n      var dataAllUser = _this.props.dataAllUser;\n      var dataSe = dataAllUser.filter(function (x) {\n        return x.email === data;\n      });\n\n      if (dataSe && dataSe[0]) {\n        if (dataSe[0].phone) {\n          return dataSe[0].phone;\n        }\n      }\n    });\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AddNewMemberModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          isShowMemberModal = _this$props2.isShowMemberModal,\n          toggleMemberModal = _this$props2.toggleMemberModal,\n          memberRole = _this$props2.memberRole;\n      return React.createElement(Modal, {\n        isOpen: isShowMemberModal,\n        toggle: toggleMemberModal\n      }, React.createElement(\"div\", {\n        className: \"page-button-new\"\n      }, React.createElement(\"div\", {\n        className: \"form-add-member\" // style={{ display: 'none' }}\n\n      }, React.createElement(\"div\", {\n        className: \"modal-header modal-header--change\",\n        id: \"bg-gr\"\n      }, React.createElement(\"div\", {\n        className: \"text-center w-100\"\n      }, React.createElement(\"h5\", {\n        className: \"modal-title new-add\",\n        id: \"exampleModalLabel\"\n      }, \"Add New Member\")), React.createElement(\"div\", null, React.createElement(\"button\", {\n        id: \"close-modal\",\n        type: \"button\",\n        className: \"close bg-transparent \",\n        \"data-dismiss\": \"modal\",\n        onClick: function onClick() {\n          return toggleMemberModal();\n        }\n      }, \"\\xD7\"))), React.createElement(Formik, {\n        initialValues: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          role: memberRole || TransactionRole.SELLER_AGENT,\n          phoneNumber: '',\n          access: TransactionAccessType.FULL\n        },\n        onSubmit: function onSubmit(values, action) {\n          return _this2.handleSubmit(values, action);\n        },\n        validate: function validate(values) {\n          var error = {};\n\n          if (values.firstName === '') {\n            error.firstName = 'First name is required';\n          } else if (values.lastName === '') {\n            error.lastName = 'Last name is required';\n          } else if (values.email === '') {\n            error.email = 'Email is required';\n          }\n\n          return error;\n        }\n      }, function (_ref2) {\n        var values = _ref2.values,\n            errors = _ref2.errors,\n            touched = _ref2.touched,\n            isValid = _ref2.isValid,\n            isSubmitting = _ref2.isSubmitting,\n            handleSubmit = _ref2.handleSubmit,\n            handleChange = _ref2.handleChange,\n            setFieldValue = _ref2.setFieldValue;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\"\n        }, React.createElement(\"div\", {\n          className: \"modal-body px-5 mx-2\",\n          id: \"main-body-add-member\"\n        }, React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"col-12 col-md-6 col-lg-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Email \"), React.createElement(\"input\", {\n          type: \"mail\",\n          className: \"form-control\",\n          placeholder: \"Type here\",\n          name: \"email\",\n          onChange: function onChange(event) {\n            setFieldValue('email', event.currentTarget.value);\n\n            if (event.currentTarget.value !== '') {\n              var dataView = _this2._displayFirstNameAndLastNameByMail(event.currentTarget.value);\n\n              var phone = _this2._displayPhoneNumberByMail(event.currentTarget.value);\n\n              if (dataView) {\n                if (dataView[0]) {\n                  setFieldValue('firstName', dataView[0]);\n                }\n\n                if (dataView[1]) {\n                  setFieldValue('lastName', dataView[1]);\n                }\n              } else {\n                setFieldValue('firstName', '');\n                setFieldValue('lastName', '');\n              }\n\n              if (phone) {\n                setFieldValue('phoneNumber', phone);\n              } else {\n                setFieldValue('phoneNumber', '');\n              }\n            }\n          },\n          value: values.email\n        }), errors.email && React.createElement(\"small\", {\n          className: \"text-danger\"\n        }, errors.email))), React.createElement(\"div\", {\n          className: \"col-12 col-md-6 col-lg-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Phone Number\", ' '), React.createElement(PhoneInput, {\n          country: 'us',\n          enableSearch: true,\n          onChange: function onChange(value) {\n            handleChange({\n              target: {\n                name: 'phoneNumber',\n                value: value\n              }\n            });\n          },\n          value: values.phoneNumber,\n          placeholder: \"Phone Number\",\n          className: \"form-control\"\n        })))), React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"col-12 col-md-6 col-lg-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group \"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"First Name\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Type here\",\n          onChange: handleChange,\n          value: values.firstName,\n          name: \"firstName\"\n        }), errors.firstName && React.createElement(\"small\", {\n          className: \"text-danger\"\n        }, errors.firstName))), React.createElement(\"div\", {\n          className: \"col-12 col-md-6 col-lg-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group \"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Last Name\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Type here\",\n          name: \"lastName\",\n          onChange: handleChange,\n          value: values.lastName\n        }), errors.lastName && React.createElement(\"small\", {\n          className: \"text-danger\"\n        }, errors.lastName)))), React.createElement(\"div\", {\n          className: \"row\"\n        }, React.createElement(\"div\", {\n          className: \"col-12 col-md-6 col-lg-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Role\"), React.createElement(\"select\", {\n          id: \"role\",\n          className: \"form-control\",\n          name: \"role\",\n          onChange: handleChange,\n          value: values.role\n        }, React.createElement(\"option\", {\n          value: TransactionRole.SELLER_AGENT\n        }, \"Seller\\u2019s Agent\"), React.createElement(\"option\", {\n          value: TransactionRole.BUYING_AGENT\n        }, \"Buyer\\u2019s Agent\"), React.createElement(\"option\", {\n          value: TransactionRole.BUYER\n        }, \"Buyer\"), React.createElement(\"option\", {\n          value: TransactionRole.SELLER\n        }, \"Seller\"), React.createElement(\"option\", {\n          value: TransactionRole.TRANSACTION_COORDINATOR\n        }, \"Transaction Coordinator\"), React.createElement(\"option\", {\n          value: TransactionRole.ESCROW\n        }, \"Escrow\"), React.createElement(\"option\", {\n          value: TransactionRole.TITLE\n        }, \"Title\"), React.createElement(\"option\", {\n          value: TransactionRole.LENDER\n        }, \"Lender\"), React.createElement(\"option\", {\n          value: TransactionRole.HOME_INSPECTOR\n        }, \"Home Inspector\"), React.createElement(\"option\", {\n          value: TransactionRole.TERMITE\n        }, \"Termite\"), React.createElement(\"option\", {\n          value: TransactionRole.VENDORS\n        }, \"Vendors\")))), React.createElement(\"div\", {\n          className: \"col-12 col-md-6 col-lg-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Access\"), values.role !== TransactionRole.VENDORS ? React.createElement(\"select\", {\n          id: \"access\",\n          className: \"form-control\",\n          name: \"access\",\n          onChange: handleChange,\n          value: values.access\n        }, React.createElement(\"option\", {\n          value: TransactionAccessType.FULL\n        }, \"Full Access\"), React.createElement(\"option\", {\n          value: TransactionAccessType.UPLOAD_ONLY\n        }, \"Upload Only\")) : React.createElement(\"select\", {\n          id: \"access\",\n          className: \"form-control\",\n          name: \"access\",\n          onChange: handleChange,\n          value: TransactionAccessType.UPLOAD_VENDOR\n        }, React.createElement(\"option\", {\n          value: TransactionAccessType.UPLOAD_VENDOR\n        }, \"Vendor upload\"))))))), React.createElement(\"div\", {\n          className: \"mt-5 d-flex justify-content-center\"\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-add-new mb-5 text-white th-11 d-flex align-items-center\",\n          disabled: isSubmitting || !isValid\n        }, isSubmitting && React.createElement(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-2\"\n        }), \"Add Member\")));\n      }))));\n    }\n  }]);\n\n  return AddNewMemberModal;\n}(Component);\n\nexport default AddNewMemberModal;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/component/Transaction/AddNewMemberModal.js"],"names":["React","Component","Modal","Formik","toastr","transactionService","TransactionRole","TransactionAccessType","PhoneInput","AddNewMemberModal","props","values","action","setSubmitting","transactionId","toggleMemberModal","fetchData","error","role","VENDORS","myAccess","UPLOAD_VENDOR","access","createTransactionParty","firstName","lastName","email","phoneNumber","success","message","data","dataAllUser","dataSe","filter","x","name","split","phone","state","isShowMemberModal","memberRole","SELLER_AGENT","FULL","handleSubmit","errors","touched","isValid","isSubmitting","handleChange","setFieldValue","event","currentTarget","value","dataView","_displayFirstNameAndLastNameByMail","_displayPhoneNumberByMail","target","BUYING_AGENT","BUYER","SELLER","TRANSACTION_COORDINATOR","ESCROW","TITLE","LENDER","HOME_INSPECTOR","TERMITE","UPLOAD_ONLY"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal } from 'reactstrap'\nimport { Formik } from 'formik'\nimport toastr from 'toastr'\nimport { transactionService } from '../../services'\nimport {\n  TransactionRole,\n  TransactionAccessType\n} from '../../../common/models/Transaction'\nimport PhoneInput from 'react-phone-input-2'\nclass AddNewMemberModal extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n  handleSubmit = async (values, action) => {\n    const { setSubmitting } = action\n    const { transactionId, toggleMemberModal, fetchData } = this.props\n    if (!transactionId) {\n      toastr.error('')\n    } else {\n      try {\n        let myAccess\n        if (values.role === TransactionRole.VENDORS) {\n          myAccess = TransactionAccessType.UPLOAD_VENDOR\n        } else {\n          myAccess = values.access\n        }\n        setSubmitting(true)\n        await transactionService.createTransactionParty({\n          firstName: values.firstName,\n          lastName: values.lastName,\n          email: values.email,\n          phoneNumber: values.phoneNumber,\n          access: myAccess,\n          role: values.role,\n          transactionId\n        })\n        toggleMemberModal()\n        fetchData()\n        toastr.success('Success')\n      } catch (e) {\n        toastr.error(e.message)\n      } finally {\n        setSubmitting(false)\n      }\n    }\n  }\n\n  _displayFirstNameAndLastNameByMail = data => {\n    const { dataAllUser } = this.props\n    const dataSe = dataAllUser.filter(x => x.email === data)\n    if (dataSe && dataSe[0]) {\n      if (dataSe[0].firstName && dataSe[0].lastName) {\n        return [dataSe[0].firstName, dataSe[0].lastName]\n      } else {\n        if (dataSe[0].firstName) {\n          return dataSe[0].firstName\n        }\n        if (dataSe[0].lastName) {\n          return dataSe[0].lastName\n        } else {\n          if (dataSe[0].name) {\n            const name = dataSe[0].name.split(' ')\n            return [name[0], name[1]]\n          }\n        }\n      }\n    } else {\n      return null\n    }\n  }\n  _displayPhoneNumberByMail = data => {\n    const { dataAllUser } = this.props\n    const dataSe = dataAllUser.filter(x => x.email === data)\n    if (dataSe && dataSe[0]) {\n      if (dataSe[0].phone) {\n        return dataSe[0].phone\n      }\n    }\n  }\n\n  render () {\n    const { isShowMemberModal, toggleMemberModal, memberRole } = this.props\n    return (\n      <Modal isOpen={isShowMemberModal} toggle={toggleMemberModal}>\n        <div className='page-button-new'>\n          <div\n            className='form-add-member'\n            // style={{ display: 'none' }}\n          >\n            <div className='modal-header modal-header--change' id='bg-gr'>\n              <div className='text-center w-100'>\n                <h5 className='modal-title new-add' id='exampleModalLabel'>\n                  Add New Member\n                </h5>\n              </div>\n              <div>\n                <button\n                  id='close-modal'\n                  type='button'\n                  className='close bg-transparent '\n                  data-dismiss='modal'\n                  onClick={() => toggleMemberModal()}\n                >\n                  &times;\n                </button>\n              </div>\n            </div>\n            <Formik\n              initialValues={{\n                firstName: '',\n                lastName: '',\n                email: '',\n                role: memberRole || TransactionRole.SELLER_AGENT,\n                phoneNumber: '',\n                access: TransactionAccessType.FULL\n              }}\n              onSubmit={(values, action) => this.handleSubmit(values, action)}\n              validate={values => {\n                let error = {}\n                if (values.firstName === '') {\n                  error.firstName = 'First name is required'\n                } else if (values.lastName === '') {\n                  error.lastName = 'Last name is required'\n                } else if (values.email === '') {\n                  error.email = 'Email is required'\n                }\n                return error\n              }}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                isValid,\n                isSubmitting,\n                handleSubmit,\n                handleChange,\n                setFieldValue\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div className='d-flex justify-content-center'>\n                    <div\n                      className='modal-body px-5 mx-2'\n                      id='main-body-add-member'\n                    >\n                      <div className='row'>\n                        <div className='col-12 col-md-6 col-lg-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Email </label>\n                            <input\n                              type='mail'\n                              className='form-control'\n                              placeholder='Type here'\n                              name='email'\n                              onChange={event => {\n                                setFieldValue(\n                                  'email',\n                                  event.currentTarget.value\n                                )\n                                if (event.currentTarget.value !== '') {\n                                  const dataView = this._displayFirstNameAndLastNameByMail(\n                                    event.currentTarget.value\n                                  )\n                                  const phone = this._displayPhoneNumberByMail(\n                                    event.currentTarget.value\n                                  )\n                                  if (dataView) {\n                                    if (dataView[0]) {\n                                      setFieldValue('firstName', dataView[0])\n                                    }\n                                    if (dataView[1]) {\n                                      setFieldValue('lastName', dataView[1])\n                                    }\n                                  } else {\n                                    setFieldValue('firstName', '')\n                                    setFieldValue('lastName', '')\n                                  }\n\n                                  if (phone) {\n                                    setFieldValue('phoneNumber', phone)\n                                  } else {\n                                    setFieldValue('phoneNumber', '')\n                                  }\n                                }\n                              }}\n                              value={values.email}\n                            />\n                            {errors.email && (\n                              <small className='text-danger'>\n                                {errors.email}\n                              </small>\n                            )}\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-6 col-lg-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Phone Number{' '}\n                            </label>\n                            <PhoneInput\n                              country={'us'}\n                              enableSearch\n                              onChange={value => {\n                                handleChange({\n                                  target: { name: 'phoneNumber', value }\n                                })\n                              }}\n                              value={values.phoneNumber}\n                              placeholder='Phone Number'\n                              className='form-control'\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row'>\n                        <div className='col-12 col-md-6 col-lg-6'>\n                          <div className='form-group '>\n                            <label className='tittle-mini-ver'>\n                              First Name\n                            </label>\n                            <input\n                              type='text'\n                              className='form-control'\n                              placeholder='Type here'\n                              onChange={handleChange}\n                              value={values.firstName}\n                              name='firstName'\n                            />\n                            {errors.firstName && (\n                              <small className='text-danger'>\n                                {errors.firstName}\n                              </small>\n                            )}\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-6 col-lg-6'>\n                          <div className='form-group '>\n                            <label className='tittle-mini-ver'>Last Name</label>\n                            <input\n                              type='text'\n                              className='form-control'\n                              placeholder='Type here'\n                              name='lastName'\n                              onChange={handleChange}\n                              value={values.lastName}\n                            />\n                            {errors.lastName && (\n                              <small className='text-danger'>\n                                {errors.lastName}\n                              </small>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      <div className='row'>\n                        <div className='col-12 col-md-6 col-lg-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Role</label>\n                            <select\n                              id='role'\n                              className='form-control'\n                              name='role'\n                              onChange={handleChange}\n                              value={values.role}\n                            >\n                              <option value={TransactionRole.SELLER_AGENT}>\n                                Seller’s Agent\n                              </option>\n                              <option value={TransactionRole.BUYING_AGENT}>\n                                Buyer’s Agent\n                              </option>\n                              <option value={TransactionRole.BUYER}>\n                                Buyer\n                              </option>\n                              <option value={TransactionRole.SELLER}>\n                                Seller\n                              </option>\n                              <option\n                                value={TransactionRole.TRANSACTION_COORDINATOR}\n                              >\n                                Transaction Coordinator\n                              </option>\n                              <option value={TransactionRole.ESCROW}>\n                                Escrow\n                              </option>\n                              <option value={TransactionRole.TITLE}>\n                                Title\n                              </option>\n                              <option value={TransactionRole.LENDER}>\n                                Lender\n                              </option>\n                              <option value={TransactionRole.HOME_INSPECTOR}>\n                                Home Inspector\n                              </option>\n                              <option value={TransactionRole.TERMITE}>\n                                Termite\n                              </option>\n                              <option value={TransactionRole.VENDORS}>\n                                Vendors\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className='col-12 col-md-6 col-lg-6'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>Access</label>\n                            {values.role !== TransactionRole.VENDORS ? (\n                              <select\n                                id='access'\n                                className='form-control'\n                                name='access'\n                                onChange={handleChange}\n                                value={values.access}\n                              >\n                                <option value={TransactionAccessType.FULL}>\n                                  Full Access\n                                </option>\n                                <option\n                                  value={TransactionAccessType.UPLOAD_ONLY}\n                                >\n                                  Upload Only\n                                </option>\n                              </select>\n                            ) : (\n                              <select\n                                id='access'\n                                className='form-control'\n                                name='access'\n                                onChange={handleChange}\n                                value={TransactionAccessType.UPLOAD_VENDOR}\n                              >\n                                <option\n                                  value={TransactionAccessType.UPLOAD_VENDOR}\n                                >\n                                  Vendor upload\n                                </option>\n                              </select>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='mt-5 d-flex justify-content-center'>\n                    <button\n                      type='submit'\n                      className='btn btn-add-new mb-5 text-white th-11 d-flex align-items-center'\n                      disabled={isSubmitting || !isValid}\n                    >\n                      {isSubmitting && (\n                        <span className='spinner-border spinner-border-sm mr-2' />\n                      )}\n                      Add Member\n                    </button>\n                  </div>\n                </form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nexport default AddNewMemberModal\n"]},"metadata":{},"sourceType":"module"}