{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React from 'react';\nimport { Modal } from 'reactstrap';\nimport { Formik } from 'formik';\nimport toastr from 'toastr'; // import emailMask from 'text-mask-addons/dist/emailMask'\n\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { TransactionAccessType, TransactionRole } from '../../../common/models/Transaction';\nimport { getRoleLabel } from '../../view-models/User';\nimport Role from '../../../common/models/Role';\nimport { userService } from '../../services';\n\nvar InvitePartyModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InvitePartyModal, _React$Component);\n\n  function InvitePartyModal(props) {\n    var _this;\n\n    _classCallCheck(this, InvitePartyModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InvitePartyModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(values, action) {\n        var setSubmitting, firstName, lastName, email, phoneNumber, access, msg;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = action.setSubmitting;\n                _context.prev = 1;\n                _context.next = 4;\n                return _this._checkEmail(values.email, _this.props.data);\n\n              case 4:\n                if (!_this.state.validateEmail) {\n                  _context.next = 13;\n                  break;\n                }\n\n                setSubmitting(true);\n                firstName = values.firstName, lastName = values.lastName, email = values.email, phoneNumber = values.phoneNumber, access = values.access;\n                _context.next = 9;\n                return _this.props.onSubmit({\n                  firstName: firstName,\n                  lastName: lastName,\n                  email: email,\n                  phoneNumber: phoneNumber,\n                  access: access\n                });\n\n              case 9:\n                _this.props.onClose();\n\n                toastr.success('Success');\n                _context.next = 15;\n                break;\n\n              case 13:\n                toastr.warning('Must have at least one link agent account');\n                setSubmitting(false);\n\n              case 15:\n                _context.next = 22;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](1);\n\n                switch (_context.t0.code) {\n                  default:\n                    {\n                      msg = _context.t0.message;\n                    }\n                }\n\n                toastr.error(msg);\n                setSubmitting(false);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 17]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_checkEmail\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(email, data) {\n        var checknewEmail;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  validateEmail: true\n                }); // reset validateEmail\n\n\n                _context2.next = 3;\n                return _this._checkNewEmail(email, data);\n\n              case 3:\n                checknewEmail = _context2.sent;\n\n                if (!checknewEmail) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                if (!(data.addPartyModalData === TransactionRole.BUYER_AGENT || data.addPartyModalData === TransactionRole.SELLER_AGENT)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                ;\n                _context2.next = 12;\n                return _this._checkTransactionParty(email, data);\n\n              case 12:\n                _context2.t0 = _context2.sent;\n\n                if (!_context2.t0) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _this._checkTransactionInvite(data);\n\n              case 15:\n                return _context2.abrupt(\"return\");\n\n              case 16:\n                _this.setState({\n                  validateEmail: true\n                });\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_checkTransactionInvite\", function (data) {\n      data.transaction.invitations.map(function (data) {\n        if (data.role === TransactionRole.BUYER_AGENT || data.role === TransactionRole.SELLER_AGENT) {\n          _this.setState({\n            validateEmail: false\n          });\n        } else {\n          _this.setState({\n            validateEmail: true\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_checkTransactionParty\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(email, data) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data.transaction.parties.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref4 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(data) {\n                    var user;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            if (!(data.role === TransactionRole.BUYER_AGENT || data.role === TransactionRole.SELLER_AGENT)) {\n                              _context3.next = 18;\n                              break;\n                            }\n\n                            _context3.prev = 1;\n                            _context3.next = 4;\n                            return userService.getUserRole({\n                              id: data.userId\n                            });\n\n                          case 4:\n                            user = _context3.sent;\n\n                            if (!(user[0].roles[0].name === Role.AGENT)) {\n                              _context3.next = 10;\n                              break;\n                            }\n\n                            _this.setState({\n                              validateEmail: true\n                            });\n\n                            return _context3.abrupt(\"return\", false);\n\n                          case 10:\n                            _this.setState({\n                              validateEmail: false\n                            });\n\n                            return _context3.abrupt(\"return\", false);\n\n                          case 12:\n                            _context3.next = 18;\n                            break;\n\n                          case 14:\n                            _context3.prev = 14;\n                            _context3.t0 = _context3[\"catch\"](1);\n\n                            _this.setState({\n                              validateEmail: false\n                            });\n\n                            return _context3.abrupt(\"return\", false);\n\n                          case 18:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3, null, [[1, 14]]);\n                  }));\n\n                  return function (_x7) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n                return _context4.abrupt(\"return\", true);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_checkNewEmail\",\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(email, data) {\n        var findEmail, roleEmail;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return userService.getUserRole({\n                  email: encodeURIComponent(email)\n                });\n\n              case 3:\n                findEmail = _context5.sent;\n                roleEmail = findEmail[0].roles[0].name;\n\n                if (!(roleEmail === Role.AGENT || data.addPartyModalData === TransactionRole.TRANSACTION_COORDINATOR && roleEmail === Role.COORDINATOR)) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                _this.setState({\n                  validateEmail: true\n                });\n\n                return _context5.abrupt(\"return\", true);\n\n              case 10:\n                if (!(roleEmail === Role.ADMIN || roleEmail === Role.COORDINATOR)) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                _this.setState({\n                  validateEmail: false\n                });\n\n                return _context5.abrupt(\"return\", true);\n\n              case 13:\n                return _context5.abrupt(\"return\", false);\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](0);\n                return _context5.abrupt(\"return\", false);\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 16]]);\n      }));\n\n      return function (_x8, _x9) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      validateEmail: true\n    };\n    return _this;\n  }\n\n  _createClass(InvitePartyModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          onClose = _this$props.onClose;\n      var role = getRoleLabel(data.addPartyModalData);\n      return React.createElement(Modal, {\n        isOpen: role,\n        toggle: onClose,\n        id: \"invite-party-modal\"\n      }, React.createElement(\"div\", {\n        className: \"modal-header modal-header--change\"\n      }, React.createElement(\"div\", {\n        className: \"text-center w-100\"\n      }, React.createElement(\"h5\", {\n        className: \"modal-title text-uppercase font-weight-bold\",\n        id: \"exampleModalLabel\"\n      }, \"Add \", role), React.createElement(\"small\", null, \"All parties added will receive an email with their temporary password. \", React.createElement(\"br\", null), \"You will be notified once the party has opened the site and logged in.\")), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close bg-transparent\",\n        \"data-dismiss\": \"modal\",\n        onClick: onClose\n      }, \"\\xD7\")), React.createElement(Formik, {\n        initialValues: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          phoneNumber: '',\n          access: data.addPartyModalData === 'transaction-coordinator' ? TransactionAccessType.FULL : ''\n        },\n        onSubmit: this._onSubmit,\n        validate: function validate(values) {\n          var error = {};\n          var regEmail = new RegExp('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@' + '[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$');\n\n          if (values.firstName === '' || values.lastName === '' || values.email === '' || values.phoneNumber === '') {\n            error.buyerDetails = \"\".concat(role, \" details are required\");\n          } else if (!regEmail.test(values.email)) {\n            error.buyerDetails = 'Please enter the correct email format';\n          } else if (values.phoneNumber.length < 9) {\n            error.buyerDetails = 'Please enter the full field';\n          } else if (!values.access) {\n            error.access = 'Access is required';\n          }\n\n          return error;\n        }\n      }, function (_ref6) {\n        var values = _ref6.values,\n            isValid = _ref6.isValid,\n            errors = _ref6.errors,\n            isSubmitting = _ref6.isSubmitting,\n            handleSubmit = _ref6.handleSubmit,\n            handleChange = _ref6.handleChange;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, React.createElement(\"div\", {\n          className: \"modal-body px-5 mx-2\"\n        }, React.createElement(\"div\", null, React.createElement(\"h4\", {\n          className: \"text-center\"\n        }, role, \" Details \"), React.createElement(\"div\", {\n          className: \"row pt-3\"\n        }, React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"First Name\",\n          name: \"firstName\",\n          onChange: handleChange,\n          value: values.firstName\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Last Name\",\n          name: \"lastName\",\n          onChange: handleChange,\n          value: values.lastName\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          // mask={emailMask}\n          className: \"form-control\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          onChange: handleChange,\n          value: values.email\n        }))), React.createElement(\"div\", {\n          className: \"col-6\"\n        }, React.createElement(PhoneInput, {\n          country: 'us',\n          enableSearch: true,\n          onChange: function onChange(value) {\n            handleChange({\n              target: {\n                name: 'phoneNumber',\n                value: value\n              }\n            });\n          },\n          value: values.phoneNumber,\n          placeholder: \"Phone Number\",\n          className: \"form-control\"\n        }))), errors.buyerDetails && React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, errors.buyerDetails)), React.createElement(\"h4\", {\n          className: \"text-center mt-3\"\n        }, \"Access\"), React.createElement(\"div\", {\n          className: \"row text-center mt-4\",\n          name: \"access\",\n          onChange: handleChange,\n          value: values.access\n        }, data.addPartyModalData === 'transaction-coordinator' ? React.createElement(\"div\", {\n          className: \"col-12 transaction-type\"\n        }, React.createElement(\"label\", null, React.createElement(\"i\", {\n          className: \"fas fa-users fa-4x \",\n          style: {\n            color: '#73C7FB'\n          }\n        }), React.createElement(\"h5\", {\n          className: \"py-3 font-weight-normal\"\n        }, \"Full Access\"), React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"access\",\n          value: TransactionAccessType.FULL,\n          checked: true\n        }), React.createElement(\"div\", null, React.createElement(\"small\", null, \"With Full Access the party will be able to view all documents, upload documents, assign signors on documents they uploaded, and message all other parties involved.\")))) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"col-6 transaction-type\"\n        }, React.createElement(\"label\", null, React.createElement(\"i\", {\n          className: \"fas fa-users fa-4x \",\n          style: {\n            color: '#73C7FB'\n          }\n        }), React.createElement(\"h5\", {\n          className: \"py-3 font-weight-normal\"\n        }, \"Full Access\"), React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"access\",\n          value: TransactionAccessType.FULL\n        }), React.createElement(\"div\", null, React.createElement(\"small\", null, \"With Full Access the party will be able to view all documents, upload documents, assign signors on documents they uploaded, and message all other parties involved.\")))), React.createElement(\"div\", {\n          className: \"col-6 transaction-type\"\n        }, React.createElement(\"label\", null, React.createElement(\"img\", {\n          src: \"/static/images/transactions/new-lease.png\"\n        }), React.createElement(\"h5\", {\n          className: \"py-3  font-weight-normal\"\n        }, \"Upload Only\"), React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"access\",\n          value: TransactionAccessType.UPLOAD_ONLY\n        }), React.createElement(\"div\", null, React.createElement(\"small\", null, \"With Upload Only the party will only be able to upload documents via the email link they are sent. They will not be able to view documents, assign signors, or message and other parties.\")))))), errors.access && React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, errors.access), React.createElement(\"div\", {\n          className: \"text-center my-5\"\n        }, React.createElement(\"button\", {\n          disabled: !isValid || isSubmitting,\n          type: \"submit\",\n          className: \"btn bg-info text-white py-2 px-5\"\n        }, isSubmitting && React.createElement(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-2\"\n        }), \"Send Invite\"))));\n      }));\n    }\n  }]);\n\n  return InvitePartyModal;\n}(React.Component);\n\nexport { InvitePartyModal as default };","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/TransactionPartiesPage/InvitePartyModal.js"],"names":["React","Modal","Formik","toastr","PhoneInput","TransactionAccessType","TransactionRole","getRoleLabel","Role","userService","InvitePartyModal","props","values","action","setSubmitting","_checkEmail","email","data","state","validateEmail","firstName","lastName","phoneNumber","access","onSubmit","onClose","success","warning","code","msg","message","error","setState","_checkNewEmail","checknewEmail","addPartyModalData","BUYER_AGENT","SELLER_AGENT","_checkTransactionParty","_checkTransactionInvite","transaction","invitations","map","role","parties","getUserRole","id","userId","user","roles","name","AGENT","encodeURIComponent","findEmail","roleEmail","TRANSACTION_COORDINATOR","COORDINATOR","ADMIN","FULL","_onSubmit","regEmail","RegExp","buyerDetails","test","length","isValid","errors","isSubmitting","handleSubmit","handleChange","value","target","color","UPLOAD_ONLY","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal } from 'reactstrap'\nimport { Formik } from 'formik'\nimport toastr from 'toastr'\n// import emailMask from 'text-mask-addons/dist/emailMask'\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport {\n  TransactionAccessType,\n  TransactionRole\n} from '../../../common/models/Transaction'\nimport { getRoleLabel } from '../../view-models/User'\nimport Role from '../../../common/models/Role'\nimport { userService } from '../../services'\n\nexport default class InvitePartyModal extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      validateEmail: true\n    }\n  }\n\n  _onSubmit = async (values, action) => {\n    const { setSubmitting } = action\n    try {\n      await this._checkEmail(values.email, this.props.data)\n      if (this.state.validateEmail) {\n        setSubmitting(true)\n        const { firstName, lastName, email, phoneNumber, access } = values\n        await this.props.onSubmit({\n          firstName,\n          lastName,\n          email,\n          phoneNumber,\n          access\n        })\n        this.props.onClose()\n        toastr.success('Success')\n      } else {\n        toastr.warning('Must have at least one link agent account')\n        setSubmitting(false)\n      }\n    } catch (e) {\n      let msg\n      switch (e.code) {\n        default: {\n          msg = e.message\n        }\n      }\n      toastr.error(msg)\n      setSubmitting(false)\n    }\n  }\n\n  render () {\n    const { data, onClose } = this.props\n    const role = getRoleLabel(data.addPartyModalData)\n    return (\n      <Modal isOpen={role} toggle={onClose} id='invite-party-modal'>\n        <div className='modal-header modal-header--change'>\n          <div className='text-center w-100'>\n            <h5\n              className='modal-title text-uppercase font-weight-bold'\n              id='exampleModalLabel'\n            >\n              Add {role}\n            </h5>\n            <small>\n              All parties added will receive an email with their temporary\n              password. <br />\n              You will be notified once the party has opened the site and logged\n              in.\n            </small>\n          </div>\n          <button\n            type='button'\n            className='close bg-transparent'\n            data-dismiss='modal'\n            onClick={onClose}\n          >\n            &times;\n          </button>\n        </div>\n        <Formik\n          initialValues={{\n            firstName: '',\n            lastName: '',\n            email: '',\n            phoneNumber: '',\n            access:\n              data.addPartyModalData === 'transaction-coordinator'\n                ? TransactionAccessType.FULL\n                : ''\n          }}\n          onSubmit={this._onSubmit}\n          validate={values => {\n            let error = {}\n            const regEmail = new RegExp(\n              '^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@' +\n                '[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'\n            )\n            if (\n              values.firstName === '' ||\n              values.lastName === '' ||\n              values.email === '' ||\n              values.phoneNumber === ''\n            ) {\n              error.buyerDetails = `${role} details are required`\n            } else if (!regEmail.test(values.email)) {\n              error.buyerDetails = 'Please enter the correct email format'\n            } else if (values.phoneNumber.length < 9) {\n              error.buyerDetails = 'Please enter the full field'\n            } else if (!values.access) {\n              error.access = 'Access is required'\n            }\n            return error\n          }}\n        >\n          {({\n            values,\n            isValid,\n            errors,\n            isSubmitting,\n            handleSubmit,\n            handleChange\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <div className='modal-body px-5 mx-2'>\n                <div>\n                  <h4 className='text-center'>{role} Details </h4>\n                  <div className='row pt-3'>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <input\n                          className='form-control'\n                          placeholder='First Name'\n                          name='firstName'\n                          onChange={handleChange}\n                          value={values.firstName}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <input\n                          className='form-control'\n                          placeholder='Last Name'\n                          name='lastName'\n                          onChange={handleChange}\n                          value={values.lastName}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <div className='form-group'>\n                        <input\n                          // mask={emailMask}\n                          className='form-control'\n                          placeholder='Email Address'\n                          name='email'\n                          onChange={handleChange}\n                          value={values.email}\n                        />\n                      </div>\n                    </div>\n                    <div className='col-6'>\n                      <PhoneInput\n                        country={'us'}\n                        enableSearch\n                        onChange={value => {\n                          handleChange({\n                            target: { name: 'phoneNumber', value }\n                          })\n                        }}\n                        value={values.phoneNumber}\n                        placeholder='Phone Number'\n                        className='form-control'\n                      />\n                    </div>\n                  </div>\n                  {errors.buyerDetails && (\n                    <div className='text-danger text-center'>\n                      {errors.buyerDetails}\n                    </div>\n                  )}\n                </div>\n\n                <h4 className='text-center mt-3'>Access</h4>\n                <div\n                  className='row text-center mt-4'\n                  name='access'\n                  onChange={handleChange}\n                  value={values.access}\n                >\n                  {data.addPartyModalData === 'transaction-coordinator' ? (\n                    <div className='col-12 transaction-type'>\n                      <label>\n                        <i\n                          className='fas fa-users fa-4x '\n                          style={{ color: '#73C7FB' }}\n                        />\n                        <h5 className='py-3 font-weight-normal'>Full Access</h5>\n                        <input\n                          type='radio'\n                          name='access'\n                          value={TransactionAccessType.FULL}\n                          checked\n                        />\n                        <div>\n                          <small>\n                            With Full Access the party will be able to view all\n                            documents, upload documents, assign signors on\n                            documents they uploaded, and message all other\n                            parties involved.\n                          </small>\n                        </div>\n                      </label>\n                    </div>\n                  ) : (\n                    <React.Fragment>\n                      <div className='col-6 transaction-type'>\n                        <label>\n                          <i\n                            className='fas fa-users fa-4x '\n                            style={{ color: '#73C7FB' }}\n                          />\n                          <h5 className='py-3 font-weight-normal'>\n                            Full Access\n                          </h5>\n                          <input\n                            type='radio'\n                            name='access'\n                            value={TransactionAccessType.FULL}\n                          />\n                          <div>\n                            <small>\n                              With Full Access the party will be able to view\n                              all documents, upload documents, assign signors on\n                              documents they uploaded, and message all other\n                              parties involved.\n                            </small>\n                          </div>\n                        </label>\n                      </div>\n                      <div className='col-6 transaction-type'>\n                        <label>\n                          <img src='/static/images/transactions/new-lease.png' />\n                          <h5 className='py-3  font-weight-normal'>\n                            Upload Only\n                          </h5>\n                          <input\n                            type='radio'\n                            name='access'\n                            value={TransactionAccessType.UPLOAD_ONLY}\n                          />\n                          <div>\n                            <small>\n                              With Upload Only the party will only be able to\n                              upload documents via the email link they are sent.\n                              They will not be able to view documents, assign\n                              signors, or message and other parties.\n                            </small>\n                          </div>\n                        </label>\n                      </div>\n                    </React.Fragment>\n                  )}\n                </div>\n                {errors.access && (\n                  <div className='text-danger text-center'>{errors.access}</div>\n                )}\n                <div className='text-center my-5'>\n                  <button\n                    disabled={!isValid || isSubmitting}\n                    type='submit'\n                    className='btn bg-info text-white py-2 px-5'\n                  >\n                    {isSubmitting && (\n                      <span className='spinner-border spinner-border-sm mr-2' />\n                    )}\n                    Send Invite\n                  </button>\n                </div>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </Modal>\n    )\n  }\n\n  _checkEmail = async (email, data) => {\n    this.setState({ validateEmail: true }) // reset validateEmail\n    const checknewEmail = await this._checkNewEmail(email, data)\n    if (checknewEmail) {\n      return\n    } else if (\n      data.addPartyModalData === TransactionRole.BUYER_AGENT ||\n      data.addPartyModalData === TransactionRole.SELLER_AGENT\n    ) {\n      ;(await this._checkTransactionParty(email, data)) &&\n        this._checkTransactionInvite(data)\n      return\n    }\n    this.setState({ validateEmail: true })\n  }\n  _checkTransactionInvite = data => {\n    data.transaction.invitations.map(data => {\n      if (\n        data.role === TransactionRole.BUYER_AGENT ||\n        data.role === TransactionRole.SELLER_AGENT\n      ) {\n        this.setState({ validateEmail: false })\n      } else {\n        this.setState({ validateEmail: true })\n      }\n    })\n  }\n  _checkTransactionParty = async (email, data) => {\n    data.transaction.parties.map(async data => {\n      if (\n        data.role === TransactionRole.BUYER_AGENT ||\n        data.role === TransactionRole.SELLER_AGENT\n      ) {\n        try {\n          const user = await userService.getUserRole({ id: data.userId })\n          if (user[0].roles[0].name === Role.AGENT) {\n            this.setState({ validateEmail: true })\n            return false\n          } else {\n            this.setState({ validateEmail: false })\n            return false\n          }\n        } catch (e) {\n          this.setState({ validateEmail: false })\n          return false\n        }\n      }\n    })\n    return true\n  }\n\n  _checkNewEmail = async (email, data) => {\n    try {\n      const findEmail = await userService.getUserRole({\n        email: encodeURIComponent(email)\n      })\n      const roleEmail = findEmail[0].roles[0].name\n      if (\n        roleEmail === Role.AGENT ||\n        (data.addPartyModalData === TransactionRole.TRANSACTION_COORDINATOR &&\n          roleEmail === Role.COORDINATOR)\n      ) {\n        this.setState({ validateEmail: true })\n        return true\n      } else if (roleEmail === Role.ADMIN || roleEmail === Role.COORDINATOR) {\n        this.setState({ validateEmail: false })\n        return true\n      }\n      return false\n    } catch (e) {\n      return false\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}