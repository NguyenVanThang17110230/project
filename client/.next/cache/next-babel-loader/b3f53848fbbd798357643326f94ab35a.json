{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Modal } from 'reactstrap';\nimport toastr from 'toastr';\nimport Cookies from 'js-cookie';\nimport { Router } from '../../../common/routes';\nimport { transactionService } from '../../services';\nimport { MAX_FILE_SIZE, TransactionType, TransactionTypeStatus } from '../../../common/models/Transaction';\n\nvar AddNewTransactionModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNewTransactionModal, _Component);\n\n  function AddNewTransactionModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddNewTransactionModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNewTransactionModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(values, action) {\n        var setSubmitting, address, imageURL, url, description, closingDateV, transactionType, transactionTypeStatus, status, closingDate, newTransaction, msg;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = action.setSubmitting;\n                _context.prev = 1;\n                address = values.address, imageURL = values.imageURL, url = values.url, description = values.description, closingDateV = values.closingDateV, transactionType = values.transactionType, transactionTypeStatus = values.transactionTypeStatus, status = values.status;\n\n                if (!closingDateV) {\n                  closingDate = new Date(0);\n                } else {\n                  closingDate = closingDateV;\n                }\n\n                setSubmitting(true);\n                _context.next = 7;\n                return transactionService.createTransaction({\n                  ownerId: _this.props.currentUser.id,\n                  address: address,\n                  imageURL: imageURL,\n                  url: url,\n                  description: description,\n                  closingDate: closingDate,\n                  transactionType: transactionType,\n                  transactionTypeStatus: transactionTypeStatus,\n                  status: status\n                });\n\n              case 7:\n                newTransaction = _context.sent;\n\n                if (!imageURL) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 11;\n                return transactionService.createMainImage(newTransaction.id, imageURL);\n\n              case 11:\n                setSubmitting(false);\n                toastr.success('Success');\n\n                if (_this.props.currentUser.roles[0].name === 'agent') {\n                  Cookies.set('add_new_transaction', newTransaction.id);\n                }\n\n                _this.props.toggleMemberModal();\n\n                Router.pushRoute(\"/my-transactions/\".concat(newTransaction.id));\n                _context.next = 23;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](1);\n\n                switch (_context.t0.code) {\n                  default:\n                    {\n                      msg = _context.t0.message;\n                    }\n                }\n\n                toastr.error(msg);\n                setSubmitting(false);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 18]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_nextNew\", function () {\n      var view = document.getElementsByClassName('second-new-all');\n      var active = document.getElementsByClassName('activeNew');\n      var blue = document.getElementsByClassName('name-test');\n      var blueNext = document.getElementsByClassName('details-test');\n      var blue2 = document.getElementsByClassName('finish-test');\n      var blueNext2 = document.getElementsByClassName('details-test');\n\n      _toConsumableArray(active).forEach(function (acT) {\n        acT.classList.remove('activeNew');\n      });\n\n      view[0].classList.add('activeNew');\n      blue[0].classList.add('activeBl');\n      blueNext[0].classList.add('activeBlN');\n      blue2[0].classList.remove('activeBlN_f');\n      blueNext2[0].classList.remove('activeBl_f');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_nextFinal\", function () {\n      var view = document.getElementsByClassName('final-new-all');\n      var active = document.getElementsByClassName('activeNew');\n      var blue = document.getElementsByClassName('details-test');\n      var blueNext = document.getElementsByClassName('finish-test');\n\n      _toConsumableArray(active).forEach(function (acT) {\n        acT.classList.remove('activeNew');\n      });\n\n      view[0].classList.add('activeNew');\n      blue[0].classList.add('activeBl_f');\n      blueNext[0].classList.add('activeBlN_f');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_backFirst\", function () {\n      var view = document.getElementsByClassName('first-new-all');\n      var active = document.getElementsByClassName('activeNew');\n      var blue = document.getElementsByClassName('name-test');\n      var blueNext = document.getElementsByClassName('details-test');\n\n      _toConsumableArray(active).forEach(function (acT) {\n        acT.classList.remove('activeNew');\n      });\n\n      view[0].classList.add('activeNew');\n      blue[0].classList.remove('activeBl');\n      blueNext[0].classList.remove('activeBlN');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_previewImage\", function (image) {\n      var img = document.querySelector('.new-image');\n      var preI = document.querySelector('.view-input');\n\n      var self = _assertThisInitialized(_this);\n\n      if (image) {\n        var reader = new window.FileReader();\n        reader.addEventListener('load', function () {\n          var result = reader.result;\n          img.classList.add('hide-ne');\n\n          if (preI) {\n            preI.src = result;\n          }\n\n          self.setState({\n            src: result\n          });\n        });\n        reader.readAsDataURL(image);\n      }\n    });\n\n    _this.state = {\n      isSubmit: true,\n      setView: 0,\n      src: ''\n    };\n    return _this;\n  } //\n\n\n  _createClass(AddNewTransactionModal, [{\n    key: \"render\",\n    //\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isToggleModalNewTransaction = _this$props.isToggleModalNewTransaction,\n          toggleMemberModal = _this$props.toggleMemberModal;\n      var setView = this.state.setView;\n      return React.createElement(\"div\", null, React.createElement(Modal, {\n        isOpen: isToggleModalNewTransaction,\n        toggle: toggleMemberModal,\n        id: \"new-transaction-modal\"\n      }, React.createElement(\"div\", {\n        className: \"modal-header modal-header--change\",\n        id: \"bg-gr\"\n      }, React.createElement(\"div\", {\n        className: \"text-center w-100\"\n      }, React.createElement(\"h5\", {\n        className: \"modal-title new-add\",\n        id: \"exampleModalLabel\"\n      }, \"Add New Transaction\"), React.createElement(\"div\", {\n        className: \"test-circle\"\n      }, React.createElement(\"div\", {\n        className: \"name-test\"\n      }, React.createElement(\"div\", {\n        className: \"name-one\"\n      }, \"1\"), React.createElement(\"h4\", null, \"Name\")), React.createElement(\"div\", {\n        className: \"details-test\"\n      }, React.createElement(\"div\", {\n        className: \"details-two\"\n      }, \"2\"), React.createElement(\"h4\", null, \"Details\")), React.createElement(\"div\", {\n        className: \"finish-test\"\n      }, React.createElement(\"div\", {\n        className: \"finish-three\"\n      }, \"3\"), React.createElement(\"h4\", null, \"Finish\")))), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close bg-transparent close-new\",\n        \"data-dismiss\": \"modal\",\n        onClick: toggleMemberModal // onClick = {this._hideM}\n\n      }, \"\\xD7\")), React.createElement(Formik, {\n        initialValues: {\n          address: '',\n          imageURL: '',\n          url: '',\n          description: '',\n          closingDateV: '',\n          transactionType: '',\n          transactionTypeStatus: '',\n          status: 'active'\n        },\n        onSubmit: this._onSubmit,\n        validate: function validate(values) {\n          var error = {}; // error.start = 'Address is required'\n\n          if (values.imageURL && values.imageURL.size > MAX_FILE_SIZE) {\n            error.imageURL = 'The file you have selected is too large';\n          } // if (values.address !== '') {\n          //   this.setState({\n          //     isSubmit: false\n          //   })\n          // }\n\n\n          return error;\n        }\n      }, function (_ref2) {\n        var values = _ref2.values,\n            errors = _ref2.errors,\n            isSubmitting = _ref2.isSubmitting,\n            handleSubmit = _ref2.handleSubmit,\n            handleChange = _ref2.handleChange,\n            setFieldValue = _ref2.setFieldValue,\n            touched = _ref2.touched,\n            isValid = _ref2.isValid;\n        return React.createElement(\"form\", {\n          onSubmit: handleSubmit\n        }, React.createElement(\"div\", {\n          className: \"modal-body px-5 mx-2\",\n          id: \"main-body\"\n        }, setView === 0 && React.createElement(\"div\", {\n          className: \"first-new-all activeNew\"\n        }, React.createElement(\"h4\", {\n          className: \"text-left tittle-mini\",\n          style: {\n            marginLeft: '10px'\n          }\n        }, \"Property Address\"), React.createElement(\"div\", {\n          className: \"first-new\"\n        }, React.createElement(\"div\", {\n          className: \" row pt-3\",\n          style: {\n            width: '100%'\n          }\n        }, React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"input\", {\n          className: \"form-control is-invalidval\",\n          placeholder: \"Type Here\",\n          name: \"address\",\n          onChange: handleChange,\n          value: values.address,\n          required: true\n        })))), React.createElement(\"div\", {\n          onClick:\n          /*#__PURE__*/\n          _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2() {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _this2.setState({\n                      setView: 1\n                    });\n\n                  case 2:\n                    _context2.next = 4;\n                    return _this2._nextNew();\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          })),\n          className: \"btn-next next-two\"\n        }, \"Next\")), errors && !values.address ? React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, \"Address is required\") : React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, errors.address)), setView === 1 && React.createElement(\"div\", {\n          className: \"second-new-all\"\n        }, React.createElement(\"h4\", {\n          className: \"text-left tittle-mini\"\n        }, \"Property Details\"), React.createElement(\"div\", {\n          className: \"second-new\"\n        }, React.createElement(\"div\", {\n          className: \"row pt-3\"\n        }, React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Main Image\"), React.createElement(\"div\", {\n          className: \"image-upload-wrap\"\n        }, React.createElement(\"input\", {\n          className: \"form-control new-image\",\n          placeholder: \"Type Here\",\n          name: \"imageURL\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: function onChange(event) {\n            setFieldValue('imageURL', event.currentTarget.files[0]);\n\n            _this2._previewImage(event.currentTarget.files[0]);\n          }\n        }), React.createElement(\"div\", {\n          className: \"drag-text\"\n        }, React.createElement(\"h3\", null, \"Add image\")), React.createElement(\"img\", {\n          className: \"view-input\",\n          src: \"#\",\n          alt: \"\",\n          style: {\n            objectFit: 'cover'\n          }\n        })))), React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"URL\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Add URL\",\n          name: \"url\",\n          type: \"text\",\n          onChange: handleChange,\n          value: values.url\n        }))), React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Description\"), React.createElement(\"textarea\", {\n          className: \"form-control\",\n          placeholder: \"Add Description\",\n          rows: 3,\n          name: \"description\",\n          onChange: handleChange,\n          value: values.description\n        }))))), React.createElement(\"div\", {\n          className: \"prev-next\"\n        }, React.createElement(\"div\", {\n          onClick:\n          /*#__PURE__*/\n          _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3() {\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return _this2.setState({\n                      setView: 0\n                    });\n\n                  case 2:\n                    _context3.next = 4;\n                    return _this2._backFirst();\n\n                  case 4:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          })),\n          className: \"btn-prev\"\n        }, \"Back\"), React.createElement(\"div\", {\n          onClick:\n          /*#__PURE__*/\n          _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4() {\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return _this2.setState({\n                      setView: 2\n                    });\n\n                  case 2:\n                    _context4.next = 4;\n                    return _this2._nextFinal();\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          })),\n          className: \"btn-next next-three\"\n        }, \"Next\")), errors && values.imageURL && React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, errors.imageURL)), setView === 2 && React.createElement(\"div\", {\n          className: \"final-new-all\"\n        }, React.createElement(\"h4\", {\n          className: \"text-left mt-3 tittle-mini\"\n        }, values.address), React.createElement(\"div\", {\n          className: \"row pt-2\"\n        }, React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Main Image\"), React.createElement(\"div\", {\n          className: \"main-image-view\"\n        }, React.createElement(\"div\", {\n          className: \"image-new\"\n        }, React.createElement(\"img\", {\n          className: \"preview-image\",\n          src: _this2.state.src ? _this2.state.src : '/static/images/image-default.png',\n          alt: \"\",\n          style: {\n            objectFit: 'cover'\n          }\n        }))))), React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Expected Closing Date\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          type: \"date\",\n          defaultValue: \"2011-08-19\",\n          id: \"example-date-input\",\n          name: \"closingDateV\",\n          onChange: handleChange,\n          value: values.closingDateV\n        }))), React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Transaction Type\"), React.createElement(\"select\", {\n          className: \"custom-select mr-sm-2\",\n          id: \"text-select\",\n          onChange: handleChange,\n          value: values.transactionType,\n          name: \"transactionType\"\n        }, React.createElement(\"option\", {\n          value: \"\"\n        }, \"None\"), React.createElement(\"option\", {\n          value: TransactionType.NEW_PURCHASE\n        }, \"Purchase\"), React.createElement(\"option\", {\n          value: TransactionType.NEW_LISTING_FOR_SALE\n        }, \"Listing for sale\"), React.createElement(\"option\", {\n          value: TransactionType.NEW_LISTING_FOR_LEASE\n        }, \"Listing for lease\"), React.createElement(\"option\", {\n          value: TransactionType.NEW_LEASE\n        }, \"Lease\"), React.createElement(\"option\", {\n          value: TransactionType.NEW_REAL_ESTATE_OTHER\n        }, \"Real estate other\"), React.createElement(\"option\", {\n          value: TransactionType.NEW_OTHER\n        }, \"Other\")))), React.createElement(\"div\", {\n          className: \"col-12\"\n        }, React.createElement(\"div\", {\n          className: \"form-group\"\n        }, React.createElement(\"label\", {\n          className: \"tittle-mini-ver\"\n        }, \"Transaction type\"), values.transactionType === 'new-purchase' && React.createElement(\"select\", {\n          className: \"custom-select mr-sm-2\",\n          id: \"inlineFormCustomSelect2\",\n          onChange: handleChange,\n          value: values.transactionTypeStatus,\n          name: \"transactionTypeStatus\"\n        }, React.createElement(\"option\", {\n          value: \"\"\n        }, \"None\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_PRE_OFFER\n        }, \"Pre-offer\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_UNDER_CONTRACT\n        }, \"Under contract\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ESCROW\n        }, \"Escrow\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ESCROW_CLOSE\n        }, \"Escrow close\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_WITHDRAWN\n        }, \"Withdrawn\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_SOLD\n        }, \"Sold\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_TERMINATED\n        }, \"Terminated\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ARCHIVED\n        }, \"Archived\")), values.transactionType === 'new-listing-for-sale' && React.createElement(\"select\", {\n          className: \"custom-select mr-sm-2\",\n          id: \"inlineFormCustomSelect2\",\n          onChange: handleChange,\n          value: values.transactionTypeStatus,\n          name: \"transactionTypeStatus\"\n        }, React.createElement(\"option\", {\n          value: \"\"\n        }, \"None\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_PRE_LISTING\n        }, \"Pre-listing\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_PRIVATE_LISTING\n        }, \"Private listing\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ACTIVE_LISTING\n        }, \"Active listing\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_UNDER_CONTRACT\n        }, \"Under contract\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ESCROW\n        }, \"Escrow\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ESCROW_CLOSE\n        }, \"Escrow close\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_WITHDRAWN\n        }, \"Withdrawn\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_SOLD\n        }, \"Sold\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_TERMINATED\n        }, \"Terminated\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ARCHIVED\n        }, \"Archived\")), values.transactionType === 'new-listing-for-lease' && React.createElement(\"select\", {\n          className: \"custom-select mr-sm-2\",\n          id: \"inlineFormCustomSelect2\",\n          onChange: handleChange,\n          value: values.transactionTypeStatus,\n          name: \"transactionTypeStatus\"\n        }, React.createElement(\"option\", {\n          value: \"\"\n        }, \"None\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_PRE_LISTING\n        }, \"Pre-listing\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_PRIVATE_LISTING\n        }, \"Private listing\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ACTIVE_LISTING\n        }, \"Active listing\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_UNDER_CONTRACT\n        }, \"Under contract\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_WITHDRAWN\n        }, \"Withdrawn\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_LEASED\n        }, \"Leased\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_TERMINATED\n        }, \"Terminated\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ARCHIVED\n        }, \"Archived\")), values.transactionType === 'new-lease' && React.createElement(\"select\", {\n          className: \"custom-select mr-sm-2\",\n          id: \"inlineFormCustomSelect2\",\n          onChange: handleChange,\n          value: values.transactionTypeStatus,\n          name: \"transactionTypeStatus\"\n        }, React.createElement(\"option\", {\n          value: \"\"\n        }, \"None\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_PRE_OFFER\n        }, \"Pre-offer\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_UNDER_CONTRACT\n        }, \"Under contract\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_WITHDRAWN\n        }, \"Withdrawn\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_LEASED\n        }, \"Leased\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_TERMINATED\n        }, \"Terminated\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ARCHIVED\n        }, \"Archived\")), values.transactionType === 'new-real-estate-other' && React.createElement(\"select\", {\n          className: \"custom-select mr-sm-2\",\n          id: \"inlineFormCustomSelect2\",\n          onChange: handleChange,\n          value: values.transactionTypeStatus,\n          name: \"transactionTypeStatus\"\n        }, React.createElement(\"option\", {\n          value: \"\"\n        }, \"None\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_NEW\n        }, \"New\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_IN_PROCESS\n        }, \"In-process\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_WITHDRAWN\n        }, \"Withdrawn\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ESCROW\n        }, \"Escrow\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ESCROW_CLOSE\n        }, \"Escrow close\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_DONE\n        }, \"Done\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_TERMINATED\n        }, \"Terminated\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ARCHIVED\n        }, \"Archived\")), values.transactionType === 'new-other' && React.createElement(\"select\", {\n          className: \"custom-select mr-sm-2\",\n          id: \"inlineFormCustomSelect2\",\n          onChange: handleChange,\n          value: values.transactionTypeStatus,\n          name: \"transactionTypeStatus\"\n        }, React.createElement(\"option\", {\n          value: \"\"\n        }, \"None\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_NEW\n        }, \"New\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_IN_PROCESS\n        }, \"In-process\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_WITHDRAWN\n        }, \"Withdrawn\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_DONE\n        }, \"Done\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_TERMINATED\n        }, \"Terminated\"), React.createElement(\"option\", {\n          value: TransactionTypeStatus.TTS_ARCHIVED\n        }, \"Archived\")), values.transactionType === '' && React.createElement(\"select\", {\n          className: \"custom-select mr-sm-2\",\n          id: \"inlineFormCustomSelect2\",\n          onChange: handleChange,\n          value: values.transactionTypeStatus,\n          name: \"transactionTypeStatus\"\n        }, React.createElement(\"option\", {\n          value: \"\"\n        }, \"None\")))), React.createElement(\"div\", {\n          className: \"prev-next\"\n        }, React.createElement(\"div\", {\n          onClick:\n          /*#__PURE__*/\n          _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee5() {\n            return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return _this2.setState({\n                      setView: 1\n                    });\n\n                  case 2:\n                    _context5.next = 4;\n                    return _this2._nextNew();\n\n                  case 4:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5);\n          })),\n          className: \"btn-prev\"\n        }, \"Back\"), React.createElement(\"div\", {\n          className: \"btn-save\"\n        }, React.createElement(\"button\", {\n          disabled: isSubmitting || !isValid,\n          type: \"submit\",\n          className: \"btn text-white p-0\",\n          style: {\n            fontSize: '16px',\n            fontWeight: '500',\n            height: '100%',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'none'\n          }\n        }, isSubmitting && React.createElement(\"span\", {\n          className: \"spinner-border spinner-border-sm mr-2\"\n        }), \"Save\")))), errors.transactionType && React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, errors.transactionType), errors.transactionTypeStatus && React.createElement(\"div\", {\n          className: \"text-danger text-center\"\n        }, errors.transactionTypeStatus))));\n      })));\n    }\n  }]);\n\n  return AddNewTransactionModal;\n}(Component);\n\nexport default AddNewTransactionModal;","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/component/Transaction/AddNewTransactionModal.js"],"names":["React","Component","Formik","Modal","toastr","Cookies","Router","transactionService","MAX_FILE_SIZE","TransactionType","TransactionTypeStatus","AddNewTransactionModal","props","values","action","setSubmitting","address","imageURL","url","description","closingDateV","transactionType","transactionTypeStatus","status","closingDate","Date","createTransaction","ownerId","currentUser","id","newTransaction","createMainImage","success","roles","name","set","toggleMemberModal","pushRoute","code","msg","message","error","view","document","getElementsByClassName","active","blue","blueNext","blue2","blueNext2","forEach","acT","classList","remove","add","image","img","querySelector","preI","self","reader","window","FileReader","addEventListener","result","src","setState","readAsDataURL","state","isSubmit","setView","isToggleModalNewTransaction","_onSubmit","size","errors","isSubmitting","handleSubmit","handleChange","setFieldValue","touched","isValid","marginLeft","width","_nextNew","event","currentTarget","files","_previewImage","objectFit","_backFirst","_nextFinal","NEW_PURCHASE","NEW_LISTING_FOR_SALE","NEW_LISTING_FOR_LEASE","NEW_LEASE","NEW_REAL_ESTATE_OTHER","NEW_OTHER","TTS_PRE_OFFER","TTS_UNDER_CONTRACT","TTS_ESCROW","TTS_ESCROW_CLOSE","TTS_WITHDRAWN","TTS_SOLD","TTS_TERMINATED","TTS_ARCHIVED","TTS_PRE_LISTING","TTS_PRIVATE_LISTING","TTS_ACTIVE_LISTING","TTS_LEASED","TTS_NEW","TTS_IN_PROCESS","TTS_DONE","fontSize","fontWeight","height","display","alignItems","justifyContent","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik } from 'formik'\nimport { Modal } from 'reactstrap'\nimport toastr from 'toastr'\nimport Cookies from 'js-cookie'\nimport { Router } from '../../../common/routes'\nimport { transactionService } from '../../services'\nimport {\n  MAX_FILE_SIZE,\n  TransactionType,\n  TransactionTypeStatus\n} from '../../../common/models/Transaction'\n\nclass AddNewTransactionModal extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isSubmit: true,\n      setView: 0,\n      src: ''\n    }\n  }\n\n  //\n  _onSubmit = async (values, action) => {\n    const { setSubmitting } = action\n    try {\n      const {\n        address,\n        imageURL,\n        url,\n        description,\n        closingDateV,\n        transactionType,\n        transactionTypeStatus,\n        status\n      } = values\n      var closingDate\n      if (!closingDateV) {\n        closingDate = new Date(0)\n      } else {\n        closingDate = closingDateV\n      }\n\n      setSubmitting(true)\n      const newTransaction = await transactionService.createTransaction({\n        ownerId: this.props.currentUser.id,\n        address,\n        imageURL,\n        url,\n        description,\n        closingDate,\n        transactionType,\n        transactionTypeStatus,\n        status\n      })\n      if (imageURL) {\n        await transactionService.createMainImage(newTransaction.id, imageURL)\n      }\n      setSubmitting(false)\n      toastr.success('Success')\n      if (this.props.currentUser.roles[0].name === 'agent') {\n        Cookies.set('add_new_transaction', newTransaction.id)\n      }\n      this.props.toggleMemberModal()\n      Router.pushRoute(`/my-transactions/${newTransaction.id}`)\n    } catch (e) {\n      let msg\n      switch (e.code) {\n        default: {\n          msg = e.message\n        }\n      }\n      toastr.error(msg)\n      setSubmitting(false)\n    }\n  }\n  //\n  _nextNew = () => {\n    var view = document.getElementsByClassName('second-new-all')\n    var active = document.getElementsByClassName('activeNew')\n    var blue = document.getElementsByClassName('name-test')\n    var blueNext = document.getElementsByClassName('details-test')\n    var blue2 = document.getElementsByClassName('finish-test')\n    var blueNext2 = document.getElementsByClassName('details-test')\n    ;[...active].forEach(acT => {\n      acT.classList.remove('activeNew')\n    })\n    view[0].classList.add('activeNew')\n    blue[0].classList.add('activeBl')\n    blueNext[0].classList.add('activeBlN')\n    blue2[0].classList.remove('activeBlN_f')\n    blueNext2[0].classList.remove('activeBl_f')\n  }\n  _nextFinal = () => {\n    var view = document.getElementsByClassName('final-new-all')\n    var active = document.getElementsByClassName('activeNew')\n    var blue = document.getElementsByClassName('details-test')\n    var blueNext = document.getElementsByClassName('finish-test')\n    ;[...active].forEach(acT => {\n      acT.classList.remove('activeNew')\n    })\n    view[0].classList.add('activeNew')\n    blue[0].classList.add('activeBl_f')\n    blueNext[0].classList.add('activeBlN_f')\n  }\n  _backFirst = () => {\n    var view = document.getElementsByClassName('first-new-all')\n    var active = document.getElementsByClassName('activeNew')\n    var blue = document.getElementsByClassName('name-test')\n    var blueNext = document.getElementsByClassName('details-test')\n    ;[...active].forEach(acT => {\n      acT.classList.remove('activeNew')\n    })\n    view[0].classList.add('activeNew')\n    blue[0].classList.remove('activeBl')\n    blueNext[0].classList.remove('activeBlN')\n  }\n  //\n  _previewImage = image => {\n    const img = document.querySelector('.new-image')\n    const preI = document.querySelector('.view-input')\n    let self = this\n    if (image) {\n      const reader = new window.FileReader()\n      reader.addEventListener('load', function () {\n        const result = reader.result\n        img.classList.add('hide-ne')\n        if (preI) {\n          preI.src = result\n        }\n        self.setState({\n          src: result\n        })\n      })\n      reader.readAsDataURL(image)\n    }\n  }\n  //\n  render () {\n    const { isToggleModalNewTransaction, toggleMemberModal } = this.props\n    const { setView } = this.state\n    return (\n      <div>\n        <Modal\n          isOpen={isToggleModalNewTransaction}\n          toggle={toggleMemberModal}\n          id='new-transaction-modal'\n        >\n          <div className='modal-header modal-header--change' id='bg-gr'>\n            <div className='text-center w-100'>\n              <h5 className='modal-title new-add' id='exampleModalLabel'>\n                Add New Transaction\n              </h5>\n              <div className='test-circle'>\n                <div className='name-test'>\n                  <div className='name-one'>1</div>\n                  <h4>Name</h4>\n                </div>\n                <div className='details-test'>\n                  <div className='details-two'>2</div>\n                  <h4>Details</h4>\n                </div>\n                <div className='finish-test'>\n                  <div className='finish-three'>3</div>\n                  <h4>Finish</h4>\n                </div>\n              </div>\n            </div>\n            <button\n              type='button'\n              className='close bg-transparent close-new'\n              data-dismiss='modal'\n              onClick={toggleMemberModal}\n              // onClick = {this._hideM}\n            >\n              &times;\n            </button>\n          </div>\n          <Formik\n            initialValues={{\n              address: '',\n              imageURL: '',\n              url: '',\n              description: '',\n              closingDateV: '',\n              transactionType: '',\n              transactionTypeStatus: '',\n              status: 'active'\n            }}\n            onSubmit={this._onSubmit}\n            validate={values => {\n              let error = {}\n              // error.start = 'Address is required'\n              if (values.imageURL && values.imageURL.size > MAX_FILE_SIZE) {\n                error.imageURL = 'The file you have selected is too large'\n              }\n              // if (values.address !== '') {\n              //   this.setState({\n              //     isSubmit: false\n              //   })\n              // }\n              return error\n            }}\n          >\n            {({\n              values,\n              errors,\n              isSubmitting,\n              handleSubmit,\n              handleChange,\n              setFieldValue,\n              touched,\n              isValid\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <div className='modal-body px-5 mx-2' id='main-body'>\n                  {setView === 0 && (\n                    <div className='first-new-all activeNew'>\n                      <h4\n                        className='text-left tittle-mini'\n                        style={{ marginLeft: '10px' }}\n                      >\n                        Property Address\n                      </h4>\n                      <div className='first-new'>\n                        <div className=' row pt-3' style={{ width: '100%' }}>\n                          <div className='col-12'>\n                            <div className='form-group'>\n                              <input\n                                className='form-control is-invalidval'\n                                placeholder='Type Here'\n                                name='address'\n                                onChange={handleChange}\n                                value={values.address}\n                                required\n                              />\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          onClick={async () => {\n                            await this.setState({ setView: 1 })\n                            await this._nextNew()\n                          }}\n                          className='btn-next next-two'\n                        >\n                          Next\n                        </div>\n                      </div>\n\n                      {errors && !values.address ? (\n                        <div className='text-danger text-center'>\n                          Address is required\n                        </div>\n                      ) : (\n                        <div className='text-danger text-center'>\n                          {errors.address}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {setView === 1 && (\n                    <div className='second-new-all'>\n                      <h4 className='text-left tittle-mini'>\n                        Property Details\n                      </h4>\n                      <div className='second-new'>\n                        <div className='row pt-3'>\n                          <div className='col-12'>\n                            <div className='form-group'>\n                              <label className='tittle-mini-ver'>\n                                Main Image\n                              </label>\n                              <div className='image-upload-wrap'>\n                                <input\n                                  className='form-control new-image'\n                                  placeholder='Type Here'\n                                  name='imageURL'\n                                  type='file'\n                                  accept='image/*'\n                                  onChange={event => {\n                                    setFieldValue(\n                                      'imageURL',\n                                      event.currentTarget.files[0]\n                                    )\n                                    this._previewImage(\n                                      event.currentTarget.files[0]\n                                    )\n                                  }}\n                                />\n                                <div className='drag-text'>\n                                  <h3>Add image</h3>\n                                </div>\n                                <img\n                                  className='view-input'\n                                  src='#'\n                                  alt=''\n                                  style={{ objectFit: 'cover' }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className='col-12'>\n                            <div className='form-group'>\n                              <label className='tittle-mini-ver'>URL</label>\n                              <input\n                                className='form-control'\n                                placeholder='Add URL'\n                                name='url'\n                                type='text'\n                                onChange={handleChange}\n                                value={values.url}\n                              />\n                            </div>\n                          </div>\n                          <div className='col-12'>\n                            <div className='form-group'>\n                              <label className='tittle-mini-ver'>\n                                Description\n                              </label>\n                              <textarea\n                                className='form-control'\n                                placeholder='Add Description'\n                                rows={3}\n                                name='description'\n                                onChange={handleChange}\n                                value={values.description}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='prev-next'>\n                        <div\n                          onClick={async () => {\n                            await this.setState({ setView: 0 })\n                            await this._backFirst()\n                          }}\n                          className='btn-prev'\n                        >\n                          Back\n                        </div>\n                        <div\n                          onClick={async () => {\n                            await this.setState({ setView: 2 })\n                            await this._nextFinal()\n                          }}\n                          className='btn-next next-three'\n                        >\n                          Next\n                        </div>\n                      </div>\n                      {errors && values.imageURL && (\n                        <div className='text-danger text-center'>\n                          {errors.imageURL}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {setView === 2 && (\n                    <div className='final-new-all'>\n                      <h4 className='text-left mt-3 tittle-mini'>\n                        {values.address}\n                      </h4>\n                      <div className='row pt-2'>\n                        <div className='col-12'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Main Image\n                            </label>\n                            <div className='main-image-view'>\n                              <div className='image-new'>\n                                <img\n                                  className='preview-image'\n                                  src={\n                                    this.state.src\n                                      ? this.state.src\n                                      : '/static/images/image-default.png'\n                                  }\n                                  alt=''\n                                  style={{ objectFit: 'cover' }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className='col-12'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Expected Closing Date\n                            </label>\n                            <input\n                              className='form-control'\n                              type='date'\n                              defaultValue='2011-08-19'\n                              id='example-date-input'\n                              name='closingDateV'\n                              onChange={handleChange}\n                              value={values.closingDateV}\n                            />\n                          </div>\n                        </div>\n                        <div className='col-12'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Transaction Type\n                            </label>\n                            <select\n                              className='custom-select mr-sm-2'\n                              id='text-select'\n                              onChange={handleChange}\n                              value={values.transactionType}\n                              name='transactionType'\n                            >\n                              <option value=''>None</option>\n                              <option value={TransactionType.NEW_PURCHASE}>\n                                Purchase\n                              </option>\n                              <option\n                                value={TransactionType.NEW_LISTING_FOR_SALE}\n                              >\n                                Listing for sale\n                              </option>\n                              <option\n                                value={TransactionType.NEW_LISTING_FOR_LEASE}\n                              >\n                                Listing for lease\n                              </option>\n                              <option value={TransactionType.NEW_LEASE}>\n                                Lease\n                              </option>\n                              <option\n                                value={TransactionType.NEW_REAL_ESTATE_OTHER}\n                              >\n                                Real estate other\n                              </option>\n                              <option value={TransactionType.NEW_OTHER}>\n                                Other\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className='col-12'>\n                          <div className='form-group'>\n                            <label className='tittle-mini-ver'>\n                              Transaction type\n                            </label>\n                            {values.transactionType === 'new-purchase' && (\n                              <select\n                                className='custom-select mr-sm-2'\n                                id='inlineFormCustomSelect2'\n                                onChange={handleChange}\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_PRE_OFFER}\n                                >\n                                  Pre-offer\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_UNDER_CONTRACT\n                                  }\n                                >\n                                  Under contract\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW}\n                                >\n                                  Escrow\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW_CLOSE}\n                                >\n                                  Escrow close\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_SOLD}>\n                                  Sold\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType ===\n                              'new-listing-for-sale' && (\n                              <select\n                                className='custom-select mr-sm-2'\n                                id='inlineFormCustomSelect2'\n                                onChange={handleChange}\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_PRE_LISTING}\n                                >\n                                  Pre-listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_PRIVATE_LISTING\n                                  }\n                                >\n                                  Private listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_ACTIVE_LISTING\n                                  }\n                                >\n                                  Active listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_UNDER_CONTRACT\n                                  }\n                                >\n                                  Under contract\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW}\n                                >\n                                  Escrow\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW_CLOSE}\n                                >\n                                  Escrow close\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_SOLD}>\n                                  Sold\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType ===\n                              'new-listing-for-lease' && (\n                              <select\n                                className='custom-select mr-sm-2'\n                                id='inlineFormCustomSelect2'\n                                onChange={handleChange}\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_PRE_LISTING}\n                                >\n                                  Pre-listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_PRIVATE_LISTING\n                                  }\n                                >\n                                  Private listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_ACTIVE_LISTING\n                                  }\n                                >\n                                  Active listing\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_UNDER_CONTRACT\n                                  }\n                                >\n                                  Under contract\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_LEASED}\n                                >\n                                  Leased\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType === 'new-lease' && (\n                              <select\n                                className='custom-select mr-sm-2'\n                                id='inlineFormCustomSelect2'\n                                onChange={handleChange}\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_PRE_OFFER}\n                                >\n                                  Pre-offer\n                                </option>\n                                <option\n                                  value={\n                                    TransactionTypeStatus.TTS_UNDER_CONTRACT\n                                  }\n                                >\n                                  Under contract\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_LEASED}\n                                >\n                                  Leased\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType ===\n                              'new-real-estate-other' && (\n                              <select\n                                className='custom-select mr-sm-2'\n                                id='inlineFormCustomSelect2'\n                                onChange={handleChange}\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option value={TransactionTypeStatus.TTS_NEW}>\n                                  New\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_IN_PROCESS}\n                                >\n                                  In-process\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW}\n                                >\n                                  Escrow\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ESCROW_CLOSE}\n                                >\n                                  Escrow close\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_DONE}>\n                                  Done\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType === 'new-other' && (\n                              <select\n                                className='custom-select mr-sm-2'\n                                id='inlineFormCustomSelect2'\n                                onChange={handleChange}\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                                <option value={TransactionTypeStatus.TTS_NEW}>\n                                  New\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_IN_PROCESS}\n                                >\n                                  In-process\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_WITHDRAWN}\n                                >\n                                  Withdrawn\n                                </option>\n                                <option value={TransactionTypeStatus.TTS_DONE}>\n                                  Done\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_TERMINATED}\n                                >\n                                  Terminated\n                                </option>\n                                <option\n                                  value={TransactionTypeStatus.TTS_ARCHIVED}\n                                >\n                                  Archived\n                                </option>\n                              </select>\n                            )}\n                            {values.transactionType === '' && (\n                              <select\n                                className='custom-select mr-sm-2'\n                                id='inlineFormCustomSelect2'\n                                onChange={handleChange}\n                                value={values.transactionTypeStatus}\n                                name='transactionTypeStatus'\n                              >\n                                <option value=''>None</option>\n                              </select>\n                            )}\n                          </div>\n                        </div>\n                        <div className='prev-next'>\n                          <div\n                            onClick={async () => {\n                              await this.setState({ setView: 1 })\n                              await this._nextNew()\n                            }}\n                            className='btn-prev'\n                          >\n                            Back\n                          </div>\n                          <div className='btn-save'>\n                            <button\n                              disabled={isSubmitting || !isValid}\n                              type='submit'\n                              className='btn text-white p-0'\n                              style={{\n                                fontSize: '16px',\n                                fontWeight: '500',\n                                height: '100%',\n                                width: '100%',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                background: 'none'\n                              }}\n                            >\n                              {isSubmitting && (\n                                <span className='spinner-border spinner-border-sm mr-2' />\n                              )}\n                              Save\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      {errors.transactionType && (\n                        <div className='text-danger text-center'>\n                          {errors.transactionType}\n                        </div>\n                      )}\n                      {errors.transactionTypeStatus && (\n                        <div className='text-danger text-center'>\n                          {errors.transactionTypeStatus}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </form>\n            )}\n          </Formik>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default AddNewTransactionModal\n"]},"metadata":{},"sourceType":"module"}