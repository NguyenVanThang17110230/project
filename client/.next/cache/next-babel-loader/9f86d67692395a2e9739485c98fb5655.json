{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport React from 'react';\nimport Head from 'next/head';\nimport toastr from 'toastr';\nimport userOnly from '../../hocs/userOnly'; // import { Rank } from '../../../common/models/User'\n\nimport { userService } from '../../services';\nimport { Router } from '../../../common/routes';\nimport Role from '../../../common/models/Role';\nimport { ErrorCode } from '../../errors/ValidationError';\nimport { Constraint } from '../../../common/models/User';\nimport Error from 'next/error';\n\nvar EditManageAgents =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditManageAgents, _React$Component);\n\n  _createClass(EditManageAgents, null, [{\n    key: \"getInitialProps\",\n    // static async getInitialProps(ctx) {\n    //   return {\n    //     headerText: 'Manage Agents'\n    //     // activities,\n    //     // parties: otherParties,\n    //     // myParties,\n    //     // partyId: ctx.query.partyId\n    //   }\n    // }\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", {\n                  // namePage: 'editAgent',\n                  headerText: 'Edit Agent',\n                  toggleTimeline: false\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function EditManageAgents(props) {\n    var _this;\n\n    _classCallCheck(this, EditManageAgents);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditManageAgents).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_submit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var t;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                t = _this.props.t;\n\n                _this.setState({\n                  saving: true\n                });\n\n                _context2.prev = 3;\n                _context2.next = 6;\n                return userService.updateUser(_this.state.user);\n\n              case 6:\n                toastr.success(t('common:saved'));\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](3);\n                toastr.error(_this._getErrorMsg(_context2.t0));\n\n              case 12:\n                _context2.prev = 12;\n\n                _this.setState({\n                  saving: false\n                });\n\n                return _context2.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3, 9, 12, 15]]);\n      }));\n\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateUserField\", function (field) {\n      return function (e) {\n        switch (e.target.type) {\n          case 'checkbox':\n            {\n              _this.setState({\n                user: _objectSpread({}, _this.state.user, _defineProperty({}, field, !_this.state.user[field]))\n              });\n\n              break;\n            }\n\n          default:\n            {\n              _this.setState({\n                user: _objectSpread({}, _this.state.user, _defineProperty({}, field, e.target.value))\n              });\n            }\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getErrorMsg\", function (e) {\n      switch (e.name) {\n        case 'ValidationError':\n          {\n            var key = _Object$keys(e.details)[0];\n\n            var type = e.details[key][0];\n\n            switch (key) {\n              case 'name':\n                {\n                  switch (type) {\n                    case ErrorCode.REQUIRED:\n                      {\n                        return 'Name is required';\n                      }\n\n                    case ErrorCode.INVALID_LENGTH:\n                      {\n                        return \"Name must be within \".concat(Constraint.name.MAX_LENGTH, \" characters\");\n                      }\n                  }\n\n                  break;\n                }\n\n              case 'email':\n                {\n                  switch (type) {\n                    case ErrorCode.REQUIRED:\n                      {\n                        return 'Email is required';\n                      }\n\n                    case ErrorCode.INVALID_EMAIL:\n                      {\n                        return 'Email must be valid';\n                      }\n\n                    case ErrorCode.INVALID_LENGTH:\n                      {\n                        return \"Email must be within \".concat(Constraint.email.MAX_LENGTH, \" characters\");\n                      }\n\n                    case ErrorCode.EMAIL_EXISTED:\n                      {\n                        return 'Email already existed';\n                      }\n                  }\n\n                  break;\n                }\n\n              case 'password':\n                {\n                  switch (type) {\n                    case ErrorCode.INVALID_LENGTH:\n                      {\n                        return \"Password must be within \".concat(Constraint.password.MIN_LENGTH, \" - \").concat(Constraint.password.MAX_LENGTH, \" characters\");\n                      }\n                  }\n                }\n            }\n          }\n      }\n\n      return e.message;\n    });\n\n    _this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        emailVerified: false,\n        role: Role.USER,\n        rank: '',\n        cash: ''\n      },\n      saving: false\n    };\n    return _this;\n  }\n\n  _createClass(EditManageAgents, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var id, user;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                id = Router.query.idAgent;\n                _context3.next = 4;\n                return userService.getUserFromId(id);\n\n              case 4:\n                user = _context3.sent;\n                user.role = user.roles.length > 0 && user.roles[0].name || Role.USER;\n                this.setState({\n                  user: user\n                });\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                Router.pushRoute('/manage-agents');\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          user = _this$state.user,\n          saving = _this$state.saving;\n      var _this$props = this.props,\n          t = _this$props.t,\n          currentUser = _this$props.currentUser;\n\n      if (currentUser.roles[0].name !== Role.COORDINATOR) {\n        return React.createElement(Error, {\n          statusCode: 404\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"box-main\"\n      }, React.createElement(Head, null, React.createElement(\"title\", null, \"Edit Agents\")), React.createElement(\"section\", {\n        className: \"content\"\n      }, React.createElement(\"div\", {\n        className: \"\"\n      }, React.createElement(\"div\", {\n        className: \"card shadow-sm rounded\"\n      }, React.createElement(\"div\", {\n        className: \"card-header\"\n      }, React.createElement(\"span\", {\n        className: \"card-title\"\n      }, \"Edit manage form\")), React.createElement(\"div\", {\n        className: \"card-body\"\n      }, React.createElement(\"section\", {\n        className: \"content\"\n      }, React.createElement(\"form\", {\n        role: \"form\",\n        onSubmit: this._submit\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\"\n      }, \"First name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"input-firstName\",\n        placeholder: \"First name\",\n        onChange: this._updateUserField('firstName'),\n        value: user.firstName\n      })), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\"\n      }, \"Last name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"input-lastName\",\n        placeholder: \"Last name\",\n        onChange: this._updateUserField('lastName'),\n        value: user.lastName\n      })), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\"\n      }, t('common:email')), React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"input-email\",\n        placeholder: t('common:email'),\n        onChange: this._updateUserField('email'),\n        value: user.email\n      })), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"role\"\n      }, t('common:role')), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"role\" // onChange={this._updateUserField('role')}\n        ,\n        value: user.role,\n        disabled: true\n      }, _Object$keys(Role).map(function (item) {\n        return React.createElement(\"option\", {\n          key: item,\n          value: Role[item]\n        }, item);\n      }))), React.createElement(\"div\", {\n        className: \"row mx-0\"\n      }, React.createElement(\"div\", {\n        className: \"form-group col-12 col-md-6 pl-0 card-first\"\n      }, React.createElement(\"label\", null, \"Rank\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        value: user.rank,\n        disabled: true\n      })), React.createElement(\"div\", {\n        className: \"form-group col-12 col-md-6 pr-0 card-last\"\n      }, React.createElement(\"label\", null, \"Agent total commission gain\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        value: user.cash,\n        disabled: true\n      }))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"div\", {\n        className: \"form-check\"\n      }, React.createElement(\"input\", {\n        id: \"checkbox\",\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        checked: !!user.emailVerified,\n        onChange: this._updateUserField('emailVerified')\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"checkbox\"\n      }, t('admin:emailVerified')))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"div\", {\n        className: \"form-check\"\n      }, React.createElement(\"input\", {\n        id: \"isInactive\",\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        checked: !!user.isInactive,\n        onChange: this._updateUserField('isInactive')\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"isInactive\"\n      }, t('admin:isInactive')))), React.createElement(\"button\", {\n        className: \"btn btn-add-new text-white th-font-w-5\",\n        disabled: saving\n      }, t('common:save')))))))));\n    }\n  }]);\n\n  return EditManageAgents;\n}(React.Component);\n\nexport default userOnly(EditManageAgents);","map":{"version":3,"sources":["/home/thang/Documents/GitHub/link-webapi/client/pages/ManageAgents/EditManageAgents.js"],"names":["React","Head","toastr","userOnly","userService","Router","Role","ErrorCode","Constraint","Error","EditManageAgents","ctx","headerText","toggleTimeline","props","e","preventDefault","t","setState","saving","updateUser","state","user","success","error","_getErrorMsg","field","target","type","value","name","key","details","REQUIRED","INVALID_LENGTH","MAX_LENGTH","INVALID_EMAIL","email","EMAIL_EXISTED","password","MIN_LENGTH","message","firstName","lastName","emailVerified","role","USER","rank","cash","id","query","idAgent","getUserFromId","roles","length","pushRoute","currentUser","COORDINATOR","_submit","_updateUserField","map","item","isInactive","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport toastr from 'toastr'\nimport userOnly from '../../hocs/userOnly'\n// import { Rank } from '../../../common/models/User'\nimport { userService } from '../../services'\nimport { Router } from '../../../common/routes'\nimport Role from '../../../common/models/Role'\nimport { ErrorCode } from '../../errors/ValidationError'\nimport { Constraint } from '../../../common/models/User'\nimport Error from 'next/error'\n\nclass EditManageAgents extends React.Component {\n  // static async getInitialProps(ctx) {\n  //   return {\n  //     headerText: 'Manage Agents'\n  //     // activities,\n  //     // parties: otherParties,\n  //     // myParties,\n  //     // partyId: ctx.query.partyId\n  //   }\n  // }\n  static async getInitialProps (ctx) {\n    // const userId = ctx.store.getState().global.loginUser.data.id\n    // const {\n    //   accessType,\n    //   transactions,\n    //   activities,\n    //   percentOfTransactions\n    // } = await _fetchTransactions(userId)\n\n    return {\n      // namePage: 'editAgent',\n      headerText: 'Edit Agent',\n      toggleTimeline: false\n    }\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        emailVerified: false,\n        role: Role.USER,\n        rank: '',\n        cash: ''\n      },\n      saving: false\n    }\n  }\n\n  async componentDidMount () {\n    try {\n      const id = Router.query.idAgent\n      const user = await userService.getUserFromId(id)\n      user.role = (user.roles.length > 0 && user.roles[0].name) || Role.USER\n      this.setState({ user })\n    } catch (error) {\n      Router.pushRoute('/manage-agents')\n    }\n  }\n\n  render () {\n    const { user, saving } = this.state\n    const { t, currentUser } = this.props\n\n    if (currentUser.roles[0].name !== Role.COORDINATOR) {\n      return <Error statusCode={404} />\n    }\n\n    return (\n      <div className='box-main'>\n        <Head>\n          <title>Edit Agents</title>\n        </Head>\n        <section className='content'>\n          <div className=''>\n            <div className='card shadow-sm rounded'>\n              <div className='card-header'>\n                <span className='card-title'>Edit manage form</span>\n              </div>\n              <div className='card-body'>\n                <section className='content'>\n                  <form role='form' onSubmit={this._submit}>\n                    <div className='form-group'>\n                      <label htmlFor='name'>First name</label>\n                      <input\n                        type='text'\n                        className='form-control'\n                        id='input-firstName'\n                        placeholder='First name'\n                        onChange={this._updateUserField('firstName')}\n                        value={user.firstName}\n                      />\n                    </div>\n                    <div className='form-group'>\n                      <label htmlFor='name'>Last name</label>\n                      <input\n                        type='text'\n                        className='form-control'\n                        id='input-lastName'\n                        placeholder='Last name'\n                        onChange={this._updateUserField('lastName')}\n                        value={user.lastName}\n                      />\n                    </div>\n                    <div className='form-group'>\n                      <label htmlFor='email'>{t('common:email')}</label>\n                      <input\n                        type='email'\n                        className='form-control'\n                        id='input-email'\n                        placeholder={t('common:email')}\n                        onChange={this._updateUserField('email')}\n                        value={user.email}\n                      />\n                    </div>\n                    <div className='form-group'>\n                      <label htmlFor='role'>{t('common:role')}</label>\n                      <select\n                        className='form-control'\n                        id='role'\n                        // onChange={this._updateUserField('role')}\n                        value={user.role}\n                        disabled\n                      >\n                        {Object.keys(Role).map(item => (\n                          <option key={item} value={Role[item]}>\n                            {item}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className='row mx-0'>\n                      <div className='form-group col-12 col-md-6 pl-0 card-first'>\n                        <label>Rank</label>\n                        <input\n                          className='form-control'\n                          value={user.rank}\n                          disabled\n                        />\n                      </div>\n                      <div className='form-group col-12 col-md-6 pr-0 card-last'>\n                        <label>Agent total commission gain</label>\n                        <input\n                          className='form-control'\n                          value={user.cash}\n                          disabled\n                        />\n                      </div>\n                    </div>\n                    <div className='form-group'>\n                      <div className='form-check'>\n                        <input\n                          id='checkbox'\n                          type='checkbox'\n                          className='form-check-input'\n                          checked={!!user.emailVerified}\n                          onChange={this._updateUserField('emailVerified')}\n                        />\n                        <label className='form-check-label' htmlFor='checkbox'>\n                          {t('admin:emailVerified')}\n                        </label>\n                      </div>\n                    </div>\n                    <div className='form-group'>\n                      <div className='form-check'>\n                        <input\n                          id='isInactive'\n                          type='checkbox'\n                          className='form-check-input'\n                          checked={!!user.isInactive}\n                          onChange={this._updateUserField('isInactive')}\n                        />\n                        <label\n                          className='form-check-label'\n                          htmlFor='isInactive'\n                        >\n                          {t('admin:isInactive')}\n                        </label>\n                      </div>\n                    </div>\n                    <button\n                      className='btn btn-add-new text-white th-font-w-5'\n                      disabled={saving}\n                    >\n                      {t('common:save')}\n                    </button>\n                  </form>\n                </section>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    )\n  }\n\n  _submit = async e => {\n    e.preventDefault()\n\n    const { t } = this.props\n    this.setState({ saving: true })\n    try {\n      await userService.updateUser(this.state.user)\n      toastr.success(t('common:saved'))\n    } catch (e) {\n      toastr.error(this._getErrorMsg(e))\n    } finally {\n      this.setState({ saving: false })\n    }\n  }\n\n  _updateUserField = field => e => {\n    switch (e.target.type) {\n      case 'checkbox': {\n        this.setState({\n          user: {\n            ...this.state.user,\n            [field]: !this.state.user[field]\n          }\n        })\n        break\n      }\n      default: {\n        this.setState({ user: { ...this.state.user, [field]: e.target.value } })\n      }\n    }\n  }\n\n  _getErrorMsg = e => {\n    switch (e.name) {\n      case 'ValidationError': {\n        const key = Object.keys(e.details)[0]\n        const type = e.details[key][0]\n\n        switch (key) {\n          case 'name': {\n            switch (type) {\n              case ErrorCode.REQUIRED: {\n                return 'Name is required'\n              }\n              case ErrorCode.INVALID_LENGTH: {\n                return `Name must be within ${\n                  Constraint.name.MAX_LENGTH\n                } characters`\n              }\n            }\n            break\n          }\n          case 'email': {\n            switch (type) {\n              case ErrorCode.REQUIRED: {\n                return 'Email is required'\n              }\n              case ErrorCode.INVALID_EMAIL: {\n                return 'Email must be valid'\n              }\n              case ErrorCode.INVALID_LENGTH: {\n                return `Email must be within ${\n                  Constraint.email.MAX_LENGTH\n                } characters`\n              }\n              case ErrorCode.EMAIL_EXISTED: {\n                return 'Email already existed'\n              }\n            }\n            break\n          }\n          case 'password': {\n            switch (type) {\n              case ErrorCode.INVALID_LENGTH: {\n                return `Password must be within ${\n                  Constraint.password.MIN_LENGTH\n                } - ${Constraint.password.MAX_LENGTH} characters`\n              }\n            }\n          }\n        }\n      }\n    }\n    return e.message\n  }\n}\n\nexport default userOnly(EditManageAgents)\n"]},"metadata":{},"sourceType":"module"}