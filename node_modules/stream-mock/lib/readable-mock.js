'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _iterator = require('babel-runtime/core-js/symbol/iterator');

var _iterator2 = _interopRequireDefault(_iterator);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _stream = require('stream');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * ReadableMock take it's input from an iterable instance and emit data for each value.
 * @class
 * @extends stream.Readable
 * @memberof module:readable-mock
 */
var ReadableMock = function (_Readable) {
  (0, _inherits3.default)(ReadableMock, _Readable);

  /**
   * @constructs
   * @param {*} source Source of the reader. Must be iterable.
   * @param {object} options Nodejs {@link https://nodejs.org/api/stream.html#stream_readable_streams stream.Readable} options.
   */
  function ReadableMock(source, options) {
    (0, _classCallCheck3.default)(this, ReadableMock);

    var _this = (0, _possibleConstructorReturn3.default)(this, (ReadableMock.__proto__ || (0, _getPrototypeOf2.default)(ReadableMock)).call(this, options));

    if (source === null || typeof source[_iterator2.default] !== 'function') {
      throw new TypeError('Source must be iterable');
    }
    _this._it = (0, _getIterator3.default)(source);
    return _this;
  }

  /**
   * @private
   * @see {@link https://nodejs.org/api/stream.html#stream_readable_read_size_1 Nodejs documentation}
   */


  (0, _createClass3.default)(ReadableMock, [{
    key: '_read',
    value: function _read() {
      var next = this._it.next();
      if (next.done) {
        this.push(null);
      } else if (this._readableState.objectMode) {
        this.push(next.value);
      } else {
        var buf = Buffer.from(next.value.toString(), this._readableState.encoding);
        this.push(buf);
      }
    }
  }]);
  return ReadableMock;
}(_stream.Readable); /**
                      * @module readable-mock
                      * @requires stream.Readable
                      */


exports.default = ReadableMock;