'use strict';
var fs = require('fs');
var standardReporter = require('../standard-reporter');
var path = require('path');
var test = require('tape');
var through2 = require('through2');
var series = require('run-series');

var fixturePath = path.join(__dirname, 'fixture.stdout');

var types = ['json', 'stylish', 'checkstyle', 'none'];

test('reporters', function t(assert) {
    var tests = types.map(function makeTest(type) {
        return checkType(type, assert);
    });
    series(tests, assert.end);
});

function checkType(type, assert) {
    return function testType(done) {
        var expectedStdout = path.join(__dirname, 'expected-' + type +
            '.stdout');
        var fixtureStream = fs.createReadStream(fixturePath, 'utf8');
        var output = '';

        var sink = through2(collectOutput, flush);

        function collectOutput(chunk, enc, callback) {
            output += chunk;
            callback();
        }

        function flush(callback) {
            fs.readFile(expectedStdout, 'utf8', onExpectedStdout);

            function onExpectedStdout(err, stdout) {
                if (err) {
                    assert.error(err);
                }
                assert.equal(output, stdout, type + ' reporter stdout');
                callback();
            }
        }

        sink.on('finish', done);

        fixtureStream.pipe(standardReporter({
            type: type,
            colors: false,
            sink: sink
        }));

    };
}
